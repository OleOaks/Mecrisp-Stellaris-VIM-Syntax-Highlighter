*mcu.txt*  Help for STM32F0x1.svd MCU Peripherals

 PERIPHERALS for STM32F0x1.svd~

 --------------+-----------+---------------------------------------------------------
    Peripheral | Address   |  Description
 --------------+-----------+---------------------------------------------------------
           |CRC| | $40023000 | cyclic redundancy check calculation unit
         |GPIOF| | $48001400 | General-purpose I/Os
         |GPIOD| | $48000C00 | General-purpose I/Os
         |GPIOC| | $48000800 | General-purpose I/Os
         |GPIOB| | $48000400 | General-purpose I/Os
         |GPIOE| | $48001000 | General-purpose I/Os
         |GPIOA| | $48000000 | General-purpose I/Os
          |SPI1| | $40013000 | Serial peripheral interface
          |SPI2| | $40003800 | Serial peripheral interface
           |PWR| | $40007000 | Power control
          |I2C1| | $40005400 | Inter-integrated circuit
          |I2C2| | $40005800 | Inter-integrated circuit
          |IWDG| | $40003000 | Independent watchdog
          |WWDG| | $40002C00 | Window watchdog
          |TIM1| | $40012C00 | Advanced-timers
          |TIM2| | $40000000 | General-purpose-timers
          |TIM3| | $40000400 | General-purpose-timers
         |TIM14| | $40002000 | General-purpose-timers
          |TIM6| | $40001000 | Basic-timers
          |TIM7| | $40001400 | Basic-timers
          |EXTI| | $40010400 | External interrupt/event controller
          |NVIC| | $E000E100 | Nested Vectored Interrupt Controller
          |DMA1| | $40020000 | DMA controller
          |DMA2| | $40020400 | DMA controller
           |RCC| | $40021000 | Reset and clock control
   |SYSCFG_COMP| | $40010000 | System configuration controller
           |ADC| | $40012400 | Analog-to-digital converter
        |USART1| | $40013800 | Universal synchronous asynchronous receiver transmitter
        |USART2| | $40004400 | Universal synchronous asynchronous receiver transmitter
        |USART3| | $40004800 | Universal synchronous asynchronous receiver transmitter
        |USART4| | $40004C00 | Universal synchronous asynchronous receiver transmitter
        |USART6| | $40011400 | Universal synchronous asynchronous receiver transmitter
        |USART7| | $40011800 | Universal synchronous asynchronous receiver transmitter
        |USART8| | $40011C00 | Universal synchronous asynchronous receiver transmitter
        |USART5| | $40005000 | Universal synchronous asynchronous receiver transmitter
           |RTC| | $40002800 | Real-time clock
         |TIM15| | $40014000 | General-purpose-timers
         |TIM16| | $40014400 | General-purpose-timers
         |TIM17| | $40014800 | General-purpose-timers
           |TSC| | $40024000 | Touch sensing controller
           |CEC| | $40007800 | HDMI-CEC controller
         |Flash| | $40022000 | Flash
        |DBGMCU| | $40015800 | Debug support
           |USB| | $40005C00 | Universal serial bus full-speed device interface
           |CRS| | $40006C00 | Clock recovery system
           |CAN| | $40006400 | Controller area network
           |DAC| | $40007400 | Digital-to-analog converter
           |SCB| | $E000ED00 | System control block
           |STK| | $E000E010 | SysTick timer
 --------------+-----------+---------------------------------------------------------




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *CRC* BaseAddress:  $40023000
 Description:  cyclic redundancy check calculation unit

 -----------+----+-----------+--------+-----------+---------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+---------------------------
     |CRC_DR| | rw | $FFFFFFFF | $0     | $40023000 | Data register
    |CRC_IDR| | rw | $00000000 | $4     | $40023004 | Independent data register
     |CRC_CR| | rw | $00000000 | $8     | $40023008 | Control register
   |CRC_INIT| | rw | $FFFFFFFF | $C     | $4002300C | Initial CRC value
 -----------+----+-----------+--------+-----------+---------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *GPIOF* BaseAddress:  $48001400
 Description:  General-purpose I/Os

 ---------------+----+-----------+--------+-----------+---------------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+---------------------------------------
    |GPIOF_MODER| | rw | $00000000 | $0     | $48001400 | GPIO port mode register
   |GPIOF_OTYPER| | rw | $00000000 | $4     | $48001404 | GPIO port output type register
  |GPIOF_OSPEEDR| | rw | $00000000 | $8     | $48001408 | GPIO port output speed register
    |GPIOF_PUPDR| | rw | $00000000 | $C     | $4800140C | GPIO port pull-up/pull-down register
      |GPIOF_IDR| | ro | $00000000 | $10    | $48001410 | GPIO port input data register
      |GPIOF_ODR| | rw | $00000000 | $14    | $48001414 | GPIO port output data register
     |GPIOF_BSRR| | wo | $00000000 | $18    | $48001418 | GPIO port bit set/reset register
     |GPIOF_LCKR| | rw | $00000000 | $1C    | $4800141C | GPIO port configuration lock register
     |GPIOF_AFRL| | rw | $00000000 | $20    | $48001420 | GPIO alternate function low register
     |GPIOF_AFRH| | rw | $00000000 | $24    | $48001424 | GPIO alternate function high register
      |GPIOF_BRR| | wo | $00000000 | $28    | $48001428 | Port bit reset register
 ---------------+----+-----------+--------+-----------+---------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *GPIOD* BaseAddress:  $48000C00
 Description:  General-purpose I/Os

 ---------------+----+-----------+--------+-----------+---------------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+---------------------------------------
    |GPIOD_MODER| | rw | $00000000 | $0     | $48000C00 | GPIO port mode register
   |GPIOD_OTYPER| | rw | $00000000 | $4     | $48000C04 | GPIO port output type register
  |GPIOD_OSPEEDR| | rw | $00000000 | $8     | $48000C08 | GPIO port output speed register
    |GPIOD_PUPDR| | rw | $00000000 | $C     | $48000C0C | GPIO port pull-up/pull-down register
      |GPIOD_IDR| | ro | $00000000 | $10    | $48000C10 | GPIO port input data register
      |GPIOD_ODR| | rw | $00000000 | $14    | $48000C14 | GPIO port output data register
     |GPIOD_BSRR| | wo | $00000000 | $18    | $48000C18 | GPIO port bit set/reset register
     |GPIOD_LCKR| | rw | $00000000 | $1C    | $48000C1C | GPIO port configuration lock register
     |GPIOD_AFRL| | rw | $00000000 | $20    | $48000C20 | GPIO alternate function low register
     |GPIOD_AFRH| | rw | $00000000 | $24    | $48000C24 | GPIO alternate function high register
      |GPIOD_BRR| | wo | $00000000 | $28    | $48000C28 | Port bit reset register
 ---------------+----+-----------+--------+-----------+---------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *GPIOC* BaseAddress:  $48000800
 Description:  General-purpose I/Os

 ---------------+----+-----------+--------+-----------+---------------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+---------------------------------------
    |GPIOC_MODER| | rw | $00000000 | $0     | $48000800 | GPIO port mode register
   |GPIOC_OTYPER| | rw | $00000000 | $4     | $48000804 | GPIO port output type register
  |GPIOC_OSPEEDR| | rw | $00000000 | $8     | $48000808 | GPIO port output speed register
    |GPIOC_PUPDR| | rw | $00000000 | $C     | $4800080C | GPIO port pull-up/pull-down register
      |GPIOC_IDR| | ro | $00000000 | $10    | $48000810 | GPIO port input data register
      |GPIOC_ODR| | rw | $00000000 | $14    | $48000814 | GPIO port output data register
     |GPIOC_BSRR| | wo | $00000000 | $18    | $48000818 | GPIO port bit set/reset register
     |GPIOC_LCKR| | rw | $00000000 | $1C    | $4800081C | GPIO port configuration lock register
     |GPIOC_AFRL| | rw | $00000000 | $20    | $48000820 | GPIO alternate function low register
     |GPIOC_AFRH| | rw | $00000000 | $24    | $48000824 | GPIO alternate function high register
      |GPIOC_BRR| | wo | $00000000 | $28    | $48000828 | Port bit reset register
 ---------------+----+-----------+--------+-----------+---------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *GPIOB* BaseAddress:  $48000400
 Description:  General-purpose I/Os

 ---------------+----+-----------+--------+-----------+---------------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+---------------------------------------
    |GPIOB_MODER| | rw | $00000000 | $0     | $48000400 | GPIO port mode register
   |GPIOB_OTYPER| | rw | $00000000 | $4     | $48000404 | GPIO port output type register
  |GPIOB_OSPEEDR| | rw | $00000000 | $8     | $48000408 | GPIO port output speed register
    |GPIOB_PUPDR| | rw | $00000000 | $C     | $4800040C | GPIO port pull-up/pull-down register
      |GPIOB_IDR| | ro | $00000000 | $10    | $48000410 | GPIO port input data register
      |GPIOB_ODR| | rw | $00000000 | $14    | $48000414 | GPIO port output data register
     |GPIOB_BSRR| | wo | $00000000 | $18    | $48000418 | GPIO port bit set/reset register
     |GPIOB_LCKR| | rw | $00000000 | $1C    | $4800041C | GPIO port configuration lock register
     |GPIOB_AFRL| | rw | $00000000 | $20    | $48000420 | GPIO alternate function low register
     |GPIOB_AFRH| | rw | $00000000 | $24    | $48000424 | GPIO alternate function high register
      |GPIOB_BRR| | wo | $00000000 | $28    | $48000428 | Port bit reset register
 ---------------+----+-----------+--------+-----------+---------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *GPIOE* BaseAddress:  $48001000
 Description:  General-purpose I/Os

 ---------------+----+-----------+--------+-----------+---------------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+---------------------------------------
    |GPIOE_MODER| | rw | $00000000 | $0     | $48001000 | GPIO port mode register
   |GPIOE_OTYPER| | rw | $00000000 | $4     | $48001004 | GPIO port output type register
  |GPIOE_OSPEEDR| | rw | $00000000 | $8     | $48001008 | GPIO port output speed register
    |GPIOE_PUPDR| | rw | $00000000 | $C     | $4800100C | GPIO port pull-up/pull-down register
      |GPIOE_IDR| | ro | $00000000 | $10    | $48001010 | GPIO port input data register
      |GPIOE_ODR| | rw | $00000000 | $14    | $48001014 | GPIO port output data register
     |GPIOE_BSRR| | wo | $00000000 | $18    | $48001018 | GPIO port bit set/reset register
     |GPIOE_LCKR| | rw | $00000000 | $1C    | $4800101C | GPIO port configuration lock register
     |GPIOE_AFRL| | rw | $00000000 | $20    | $48001020 | GPIO alternate function low register
     |GPIOE_AFRH| | rw | $00000000 | $24    | $48001024 | GPIO alternate function high register
      |GPIOE_BRR| | wo | $00000000 | $28    | $48001028 | Port bit reset register
 ---------------+----+-----------+--------+-----------+---------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *GPIOA* BaseAddress:  $48000000
 Description:  General-purpose I/Os

 ---------------+----+-----------+--------+-----------+---------------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+---------------------------------------
    |GPIOA_MODER| | rw | $28000000 | $0     | $48000000 | GPIO port mode register
   |GPIOA_OTYPER| | rw | $00000000 | $4     | $48000004 | GPIO port output type register
  |GPIOA_OSPEEDR| | rw | $00000000 | $8     | $48000008 | GPIO port output speed register
    |GPIOA_PUPDR| | rw | $24000000 | $C     | $4800000C | GPIO port pull-up/pull-down register
      |GPIOA_IDR| | ro | $00000000 | $10    | $48000010 | GPIO port input data register
      |GPIOA_ODR| | rw | $00000000 | $14    | $48000014 | GPIO port output data register
     |GPIOA_BSRR| | wo | $00000000 | $18    | $48000018 | GPIO port bit set/reset register
     |GPIOA_LCKR| | rw | $00000000 | $1C    | $4800001C | GPIO port configuration lock register
     |GPIOA_AFRL| | rw | $00000000 | $20    | $48000020 | GPIO alternate function low register
     |GPIOA_AFRH| | rw | $00000000 | $24    | $48000024 | GPIO alternate function high register
      |GPIOA_BRR| | wo | $00000000 | $28    | $48000028 | Port bit reset register
 ---------------+----+-----------+--------+-----------+---------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *SPI1* BaseAddress:  $40013000
 Description:  Serial peripheral interface

 --------------+----+-----------+--------+-----------+----------------------------
      Register | ac | Reset     | Offset | Address   |  Description
 --------------+----+-----------+--------+-----------+----------------------------
      |SPI1_CR1| | rw | $0000     | $0     | $40013000 | control register 1
      |SPI1_CR2| | rw | $0000     | $4     | $40013004 | control register 2
       |SPI1_SR| |    | $0002     | $8     | $40013008 | status register
       |SPI1_DR| | rw | $0000     | $C     | $4001300C | data register
    |SPI1_CRCPR| | rw | $0007     | $10    | $40013010 | CRC polynomial register
   |SPI1_RXCRCR| | ro | $0000     | $14    | $40013014 | RX CRC register
   |SPI1_TXCRCR| | ro | $0000     | $18    | $40013018 | TX CRC register
  |SPI1_I2SCFGR| | rw | $0000     | $1C    | $4001301C | I2S configuration register
    |SPI1_I2SPR| | rw | $00000010 | $20    | $40013020 | I2S prescaler register
 --------------+----+-----------+--------+-----------+----------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *SPI2* BaseAddress:  $40003800
 Description:  Serial peripheral interface

 --------------+----+-----------+--------+-----------+----------------------------
      Register | ac | Reset     | Offset | Address   |  Description
 --------------+----+-----------+--------+-----------+----------------------------
      |SPI2_CR1| | rw | $0000     | $0     | $40003800 | control register 1
      |SPI2_CR2| | rw | $0000     | $4     | $40003804 | control register 2
       |SPI2_SR| |    | $0002     | $8     | $40003808 | status register
       |SPI2_DR| | rw | $0000     | $C     | $4000380C | data register
    |SPI2_CRCPR| | rw | $0007     | $10    | $40003810 | CRC polynomial register
   |SPI2_RXCRCR| | ro | $0000     | $14    | $40003814 | RX CRC register
   |SPI2_TXCRCR| | ro | $0000     | $18    | $40003818 | TX CRC register
  |SPI2_I2SCFGR| | rw | $0000     | $1C    | $4000381C | I2S configuration register
    |SPI2_I2SPR| | rw | $00000010 | $20    | $40003820 | I2S prescaler register
 --------------+----+-----------+--------+-----------+----------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *PWR* BaseAddress:  $40007000
 Description:  Power control

 -----------+----+-----------+--------+-----------+-------------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+-------------------------------
     |PWR_CR| | rw | $00000000 | $0     | $40007000 | power control register
    |PWR_CSR| |    | $00000000 | $4     | $40007004 | power control/status register
 -----------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *I2C1* BaseAddress:  $40005400
 Description:  Inter-integrated circuit

 ---------------+----+-----------+--------+-----------+-------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+-------------------------------
       |I2C1_CR1| |    | $00000000 | $0     | $40005400 | Control register 1
       |I2C1_CR2| | rw | $00000000 | $4     | $40005404 | Control register 2
      |I2C1_OAR1| | rw | $00000000 | $8     | $40005408 | Own address register 1
      |I2C1_OAR2| | rw | $00000000 | $C     | $4000540C | Own address register 2
   |I2C1_TIMINGR| | rw | $00000000 | $10    | $40005410 | Timing register
  |I2C1_TIMEOUTR| | rw | $00000000 | $14    | $40005414 | Status register 1
       |I2C1_ISR| |    | $00000001 | $18    | $40005418 | Interrupt and Status register
       |I2C1_ICR| | wo | $00000000 | $1C    | $4000541C | Interrupt clear register
      |I2C1_PECR| | ro | $00000000 | $20    | $40005420 | PEC register
      |I2C1_RXDR| | ro | $00000000 | $24    | $40005424 | Receive data register
      |I2C1_TXDR| | rw | $00000000 | $28    | $40005428 | Transmit data register
 ---------------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *I2C2* BaseAddress:  $40005800
 Description:  Inter-integrated circuit

 ---------------+----+-----------+--------+-----------+-------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+-------------------------------
       |I2C2_CR1| |    | $00000000 | $0     | $40005800 | Control register 1
       |I2C2_CR2| | rw | $00000000 | $4     | $40005804 | Control register 2
      |I2C2_OAR1| | rw | $00000000 | $8     | $40005808 | Own address register 1
      |I2C2_OAR2| | rw | $00000000 | $C     | $4000580C | Own address register 2
   |I2C2_TIMINGR| | rw | $00000000 | $10    | $40005810 | Timing register
  |I2C2_TIMEOUTR| | rw | $00000000 | $14    | $40005814 | Status register 1
       |I2C2_ISR| |    | $00000001 | $18    | $40005818 | Interrupt and Status register
       |I2C2_ICR| | wo | $00000000 | $1C    | $4000581C | Interrupt clear register
      |I2C2_PECR| | ro | $00000000 | $20    | $40005820 | PEC register
      |I2C2_RXDR| | ro | $00000000 | $24    | $40005824 | Receive data register
      |I2C2_TXDR| | rw | $00000000 | $28    | $40005828 | Transmit data register
 ---------------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *IWDG* BaseAddress:  $40003000
 Description:  Independent watchdog

 -----------+----+-----------+--------+-----------+--------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+--------------------
    |IWDG_KR| | wo | $00000000 | $0     | $40003000 | Key register
    |IWDG_PR| | rw | $00000000 | $4     | $40003004 | Prescaler register
   |IWDG_RLR| | rw | $00000FFF | $8     | $40003008 | Reload register
    |IWDG_SR| | ro | $00000000 | $C     | $4000300C | Status register
  |IWDG_WINR| | rw | $00000FFF | $10    | $40003010 | Window register
 -----------+----+-----------+--------+-----------+--------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *WWDG* BaseAddress:  $40002C00
 Description:  Window watchdog

 -----------+----+-----------+--------+-----------+------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+------------------------
    |WWDG_CR| | rw | $0000007F | $0     | $40002C00 | Control register
   |WWDG_CFR| | rw | $0000007F | $4     | $40002C04 | Configuration register
    |WWDG_SR| | rw | $00000000 | $8     | $40002C08 | Status register
 -----------+----+-----------+--------+-----------+------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM1* BaseAddress:  $40012C00
 Description:  Advanced-timers

 -------------------+----+-----------+--------+-----------+----------------------------------------------
           Register | ac | Reset     | Offset | Address   |  Description
 -------------------+----+-----------+--------+-----------+----------------------------------------------
           |TIM1_CR1| | rw | $0000     | $0     | $40012C00 | control register 1
           |TIM1_CR2| | rw | $0000     | $4     | $40012C04 | control register 2
          |TIM1_SMCR| | rw | $0000     | $8     | $40012C08 | slave mode control register
          |TIM1_DIER| | rw | $0000     | $C     | $40012C0C | DMA/Interrupt enable register
            |TIM1_SR| | rw | $0000     | $10    | $40012C10 | status register
           |TIM1_EGR| | wo | $0000     | $14    | $40012C14 | event generation register
  |TIM1_CCMR1_Output| | rw | $00000000 | $18    | $40012C18 | capture/compare mode register (output mode)
   |TIM1_CCMR1_Input| | rw | $00000000 | $18    | $40012C18 | capture/compare mode register 1 (input mode)
  |TIM1_CCMR2_Output| | rw | $00000000 | $1C    | $40012C1C | capture/compare mode register (output mode)
   |TIM1_CCMR2_Input| | rw | $00000000 | $1C    | $40012C1C | capture/compare mode register 2 (input mode)
          |TIM1_CCER| | rw | $0000     | $20    | $40012C20 | capture/compare enable register
           |TIM1_CNT| | rw | $00000000 | $24    | $40012C24 | counter
           |TIM1_PSC| | rw | $0000     | $28    | $40012C28 | prescaler
           |TIM1_ARR| | rw | $00000000 | $2C    | $40012C2C | auto-reload register
           |TIM1_RCR| | rw | $0000     | $30    | $40012C30 | repetition counter register
          |TIM1_CCR1| | rw | $00000000 | $34    | $40012C34 | capture/compare register 1
          |TIM1_CCR2| | rw | $00000000 | $38    | $40012C38 | capture/compare register 2
          |TIM1_CCR3| | rw | $00000000 | $3C    | $40012C3C | capture/compare register 3
          |TIM1_CCR4| | rw | $00000000 | $40    | $40012C40 | capture/compare register 4
          |TIM1_BDTR| | rw | $0000     | $44    | $40012C44 | break and dead-time register
           |TIM1_DCR| | rw | $0000     | $48    | $40012C48 | DMA control register
          |TIM1_DMAR| | rw | $0000     | $4C    | $40012C4C | DMA address for full transfer
 -------------------+----+-----------+--------+-----------+----------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM2* BaseAddress:  $40000000
 Description:  General-purpose-timers

 -------------------+----+-----------+--------+-----------+-----------------------------------------------
           Register | ac | Reset     | Offset | Address   |  Description
 -------------------+----+-----------+--------+-----------+-----------------------------------------------
           |TIM2_CR1| | rw | $0000     | $0     | $40000000 | control register 1
           |TIM2_CR2| | rw | $0000     | $4     | $40000004 | control register 2
          |TIM2_SMCR| | rw | $0000     | $8     | $40000008 | slave mode control register
          |TIM2_DIER| | rw | $0000     | $C     | $4000000C | DMA/Interrupt enable register
            |TIM2_SR| | rw | $0000     | $10    | $40000010 | status register
           |TIM2_EGR| | wo | $0000     | $14    | $40000014 | event generation register
  |TIM2_CCMR1_Output| | rw | $00000000 | $18    | $40000018 | capture/compare mode register 1 (output mode)
   |TIM2_CCMR1_Input| | rw | $00000000 | $18    | $40000018 | capture/compare mode register 1 (input mode)
  |TIM2_CCMR2_Output| | rw | $00000000 | $1C    | $4000001C | capture/compare mode register 2 (output mode)
   |TIM2_CCMR2_Input| | rw | $00000000 | $1C    | $4000001C | capture/compare mode register 2 (input mode)
          |TIM2_CCER| | rw | $0000     | $20    | $40000020 | capture/compare enable register
           |TIM2_CNT| | rw | $00000000 | $24    | $40000024 | counter
           |TIM2_PSC| | rw | $0000     | $28    | $40000028 | prescaler
           |TIM2_ARR| | rw | $00000000 | $2C    | $4000002C | auto-reload register
          |TIM2_CCR1| | rw | $00000000 | $34    | $40000034 | capture/compare register 1
          |TIM2_CCR2| | rw | $00000000 | $38    | $40000038 | capture/compare register 2
          |TIM2_CCR3| | rw | $00000000 | $3C    | $4000003C | capture/compare register 3
          |TIM2_CCR4| | rw | $00000000 | $40    | $40000040 | capture/compare register 4
           |TIM2_DCR| | rw | $0000     | $48    | $40000048 | DMA control register
          |TIM2_DMAR| | rw | $0000     | $4C    | $4000004C | DMA address for full transfer
 -------------------+----+-----------+--------+-----------+-----------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM3* BaseAddress:  $40000400
 Description:  General-purpose-timers

 -------------------+----+-----------+--------+-----------+-----------------------------------------------
           Register | ac | Reset     | Offset | Address   |  Description
 -------------------+----+-----------+--------+-----------+-----------------------------------------------
           |TIM3_CR1| | rw | $0000     | $0     | $40000400 | control register 1
           |TIM3_CR2| | rw | $0000     | $4     | $40000404 | control register 2
          |TIM3_SMCR| | rw | $0000     | $8     | $40000408 | slave mode control register
          |TIM3_DIER| | rw | $0000     | $C     | $4000040C | DMA/Interrupt enable register
            |TIM3_SR| | rw | $0000     | $10    | $40000410 | status register
           |TIM3_EGR| | wo | $0000     | $14    | $40000414 | event generation register
  |TIM3_CCMR1_Output| | rw | $00000000 | $18    | $40000418 | capture/compare mode register 1 (output mode)
   |TIM3_CCMR1_Input| | rw | $00000000 | $18    | $40000418 | capture/compare mode register 1 (input mode)
  |TIM3_CCMR2_Output| | rw | $00000000 | $1C    | $4000041C | capture/compare mode register 2 (output mode)
   |TIM3_CCMR2_Input| | rw | $00000000 | $1C    | $4000041C | capture/compare mode register 2 (input mode)
          |TIM3_CCER| | rw | $0000     | $20    | $40000420 | capture/compare enable register
           |TIM3_CNT| | rw | $00000000 | $24    | $40000424 | counter
           |TIM3_PSC| | rw | $0000     | $28    | $40000428 | prescaler
           |TIM3_ARR| | rw | $00000000 | $2C    | $4000042C | auto-reload register
          |TIM3_CCR1| | rw | $00000000 | $34    | $40000434 | capture/compare register 1
          |TIM3_CCR2| | rw | $00000000 | $38    | $40000438 | capture/compare register 2
          |TIM3_CCR3| | rw | $00000000 | $3C    | $4000043C | capture/compare register 3
          |TIM3_CCR4| | rw | $00000000 | $40    | $40000440 | capture/compare register 4
           |TIM3_DCR| | rw | $0000     | $48    | $40000448 | DMA control register
          |TIM3_DMAR| | rw | $0000     | $4C    | $4000044C | DMA address for full transfer
 -------------------+----+-----------+--------+-----------+-----------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM14* BaseAddress:  $40002000
 Description:  General-purpose-timers

 --------------------+----+-----------+--------+-----------+---------------------------------------------
            Register | ac | Reset     | Offset | Address   |  Description
 --------------------+----+-----------+--------+-----------+---------------------------------------------
           |TIM14_CR1| | rw | $0000     | $0     | $40002000 | control register 1
          |TIM14_DIER| | rw | $0000     | $C     | $4000200C | DMA/Interrupt enable register
            |TIM14_SR| | rw | $0000     | $10    | $40002010 | status register
           |TIM14_EGR| | wo | $0000     | $14    | $40002014 | event generation register
  |TIM14_CCMR1_Output| | rw | $00000000 | $18    | $40002018 | capture/compare mode register (output mode)
   |TIM14_CCMR1_Input| | rw | $00000000 | $18    | $40002018 | capture/compare mode register (input mode)
          |TIM14_CCER| | rw | $0000     | $20    | $40002020 | capture/compare enable register
           |TIM14_CNT| | rw | $00000000 | $24    | $40002024 | counter
           |TIM14_PSC| | rw | $0000     | $28    | $40002028 | prescaler
           |TIM14_ARR| | rw | $00000000 | $2C    | $4000202C | auto-reload register
          |TIM14_CCR1| | rw | $00000000 | $34    | $40002034 | capture/compare register 1
            |TIM14_OR| | rw | $00000000 | $50    | $40002050 | option register
 --------------------+----+-----------+--------+-----------+---------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM6* BaseAddress:  $40001000
 Description:  Basic-timers

 -----------+----+-----------+--------+-----------+-------------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+-------------------------------
   |TIM6_CR1| | rw | $0000     | $0     | $40001000 | control register 1
   |TIM6_CR2| | rw | $0000     | $4     | $40001004 | control register 2
  |TIM6_DIER| | rw | $0000     | $C     | $4000100C | DMA/Interrupt enable register
    |TIM6_SR| | rw | $0000     | $10    | $40001010 | status register
   |TIM6_EGR| | wo | $0000     | $14    | $40001014 | event generation register
   |TIM6_CNT| | rw | $00000000 | $24    | $40001024 | counter
   |TIM6_PSC| | rw | $0000     | $28    | $40001028 | prescaler
   |TIM6_ARR| | rw | $00000000 | $2C    | $4000102C | auto-reload register
 -----------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM7* BaseAddress:  $40001400
 Description:  Basic-timers

 -----------+----+-----------+--------+-----------+-------------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+-------------------------------
   |TIM7_CR1| | rw | $0000     | $0     | $40001400 | control register 1
   |TIM7_CR2| | rw | $0000     | $4     | $40001404 | control register 2
  |TIM7_DIER| | rw | $0000     | $C     | $4000140C | DMA/Interrupt enable register
    |TIM7_SR| | rw | $0000     | $10    | $40001410 | status register
   |TIM7_EGR| | wo | $0000     | $14    | $40001414 | event generation register
   |TIM7_CNT| | rw | $00000000 | $24    | $40001424 | counter
   |TIM7_PSC| | rw | $0000     | $28    | $40001428 | prescaler
   |TIM7_ARR| | rw | $00000000 | $2C    | $4000142C | auto-reload register
 -----------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *EXTI* BaseAddress:  $40010400
 Description:  External interrupt/event controller

 ------------+----+-----------+--------+-----------+------------------------------------------------
    Register | ac | Reset     | Offset | Address   |  Description
 ------------+----+-----------+--------+-----------+------------------------------------------------
    |EXTI_IMR| | rw | $0F940000 | $0     | $40010400 | Interrupt mask register (EXTI_IMR)
    |EXTI_EMR| | rw | $00000000 | $4     | $40010404 | Event mask register (EXTI_EMR)
   |EXTI_RTSR| | rw | $00000000 | $8     | $40010408 | Rising Trigger selection register (EXTI_RTSR)
   |EXTI_FTSR| | rw | $00000000 | $C     | $4001040C | Falling Trigger selection register (EXTI_FTSR)
  |EXTI_SWIER| | rw | $00000000 | $10    | $40010410 | Software interrupt event register (EXTI_SWIER)
     |EXTI_PR| | rw | $00000000 | $14    | $40010414 | Pending register (EXTI_PR)
 ------------+----+-----------+--------+-----------+------------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *NVIC* BaseAddress:  $E000E100
 Description:  Nested Vectored Interrupt Controller

 -----------+----+-----------+--------+-----------+----------------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+----------------------------------
  |NVIC_ISER| | rw | $00000000 | $0     | $E000E100 | Interrupt Set Enable Register
  |NVIC_ICER| | rw | $00000000 | $80    | $E000E180 | Interrupt Clear Enable Register
  |NVIC_ISPR| | rw | $00000000 | $100   | $E000E200 | Interrupt Set-Pending Register
  |NVIC_ICPR| | rw | $00000000 | $180   | $E000E280 | Interrupt Clear-Pending Register
  |NVIC_IPR0| | rw | $00000000 | $300   | $E000E400 | Interrupt Priority Register 0
  |NVIC_IPR1| | rw | $00000000 | $304   | $E000E404 | Interrupt Priority Register 1
  |NVIC_IPR2| | rw | $00000000 | $308   | $E000E408 | Interrupt Priority Register 2
  |NVIC_IPR3| | rw | $00000000 | $30C   | $E000E40C | Interrupt Priority Register 3
  |NVIC_IPR4| | rw | $00000000 | $310   | $E000E410 | Interrupt Priority Register 4
  |NVIC_IPR5| | rw | $00000000 | $314   | $E000E414 | Interrupt Priority Register 5
  |NVIC_IPR6| | rw | $00000000 | $318   | $E000E418 | Interrupt Priority Register 6
  |NVIC_IPR7| | rw | $00000000 | $31C   | $E000E41C | Interrupt Priority Register 7
 -----------+----+-----------+--------+-----------+----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *DMA1* BaseAddress:  $40020000
 Description:  DMA controller

 -------------+----+-----------+--------+-----------+----------------------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+----------------------------------------------
     |DMA1_ISR| | ro | $00000000 | $0     | $40020000 | DMA interrupt status register (DMA_ISR)
    |DMA1_IFCR| | wo | $00000000 | $4     | $40020004 | DMA interrupt flag clear register (DMA_IFCR)
    |DMA1_CCR1| | rw | $00000000 | $8     | $40020008 | DMA channel configuration register (DMA_CCR)
  |DMA1_CNDTR1| | rw | $00000000 | $C     | $4002000C | DMA channel 1 number of data register
   |DMA1_CPAR1| | rw | $00000000 | $10    | $40020010 | DMA channel 1 peripheral address register
   |DMA1_CMAR1| | rw | $00000000 | $14    | $40020014 | DMA channel 1 memory address register
    |DMA1_CCR2| | rw | $00000000 | $1C    | $4002001C | DMA channel configuration register (DMA_CCR)
  |DMA1_CNDTR2| | rw | $00000000 | $20    | $40020020 | DMA channel 2 number of data register
   |DMA1_CPAR2| | rw | $00000000 | $24    | $40020024 | DMA channel 2 peripheral address register
   |DMA1_CMAR2| | rw | $00000000 | $28    | $40020028 | DMA channel 2 memory address register
    |DMA1_CCR3| | rw | $00000000 | $30    | $40020030 | DMA channel configuration register (DMA_CCR)
  |DMA1_CNDTR3| | rw | $00000000 | $34    | $40020034 | DMA channel 3 number of data register
   |DMA1_CPAR3| | rw | $00000000 | $38    | $40020038 | DMA channel 3 peripheral address register
   |DMA1_CMAR3| | rw | $00000000 | $3C    | $4002003C | DMA channel 3 memory address register
    |DMA1_CCR4| | rw | $00000000 | $44    | $40020044 | DMA channel configuration register (DMA_CCR)
  |DMA1_CNDTR4| | rw | $00000000 | $48    | $40020048 | DMA channel 4 number of data register
   |DMA1_CPAR4| | rw | $00000000 | $4C    | $4002004C | DMA channel 4 peripheral address register
   |DMA1_CMAR4| | rw | $00000000 | $50    | $40020050 | DMA channel 4 memory address register
    |DMA1_CCR5| | rw | $00000000 | $58    | $40020058 | DMA channel configuration register (DMA_CCR)
  |DMA1_CNDTR5| | rw | $00000000 | $5C    | $4002005C | DMA channel 5 number of data register
   |DMA1_CPAR5| | rw | $00000000 | $60    | $40020060 | DMA channel 5 peripheral address register
   |DMA1_CMAR5| | rw | $00000000 | $64    | $40020064 | DMA channel 5 memory address register
    |DMA1_CCR6| | rw | $00000000 | $6C    | $4002006C | DMA channel configuration register (DMA_CCR)
  |DMA1_CNDTR6| | rw | $00000000 | $70    | $40020070 | DMA channel 6 number of data register
   |DMA1_CPAR6| | rw | $00000000 | $74    | $40020074 | DMA channel 6 peripheral address register
   |DMA1_CMAR6| | rw | $00000000 | $78    | $40020078 | DMA channel 6 memory address register
    |DMA1_CCR7| | rw | $00000000 | $80    | $40020080 | DMA channel configuration register (DMA_CCR)
  |DMA1_CNDTR7| | rw | $00000000 | $84    | $40020084 | DMA channel 7 number of data register
   |DMA1_CPAR7| | rw | $00000000 | $88    | $40020088 | DMA channel 7 peripheral address register
   |DMA1_CMAR7| | rw | $00000000 | $8C    | $4002008C | DMA channel 7 memory address register
 -------------+----+-----------+--------+-----------+----------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *DMA2* BaseAddress:  $40020400
 Description:  DMA controller

 -------------+----+-----------+--------+-----------+----------------------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+----------------------------------------------
     |DMA2_ISR| | ro | $00000000 | $0     | $40020400 | DMA interrupt status register (DMA_ISR)
    |DMA2_IFCR| | wo | $00000000 | $4     | $40020404 | DMA interrupt flag clear register (DMA_IFCR)
    |DMA2_CCR1| | rw | $00000000 | $8     | $40020408 | DMA channel configuration register (DMA_CCR)
  |DMA2_CNDTR1| | rw | $00000000 | $C     | $4002040C | DMA channel 1 number of data register
   |DMA2_CPAR1| | rw | $00000000 | $10    | $40020410 | DMA channel 1 peripheral address register
   |DMA2_CMAR1| | rw | $00000000 | $14    | $40020414 | DMA channel 1 memory address register
    |DMA2_CCR2| | rw | $00000000 | $1C    | $4002041C | DMA channel configuration register (DMA_CCR)
  |DMA2_CNDTR2| | rw | $00000000 | $20    | $40020420 | DMA channel 2 number of data register
   |DMA2_CPAR2| | rw | $00000000 | $24    | $40020424 | DMA channel 2 peripheral address register
   |DMA2_CMAR2| | rw | $00000000 | $28    | $40020428 | DMA channel 2 memory address register
    |DMA2_CCR3| | rw | $00000000 | $30    | $40020430 | DMA channel configuration register (DMA_CCR)
  |DMA2_CNDTR3| | rw | $00000000 | $34    | $40020434 | DMA channel 3 number of data register
   |DMA2_CPAR3| | rw | $00000000 | $38    | $40020438 | DMA channel 3 peripheral address register
   |DMA2_CMAR3| | rw | $00000000 | $3C    | $4002043C | DMA channel 3 memory address register
    |DMA2_CCR4| | rw | $00000000 | $44    | $40020444 | DMA channel configuration register (DMA_CCR)
  |DMA2_CNDTR4| | rw | $00000000 | $48    | $40020448 | DMA channel 4 number of data register
   |DMA2_CPAR4| | rw | $00000000 | $4C    | $4002044C | DMA channel 4 peripheral address register
   |DMA2_CMAR4| | rw | $00000000 | $50    | $40020450 | DMA channel 4 memory address register
    |DMA2_CCR5| | rw | $00000000 | $58    | $40020458 | DMA channel configuration register (DMA_CCR)
  |DMA2_CNDTR5| | rw | $00000000 | $5C    | $4002045C | DMA channel 5 number of data register
   |DMA2_CPAR5| | rw | $00000000 | $60    | $40020460 | DMA channel 5 peripheral address register
   |DMA2_CMAR5| | rw | $00000000 | $64    | $40020464 | DMA channel 5 memory address register
    |DMA2_CCR6| | rw | $00000000 | $6C    | $4002046C | DMA channel configuration register (DMA_CCR)
  |DMA2_CNDTR6| | rw | $00000000 | $70    | $40020470 | DMA channel 6 number of data register
   |DMA2_CPAR6| | rw | $00000000 | $74    | $40020474 | DMA channel 6 peripheral address register
   |DMA2_CMAR6| | rw | $00000000 | $78    | $40020478 | DMA channel 6 memory address register
    |DMA2_CCR7| | rw | $00000000 | $80    | $40020480 | DMA channel configuration register (DMA_CCR)
  |DMA2_CNDTR7| | rw | $00000000 | $84    | $40020484 | DMA channel 7 number of data register
   |DMA2_CPAR7| | rw | $00000000 | $88    | $40020488 | DMA channel 7 peripheral address register
   |DMA2_CMAR7| | rw | $00000000 | $8C    | $4002048C | DMA channel 7 memory address register
 -------------+----+-----------+--------+-----------+----------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *RCC* BaseAddress:  $40021000
 Description:  Reset and clock control

 --------------+----+-----------+--------+-----------+-----------------------------------------------------
      Register | ac | Reset     | Offset | Address   |  Description
 --------------+----+-----------+--------+-----------+-----------------------------------------------------
        |RCC_CR| |    | $00000083 | $0     | $40021000 | Clock control register
      |RCC_CFGR| |    | $00000000 | $4     | $40021004 | Clock configuration register (RCC_CFGR)
       |RCC_CIR| |    | $00000000 | $8     | $40021008 | Clock interrupt register (RCC_CIR)
  |RCC_APB2RSTR| | rw | $00000000 | $C     | $4002100C | APB2 peripheral reset register (RCC_APB2RSTR)
  |RCC_APB1RSTR| | rw | $00000000 | $10    | $40021010 | APB1 peripheral reset register (RCC_APB1RSTR)
    |RCC_AHBENR| | rw | $00000014 | $14    | $40021014 | AHB Peripheral Clock enable register (RCC_AHBENR)
   |RCC_APB2ENR| | rw | $00000000 | $18    | $40021018 | APB2 peripheral clock enable register (RCC_APB2ENR)
   |RCC_APB1ENR| | rw | $00000000 | $1C    | $4002101C | APB1 peripheral clock enable register (RCC_APB1ENR)
      |RCC_BDCR| |    | $00000000 | $20    | $40021020 | Backup domain control register (RCC_BDCR)
       |RCC_CSR| |    | $0C000000 | $24    | $40021024 | Control/status register (RCC_CSR)
   |RCC_AHBRSTR| | rw | $00000000 | $28    | $40021028 | AHB peripheral reset register
     |RCC_CFGR2| | rw | $00000000 | $2C    | $4002102C | Clock configuration register 2
     |RCC_CFGR3| | rw | $00000000 | $30    | $40021030 | Clock configuration register 3
       |RCC_CR2| |    | $00000080 | $34    | $40021034 | Clock control register 2
 --------------+----+-----------+--------+-----------+-----------------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *SYSCFG_COMP* BaseAddress:  $40010000
 Description:  System configuration controller

 ----------------------------+----+-----------+--------+-----------+---------------------------------------------
                    Register | ac | Reset     | Offset | Address   |  Description
 ----------------------------+----+-----------+--------+-----------+---------------------------------------------
    |SYSCFG_COMP_SYSCFG_CFGR1| | rw | $00000000 | $0     | $40010000 | configuration register 1
  |SYSCFG_COMP_SYSCFG_EXTICR1| | rw | $0000     | $8     | $40010008 | external interrupt configuration register 1
  |SYSCFG_COMP_SYSCFG_EXTICR2| | rw | $0000     | $C     | $4001000C | external interrupt configuration register 2
  |SYSCFG_COMP_SYSCFG_EXTICR3| | rw | $0000     | $10    | $40010010 | external interrupt configuration register 3
  |SYSCFG_COMP_SYSCFG_EXTICR4| | rw | $0000     | $14    | $40010014 | external interrupt configuration register 4
    |SYSCFG_COMP_SYSCFG_CFGR2| | rw | $0000     | $18    | $40010018 | configuration register 2
        |SYSCFG_COMP_COMP_CSR| |    | $00000000 | $1C    | $4001001C | control and status register
 ----------------------------+----+-----------+--------+-----------+---------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *ADC* BaseAddress:  $40012400
 Description:  Analog-to-digital converter

 ------------+----+-----------+--------+-----------+-------------------------------
    Register | ac | Reset     | Offset | Address   |  Description
 ------------+----+-----------+--------+-----------+-------------------------------
     |ADC_ISR| | rw | $00000000 | $0     | $40012400 | interrupt and status register
     |ADC_IER| | rw | $00000000 | $4     | $40012404 | interrupt enable register
      |ADC_CR| | rw | $00000000 | $8     | $40012408 | control register
   |ADC_CFGR1| | rw | $00000000 | $C     | $4001240C | configuration register 1
   |ADC_CFGR2| | rw | $00008000 | $10    | $40012410 | configuration register 2
    |ADC_SMPR| | rw | $00000000 | $14    | $40012414 | sampling time register
      |ADC_TR| | rw | $00000FFF | $20    | $40012420 | watchdog threshold register
  |ADC_CHSELR| | rw | $00000000 | $28    | $40012428 | channel selection register
      |ADC_DR| | ro | $00000000 | $40    | $40012440 | data register
     |ADC_CCR| | rw | $00000000 | $308   | $40012708 | common configuration register
 ------------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USART1* BaseAddress:  $40013800
 Description:  Universal synchronous asynchronous receiver transmitter

 -------------+----+-----------+--------+-----------+-----------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+-----------------------------------
   |USART1_CR1| | rw | $0000     | $0     | $40013800 | Control register 1
   |USART1_CR2| | rw | $0000     | $4     | $40013804 | Control register 2
   |USART1_CR3| | rw | $0000     | $8     | $40013808 | Control register 3
   |USART1_BRR| | rw | $0000     | $C     | $4001380C | Baud rate register
  |USART1_GTPR| | rw | $0000     | $10    | $40013810 | Guard time and prescaler register
  |USART1_RTOR| | rw | $0000     | $14    | $40013814 | Receiver timeout register
   |USART1_RQR| | rw | $0000     | $18    | $40013818 | Request register
   |USART1_ISR| | ro | $00C0     | $1C    | $4001381C | Interrupt &amp; status register
   |USART1_ICR| | rw | $0000     | $20    | $40013820 | Interrupt flag clear register
   |USART1_RDR| | ro | $0000     | $24    | $40013824 | Receive data register
   |USART1_TDR| | rw | $0000     | $28    | $40013828 | Transmit data register
 -------------+----+-----------+--------+-----------+-----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USART2* BaseAddress:  $40004400
 Description:  Universal synchronous asynchronous receiver transmitter

 -------------+----+-----------+--------+-----------+-----------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+-----------------------------------
   |USART2_CR1| | rw | $0000     | $0     | $40004400 | Control register 1
   |USART2_CR2| | rw | $0000     | $4     | $40004404 | Control register 2
   |USART2_CR3| | rw | $0000     | $8     | $40004408 | Control register 3
   |USART2_BRR| | rw | $0000     | $C     | $4000440C | Baud rate register
  |USART2_GTPR| | rw | $0000     | $10    | $40004410 | Guard time and prescaler register
  |USART2_RTOR| | rw | $0000     | $14    | $40004414 | Receiver timeout register
   |USART2_RQR| | rw | $0000     | $18    | $40004418 | Request register
   |USART2_ISR| | ro | $00C0     | $1C    | $4000441C | Interrupt &amp; status register
   |USART2_ICR| | rw | $0000     | $20    | $40004420 | Interrupt flag clear register
   |USART2_RDR| | ro | $0000     | $24    | $40004424 | Receive data register
   |USART2_TDR| | rw | $0000     | $28    | $40004428 | Transmit data register
 -------------+----+-----------+--------+-----------+-----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USART3* BaseAddress:  $40004800
 Description:  Universal synchronous asynchronous receiver transmitter

 -------------+----+-----------+--------+-----------+-----------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+-----------------------------------
   |USART3_CR1| | rw | $0000     | $0     | $40004800 | Control register 1
   |USART3_CR2| | rw | $0000     | $4     | $40004804 | Control register 2
   |USART3_CR3| | rw | $0000     | $8     | $40004808 | Control register 3
   |USART3_BRR| | rw | $0000     | $C     | $4000480C | Baud rate register
  |USART3_GTPR| | rw | $0000     | $10    | $40004810 | Guard time and prescaler register
  |USART3_RTOR| | rw | $0000     | $14    | $40004814 | Receiver timeout register
   |USART3_RQR| | rw | $0000     | $18    | $40004818 | Request register
   |USART3_ISR| | ro | $00C0     | $1C    | $4000481C | Interrupt &amp; status register
   |USART3_ICR| | rw | $0000     | $20    | $40004820 | Interrupt flag clear register
   |USART3_RDR| | ro | $0000     | $24    | $40004824 | Receive data register
   |USART3_TDR| | rw | $0000     | $28    | $40004828 | Transmit data register
 -------------+----+-----------+--------+-----------+-----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USART4* BaseAddress:  $40004C00
 Description:  Universal synchronous asynchronous receiver transmitter

 -------------+----+-----------+--------+-----------+-----------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+-----------------------------------
   |USART4_CR1| | rw | $0000     | $0     | $40004C00 | Control register 1
   |USART4_CR2| | rw | $0000     | $4     | $40004C04 | Control register 2
   |USART4_CR3| | rw | $0000     | $8     | $40004C08 | Control register 3
   |USART4_BRR| | rw | $0000     | $C     | $40004C0C | Baud rate register
  |USART4_GTPR| | rw | $0000     | $10    | $40004C10 | Guard time and prescaler register
  |USART4_RTOR| | rw | $0000     | $14    | $40004C14 | Receiver timeout register
   |USART4_RQR| | rw | $0000     | $18    | $40004C18 | Request register
   |USART4_ISR| | ro | $00C0     | $1C    | $40004C1C | Interrupt &amp; status register
   |USART4_ICR| | rw | $0000     | $20    | $40004C20 | Interrupt flag clear register
   |USART4_RDR| | ro | $0000     | $24    | $40004C24 | Receive data register
   |USART4_TDR| | rw | $0000     | $28    | $40004C28 | Transmit data register
 -------------+----+-----------+--------+-----------+-----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USART6* BaseAddress:  $40011400
 Description:  Universal synchronous asynchronous receiver transmitter

 -------------+----+-----------+--------+-----------+-----------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+-----------------------------------
   |USART6_CR1| | rw | $0000     | $0     | $40011400 | Control register 1
   |USART6_CR2| | rw | $0000     | $4     | $40011404 | Control register 2
   |USART6_CR3| | rw | $0000     | $8     | $40011408 | Control register 3
   |USART6_BRR| | rw | $0000     | $C     | $4001140C | Baud rate register
  |USART6_GTPR| | rw | $0000     | $10    | $40011410 | Guard time and prescaler register
  |USART6_RTOR| | rw | $0000     | $14    | $40011414 | Receiver timeout register
   |USART6_RQR| | rw | $0000     | $18    | $40011418 | Request register
   |USART6_ISR| | ro | $00C0     | $1C    | $4001141C | Interrupt &amp; status register
   |USART6_ICR| | rw | $0000     | $20    | $40011420 | Interrupt flag clear register
   |USART6_RDR| | ro | $0000     | $24    | $40011424 | Receive data register
   |USART6_TDR| | rw | $0000     | $28    | $40011428 | Transmit data register
 -------------+----+-----------+--------+-----------+-----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USART7* BaseAddress:  $40011800
 Description:  Universal synchronous asynchronous receiver transmitter

 -------------+----+-----------+--------+-----------+-----------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+-----------------------------------
   |USART7_CR1| | rw | $0000     | $0     | $40011800 | Control register 1
   |USART7_CR2| | rw | $0000     | $4     | $40011804 | Control register 2
   |USART7_CR3| | rw | $0000     | $8     | $40011808 | Control register 3
   |USART7_BRR| | rw | $0000     | $C     | $4001180C | Baud rate register
  |USART7_GTPR| | rw | $0000     | $10    | $40011810 | Guard time and prescaler register
  |USART7_RTOR| | rw | $0000     | $14    | $40011814 | Receiver timeout register
   |USART7_RQR| | rw | $0000     | $18    | $40011818 | Request register
   |USART7_ISR| | ro | $00C0     | $1C    | $4001181C | Interrupt &amp; status register
   |USART7_ICR| | rw | $0000     | $20    | $40011820 | Interrupt flag clear register
   |USART7_RDR| | ro | $0000     | $24    | $40011824 | Receive data register
   |USART7_TDR| | rw | $0000     | $28    | $40011828 | Transmit data register
 -------------+----+-----------+--------+-----------+-----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USART8* BaseAddress:  $40011C00
 Description:  Universal synchronous asynchronous receiver transmitter

 -------------+----+-----------+--------+-----------+-----------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+-----------------------------------
   |USART8_CR1| | rw | $0000     | $0     | $40011C00 | Control register 1
   |USART8_CR2| | rw | $0000     | $4     | $40011C04 | Control register 2
   |USART8_CR3| | rw | $0000     | $8     | $40011C08 | Control register 3
   |USART8_BRR| | rw | $0000     | $C     | $40011C0C | Baud rate register
  |USART8_GTPR| | rw | $0000     | $10    | $40011C10 | Guard time and prescaler register
  |USART8_RTOR| | rw | $0000     | $14    | $40011C14 | Receiver timeout register
   |USART8_RQR| | rw | $0000     | $18    | $40011C18 | Request register
   |USART8_ISR| | ro | $00C0     | $1C    | $40011C1C | Interrupt &amp; status register
   |USART8_ICR| | rw | $0000     | $20    | $40011C20 | Interrupt flag clear register
   |USART8_RDR| | ro | $0000     | $24    | $40011C24 | Receive data register
   |USART8_TDR| | rw | $0000     | $28    | $40011C28 | Transmit data register
 -------------+----+-----------+--------+-----------+-----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USART5* BaseAddress:  $40005000
 Description:  Universal synchronous asynchronous receiver transmitter

 -------------+----+-----------+--------+-----------+-----------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+-----------------------------------
   |USART5_CR1| | rw | $0000     | $0     | $40005000 | Control register 1
   |USART5_CR2| | rw | $0000     | $4     | $40005004 | Control register 2
   |USART5_CR3| | rw | $0000     | $8     | $40005008 | Control register 3
   |USART5_BRR| | rw | $0000     | $C     | $4000500C | Baud rate register
  |USART5_GTPR| | rw | $0000     | $10    | $40005010 | Guard time and prescaler register
  |USART5_RTOR| | rw | $0000     | $14    | $40005014 | Receiver timeout register
   |USART5_RQR| | rw | $0000     | $18    | $40005018 | Request register
   |USART5_ISR| | ro | $00C0     | $1C    | $4000501C | Interrupt &amp; status register
   |USART5_ICR| | rw | $0000     | $20    | $40005020 | Interrupt flag clear register
   |USART5_RDR| | ro | $0000     | $24    | $40005024 | Receive data register
   |USART5_TDR| | rw | $0000     | $28    | $40005028 | Transmit data register
 -------------+----+-----------+--------+-----------+-----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *RTC* BaseAddress:  $40002800
 Description:  Real-time clock

 --------------+----+-----------+--------+-----------+------------------------------------------------------
      Register | ac | Reset     | Offset | Address   |  Description
 --------------+----+-----------+--------+-----------+------------------------------------------------------
        |RTC_TR| | rw | $00000000 | $0     | $40002800 | time register
        |RTC_DR| | rw | $00002101 | $4     | $40002804 | date register
        |RTC_CR| |    | $00000000 | $8     | $40002808 | control register
       |RTC_ISR| |    | $00000007 | $C     | $4000280C | initialization and status register
      |RTC_PRER| | rw | $007F00FF | $10    | $40002810 | prescaler register
    |RTC_ALRMAR| | rw | $00000000 | $1C    | $4000281C | alarm A register
       |RTC_WPR| | wo | $00000000 | $24    | $40002824 | write protection register
       |RTC_SSR| | ro | $00000000 | $28    | $40002828 | sub second register
    |RTC_SHIFTR| | wo | $00000000 | $2C    | $4000282C | shift control register
      |RTC_TSTR| | ro | $00000000 | $30    | $40002830 | timestamp time register
      |RTC_TSDR| | ro | $00000000 | $34    | $40002834 | timestamp date register
     |RTC_TSSSR| | ro | $00000000 | $38    | $40002838 | time-stamp sub second register
      |RTC_CALR| | rw | $00000000 | $3C    | $4000283C | calibration register
     |RTC_TAFCR| | rw | $00000000 | $40    | $40002840 | tamper and alternate function configuration register
  |RTC_ALRMASSR| | rw | $00000000 | $44    | $40002844 | alarm A sub second register
     |RTC_BKP0R| | rw | $00000000 | $50    | $40002850 | backup register
     |RTC_BKP1R| | rw | $00000000 | $54    | $40002854 | backup register
     |RTC_BKP2R| | rw | $00000000 | $58    | $40002858 | backup register
     |RTC_BKP3R| | rw | $00000000 | $5C    | $4000285C | backup register
     |RTC_BKP4R| | rw | $00000000 | $60    | $40002860 | backup register
 --------------+----+-----------+--------+-----------+------------------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM15* BaseAddress:  $40014000
 Description:  General-purpose-timers

 --------------------+----+-----------+--------+-----------+----------------------------------------------
            Register | ac | Reset     | Offset | Address   |  Description
 --------------------+----+-----------+--------+-----------+----------------------------------------------
           |TIM15_CR1| | rw | $0000     | $0     | $40014000 | control register 1
           |TIM15_CR2| | rw | $0000     | $4     | $40014004 | control register 2
          |TIM15_SMCR| | rw | $0000     | $8     | $40014008 | slave mode control register
          |TIM15_DIER| | rw | $0000     | $C     | $4001400C | DMA/Interrupt enable register
            |TIM15_SR| | rw | $0000     | $10    | $40014010 | status register
           |TIM15_EGR| | wo | $0000     | $14    | $40014014 | event generation register
  |TIM15_CCMR1_Output| | rw | $00000000 | $18    | $40014018 | capture/compare mode register (output mode)
   |TIM15_CCMR1_Input| | rw | $00000000 | $18    | $40014018 | capture/compare mode register 1 (input mode)
          |TIM15_CCER| | rw | $0000     | $20    | $40014020 | capture/compare enable register
           |TIM15_CNT| | rw | $00000000 | $24    | $40014024 | counter
           |TIM15_PSC| | rw | $0000     | $28    | $40014028 | prescaler
           |TIM15_ARR| | rw | $00000000 | $2C    | $4001402C | auto-reload register
           |TIM15_RCR| | rw | $0000     | $30    | $40014030 | repetition counter register
          |TIM15_CCR1| | rw | $00000000 | $34    | $40014034 | capture/compare register 1
          |TIM15_CCR2| | rw | $00000000 | $38    | $40014038 | capture/compare register 2
          |TIM15_BDTR| | rw | $0000     | $44    | $40014044 | break and dead-time register
           |TIM15_DCR| | rw | $0000     | $48    | $40014048 | DMA control register
          |TIM15_DMAR| | rw | $0000     | $4C    | $4001404C | DMA address for full transfer
 --------------------+----+-----------+--------+-----------+----------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM16* BaseAddress:  $40014400
 Description:  General-purpose-timers

 --------------------+----+-----------+--------+-----------+----------------------------------------------
            Register | ac | Reset     | Offset | Address   |  Description
 --------------------+----+-----------+--------+-----------+----------------------------------------------
           |TIM16_CR1| | rw | $0000     | $0     | $40014400 | control register 1
           |TIM16_CR2| | rw | $0000     | $4     | $40014404 | control register 2
          |TIM16_DIER| | rw | $0000     | $C     | $4001440C | DMA/Interrupt enable register
            |TIM16_SR| | rw | $0000     | $10    | $40014410 | status register
           |TIM16_EGR| | wo | $0000     | $14    | $40014414 | event generation register
  |TIM16_CCMR1_Output| | rw | $00000000 | $18    | $40014418 | capture/compare mode register (output mode)
   |TIM16_CCMR1_Input| | rw | $00000000 | $18    | $40014418 | capture/compare mode register 1 (input mode)
          |TIM16_CCER| | rw | $0000     | $20    | $40014420 | capture/compare enable register
           |TIM16_CNT| | rw | $00000000 | $24    | $40014424 | counter
           |TIM16_PSC| | rw | $0000     | $28    | $40014428 | prescaler
           |TIM16_ARR| | rw | $00000000 | $2C    | $4001442C | auto-reload register
           |TIM16_RCR| | rw | $0000     | $30    | $40014430 | repetition counter register
          |TIM16_CCR1| | rw | $00000000 | $34    | $40014434 | capture/compare register 1
          |TIM16_BDTR| | rw | $0000     | $44    | $40014444 | break and dead-time register
           |TIM16_DCR| | rw | $0000     | $48    | $40014448 | DMA control register
          |TIM16_DMAR| | rw | $0000     | $4C    | $4001444C | DMA address for full transfer
 --------------------+----+-----------+--------+-----------+----------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TIM17* BaseAddress:  $40014800
 Description:  General-purpose-timers

 --------------------+----+-----------+--------+-----------+----------------------------------------------
            Register | ac | Reset     | Offset | Address   |  Description
 --------------------+----+-----------+--------+-----------+----------------------------------------------
           |TIM17_CR1| | rw | $0000     | $0     | $40014800 | control register 1
           |TIM17_CR2| | rw | $0000     | $4     | $40014804 | control register 2
          |TIM17_DIER| | rw | $0000     | $C     | $4001480C | DMA/Interrupt enable register
            |TIM17_SR| | rw | $0000     | $10    | $40014810 | status register
           |TIM17_EGR| | wo | $0000     | $14    | $40014814 | event generation register
  |TIM17_CCMR1_Output| | rw | $00000000 | $18    | $40014818 | capture/compare mode register (output mode)
   |TIM17_CCMR1_Input| | rw | $00000000 | $18    | $40014818 | capture/compare mode register 1 (input mode)
          |TIM17_CCER| | rw | $0000     | $20    | $40014820 | capture/compare enable register
           |TIM17_CNT| | rw | $00000000 | $24    | $40014824 | counter
           |TIM17_PSC| | rw | $0000     | $28    | $40014828 | prescaler
           |TIM17_ARR| | rw | $00000000 | $2C    | $4001482C | auto-reload register
           |TIM17_RCR| | rw | $0000     | $30    | $40014830 | repetition counter register
          |TIM17_CCR1| | rw | $00000000 | $34    | $40014834 | capture/compare register 1
          |TIM17_BDTR| | rw | $0000     | $44    | $40014844 | break and dead-time register
           |TIM17_DCR| | rw | $0000     | $48    | $40014848 | DMA control register
          |TIM17_DMAR| | rw | $0000     | $4C    | $4001484C | DMA address for full transfer
 --------------------+----+-----------+--------+-----------+----------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *TSC* BaseAddress:  $40024000
 Description:  Touch sensing controller

 ------------+----+-----------+--------+-----------+------------------------------------
    Register | ac | Reset     | Offset | Address   |  Description
 ------------+----+-----------+--------+-----------+------------------------------------
      |TSC_CR| | rw | $00000000 | $0     | $40024000 | control register
     |TSC_IER| | rw | $00000000 | $4     | $40024004 | interrupt enable register
     |TSC_ICR| | rw | $00000000 | $8     | $40024008 | interrupt clear register
     |TSC_ISR| | rw | $00000000 | $C     | $4002400C | interrupt status register
   |TSC_IOHCR| | rw | $FFFFFFFF | $10    | $40024010 | I/O hysteresis control register
  |TSC_IOASCR| | rw | $00000000 | $18    | $40024018 | I/O analog switch control register
   |TSC_IOSCR| | rw | $00000000 | $20    | $40024020 | I/O sampling control register
   |TSC_IOCCR| | rw | $00000000 | $28    | $40024028 | I/O channel control register
  |TSC_IOGCSR| |    | $00000000 | $30    | $40024030 | I/O group control status register
  |TSC_IOG1CR| | ro | $00000000 | $34    | $40024034 | I/O group x counter register
  |TSC_IOG2CR| | ro | $00000000 | $38    | $40024038 | I/O group x counter register
  |TSC_IOG3CR| | ro | $00000000 | $3C    | $4002403C | I/O group x counter register
  |TSC_IOG4CR| | ro | $00000000 | $40    | $40024040 | I/O group x counter register
  |TSC_IOG5CR| | ro | $00000000 | $44    | $40024044 | I/O group x counter register
  |TSC_IOG6CR| | ro | $00000000 | $48    | $40024048 | I/O group x counter register
 ------------+----+-----------+--------+-----------+------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *CEC* BaseAddress:  $40007800
 Description:  HDMI-CEC controller

 -----------+----+-----------+--------+-----------+-------------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+-------------------------------
     |CEC_CR| | rw | $00000000 | $0     | $40007800 | control register
   |CEC_CFGR| | rw | $00000000 | $4     | $40007804 | configuration register
   |CEC_TXDR| | wo | $00000000 | $8     | $40007808 | Tx data register
   |CEC_RXDR| | ro | $00000000 | $C     | $4000780C | Rx Data Register
    |CEC_ISR| | rw | $00000000 | $10    | $40007810 | Interrupt and Status Register
    |CEC_IER| | rw | $00000000 | $14    | $40007814 | interrupt enable register
 -----------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *Flash* BaseAddress:  $40022000
 Description:  Flash

 ---------------+----+-----------+--------+-----------+-------------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+-------------------------------
      |Flash_ACR| |    | $00000030 | $0     | $40022000 | Flash access control register
     |Flash_KEYR| | wo | $00000000 | $4     | $40022004 | Flash key register
  |Flash_OPTKEYR| | wo | $00000000 | $8     | $40022008 | Flash option key register
       |Flash_SR| |    | $00000000 | $C     | $4002200C | Flash status register
       |Flash_CR| | rw | $00000080 | $10    | $40022010 | Flash control register
       |Flash_AR| | wo | $00000000 | $14    | $40022014 | Flash address register
      |Flash_OBR| | ro | $03FFFFF2 | $1C    | $4002201C | Option byte register
     |Flash_WRPR| | ro | $FFFFFFFF | $20    | $40022020 | Write protection register
 ---------------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *DBGMCU* BaseAddress:  $40015800
 Description:  Debug support

 ----------------+----+-----------+--------+-----------+----------------------------------
        Register | ac | Reset     | Offset | Address   |  Description
 ----------------+----+-----------+--------+-----------+----------------------------------
   |DBGMCU_IDCODE| | ro | $0        | $0     | $40015800 | MCU Device ID Code Register
       |DBGMCU_CR| | rw | $0        | $4     | $40015804 | Debug MCU Configuration Register
  |DBGMCU_APB1_FZ| | rw | $0        | $8     | $40015808 | Debug MCU APB1 freeze register
  |DBGMCU_APB2_FZ| | rw | $0        | $C     | $4001580C | Debug MCU APB2 freeze register
 ----------------+----+-----------+--------+-----------+----------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *USB* BaseAddress:  $40005C00
 Description:  Universal serial bus full-speed device interface

 ------------+----+-----------+--------+-----------+---------------------------------
    Register | ac | Reset     | Offset | Address   |  Description
 ------------+----+-----------+--------+-----------+---------------------------------
    |USB_EP0R| | rw | $00000000 | $0     | $40005C00 | endpoint 0 register
    |USB_EP1R| | rw | $00000000 | $4     | $40005C04 | endpoint 1 register
    |USB_EP2R| | rw | $00000000 | $8     | $40005C08 | endpoint 2 register
    |USB_EP3R| | rw | $00000000 | $C     | $40005C0C | endpoint 3 register
    |USB_EP4R| | rw | $00000000 | $10    | $40005C10 | endpoint 4 register
    |USB_EP5R| | rw | $00000000 | $14    | $40005C14 | endpoint 5 register
    |USB_EP6R| | rw | $00000000 | $18    | $40005C18 | endpoint 6 register
    |USB_EP7R| | rw | $00000000 | $1C    | $40005C1C | endpoint 7 register
    |USB_CNTR| | rw | $00000003 | $40    | $40005C40 | control register
    |USB_ISTR| |    | $00000000 | $44    | $40005C44 | interrupt status register
     |USB_FNR| | ro | $0000     | $48    | $40005C48 | frame number register
   |USB_DADDR| | rw | $0000     | $4C    | $40005C4C | device address
  |USB_BTABLE| | rw | $0000     | $50    | $40005C50 | Buffer table address
  |USB_LPMCSR| |    | $0000     | $54    | $40005C54 | LPM control and status register
    |USB_BCDR| |    | $0000     | $58    | $40005C58 | Battery charging detector
 ------------+----+-----------+--------+-----------+---------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *CRS* BaseAddress:  $40006C00
 Description:  Clock recovery system

 -----------+----+-----------+--------+-----------+-------------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+-------------------------------
     |CRS_CR| | rw | $00002000 | $0     | $40006C00 | control register
   |CRS_CFGR| | rw | $2022BB7F | $4     | $40006C04 | configuration register
    |CRS_ISR| | ro | $00000000 | $8     | $40006C08 | interrupt and status register
    |CRS_ICR| | rw | $00000000 | $C     | $40006C0C | interrupt flag clear register
 -----------+----+-----------+--------+-----------+-------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *CAN* BaseAddress:  $40006400
 Description:  Controller area network

 ---------------+----+-----------+--------+-----------+---------------------------
       Register | ac | Reset     | Offset | Address   |  Description
 ---------------+----+-----------+--------+-----------+---------------------------
    |CAN_CAN_MCR| | rw | $00000000 | $0     | $40006400 | CAN_MCR
    |CAN_CAN_MSR| |    | $00000000 | $4     | $40006404 | CAN_MSR
    |CAN_CAN_TSR| |    | $00000000 | $8     | $40006408 | CAN_TSR
   |CAN_CAN_RF0R| |    | $00000000 | $C     | $4000640C | CAN_RF0R
   |CAN_CAN_RF1R| |    | $00000000 | $10    | $40006410 | CAN_RF1R
    |CAN_CAN_IER| | rw | $00000000 | $14    | $40006414 | CAN_IER
    |CAN_CAN_ESR| |    | $00000000 | $18    | $40006418 | CAN_ESR
    |CAN_CAN_BTR| | rw | $00000000 | $1C    | $4000641C | CAN BTR
   |CAN_CAN_TI0R| | rw | $00000000 | $180   | $40006580 | CAN_TI0R
  |CAN_CAN_TDT0R| | rw | $00000000 | $184   | $40006584 | CAN_TDT0R
  |CAN_CAN_TDL0R| | rw | $00000000 | $188   | $40006588 | CAN_TDL0R
  |CAN_CAN_TDH0R| | rw | $00000000 | $18C   | $4000658C | CAN_TDH0R
   |CAN_CAN_TI1R| | rw | $00000000 | $190   | $40006590 | CAN_TI1R
  |CAN_CAN_TDT1R| | rw | $00000000 | $194   | $40006594 | CAN_TDT1R
  |CAN_CAN_TDL1R| | rw | $00000000 | $198   | $40006598 | CAN_TDL1R
  |CAN_CAN_TDH1R| | rw | $00000000 | $19C   | $4000659C | CAN_TDH1R
   |CAN_CAN_TI2R| | rw | $00000000 | $1A0   | $400065A0 | CAN_TI2R
  |CAN_CAN_TDT2R| | rw | $00000000 | $1A4   | $400065A4 | CAN_TDT2R
  |CAN_CAN_TDL2R| | rw | $00000000 | $1A8   | $400065A8 | CAN_TDL2R
  |CAN_CAN_TDH2R| | rw | $00000000 | $1AC   | $400065AC | CAN_TDH2R
   |CAN_CAN_RI0R| | ro | $00000000 | $1B0   | $400065B0 | CAN_RI0R
  |CAN_CAN_RDT0R| | ro | $00000000 | $1B4   | $400065B4 | CAN_RDT0R
  |CAN_CAN_RDL0R| | ro | $00000000 | $1B8   | $400065B8 | CAN_RDL0R
  |CAN_CAN_RDH0R| | ro | $00000000 | $1BC   | $400065BC | CAN_RDH0R
   |CAN_CAN_RI1R| | ro | $00000000 | $1C0   | $400065C0 | CAN_RI1R
  |CAN_CAN_RDT1R| | ro | $00000000 | $1C4   | $400065C4 | CAN_RDT1R
  |CAN_CAN_RDL1R| | ro | $00000000 | $1C8   | $400065C8 | CAN_RDL1R
  |CAN_CAN_RDH1R| | ro | $00000000 | $1CC   | $400065CC | CAN_RDH1R
    |CAN_CAN_FMR| | rw | $00000000 | $200   | $40006600 | CAN_FMR
   |CAN_CAN_FM1R| | rw | $00000000 | $204   | $40006604 | CAN_FM1R
   |CAN_CAN_FS1R| | rw | $00000000 | $20C   | $4000660C | CAN_FS1R
  |CAN_CAN_FFA1R| | rw | $00000000 | $214   | $40006614 | CAN_FFA1R
   |CAN_CAN_FA1R| | rw | $00000000 | $21C   | $4000661C | CAN_FA1R
       |CAN_F0R1| | rw | $00000000 | $240   | $40006640 | Filter bank 0 register 1
       |CAN_F0R2| | rw | $00000000 | $244   | $40006644 | Filter bank 0 register 2
       |CAN_F1R1| | rw | $00000000 | $248   | $40006648 | Filter bank 1 register 1
       |CAN_F1R2| | rw | $00000000 | $24C   | $4000664C | Filter bank 1 register 2
       |CAN_F2R1| | rw | $00000000 | $250   | $40006650 | Filter bank 2 register 1
       |CAN_F2R2| | rw | $00000000 | $254   | $40006654 | Filter bank 2 register 2
       |CAN_F3R1| | rw | $00000000 | $258   | $40006658 | Filter bank 3 register 1
       |CAN_F3R2| | rw | $00000000 | $25C   | $4000665C | Filter bank 3 register 2
       |CAN_F4R1| | rw | $00000000 | $260   | $40006660 | Filter bank 4 register 1
       |CAN_F4R2| | rw | $00000000 | $264   | $40006664 | Filter bank 4 register 2
       |CAN_F5R1| | rw | $00000000 | $268   | $40006668 | Filter bank 5 register 1
       |CAN_F5R2| | rw | $00000000 | $26C   | $4000666C | Filter bank 5 register 2
       |CAN_F6R1| | rw | $00000000 | $270   | $40006670 | Filter bank 6 register 1
       |CAN_F6R2| | rw | $00000000 | $274   | $40006674 | Filter bank 6 register 2
       |CAN_F7R1| | rw | $00000000 | $278   | $40006678 | Filter bank 7 register 1
       |CAN_F7R2| | rw | $00000000 | $27C   | $4000667C | Filter bank 7 register 2
       |CAN_F8R1| | rw | $00000000 | $280   | $40006680 | Filter bank 8 register 1
       |CAN_F8R2| | rw | $00000000 | $284   | $40006684 | Filter bank 8 register 2
       |CAN_F9R1| | rw | $00000000 | $288   | $40006688 | Filter bank 9 register 1
       |CAN_F9R2| | rw | $00000000 | $28C   | $4000668C | Filter bank 9 register 2
      |CAN_F10R1| | rw | $00000000 | $290   | $40006690 | Filter bank 10 register 1
      |CAN_F10R2| | rw | $00000000 | $294   | $40006694 | Filter bank 10 register 2
      |CAN_F11R1| | rw | $00000000 | $298   | $40006698 | Filter bank 11 register 1
      |CAN_F11R2| | rw | $00000000 | $29C   | $4000669C | Filter bank 11 register 2
      |CAN_F12R1| | rw | $00000000 | $2A0   | $400066A0 | Filter bank 4 register 1
      |CAN_F12R2| | rw | $00000000 | $2A4   | $400066A4 | Filter bank 12 register 2
      |CAN_F13R1| | rw | $00000000 | $2A8   | $400066A8 | Filter bank 13 register 1
      |CAN_F13R2| | rw | $00000000 | $2AC   | $400066AC | Filter bank 13 register 2
      |CAN_F14R1| | rw | $00000000 | $2B0   | $400066B0 | Filter bank 14 register 1
      |CAN_F14R2| | rw | $00000000 | $2B4   | $400066B4 | Filter bank 14 register 2
      |CAN_F15R1| | rw | $00000000 | $2B8   | $400066B8 | Filter bank 15 register 1
      |CAN_F15R2| | rw | $00000000 | $2BC   | $400066BC | Filter bank 15 register 2
      |CAN_F16R1| | rw | $00000000 | $2C0   | $400066C0 | Filter bank 16 register 1
      |CAN_F16R2| | rw | $00000000 | $2C4   | $400066C4 | Filter bank 16 register 2
      |CAN_F17R1| | rw | $00000000 | $2C8   | $400066C8 | Filter bank 17 register 1
      |CAN_F17R2| | rw | $00000000 | $2CC   | $400066CC | Filter bank 17 register 2
      |CAN_F18R1| | rw | $00000000 | $2D0   | $400066D0 | Filter bank 18 register 1
      |CAN_F18R2| | rw | $00000000 | $2D4   | $400066D4 | Filter bank 18 register 2
      |CAN_F19R1| | rw | $00000000 | $2D8   | $400066D8 | Filter bank 19 register 1
      |CAN_F19R2| | rw | $00000000 | $2DC   | $400066DC | Filter bank 19 register 2
      |CAN_F20R1| | rw | $00000000 | $2E0   | $400066E0 | Filter bank 20 register 1
      |CAN_F20R2| | rw | $00000000 | $2E4   | $400066E4 | Filter bank 20 register 2
      |CAN_F21R1| | rw | $00000000 | $2E8   | $400066E8 | Filter bank 21 register 1
      |CAN_F21R2| | rw | $00000000 | $2EC   | $400066EC | Filter bank 21 register 2
      |CAN_F22R1| | rw | $00000000 | $2F0   | $400066F0 | Filter bank 22 register 1
      |CAN_F22R2| | rw | $00000000 | $2F4   | $400066F4 | Filter bank 22 register 2
      |CAN_F23R1| | rw | $00000000 | $2F8   | $400066F8 | Filter bank 23 register 1
      |CAN_F23R2| | rw | $00000000 | $2FC   | $400066FC | Filter bank 23 register 2
      |CAN_F24R1| | rw | $00000000 | $300   | $40006700 | Filter bank 24 register 1
      |CAN_F24R2| | rw | $00000000 | $304   | $40006704 | Filter bank 24 register 2
      |CAN_F25R1| | rw | $00000000 | $308   | $40006708 | Filter bank 25 register 1
      |CAN_F25R2| | rw | $00000000 | $30C   | $4000670C | Filter bank 25 register 2
      |CAN_F26R1| | rw | $00000000 | $310   | $40006710 | Filter bank 26 register 1
      |CAN_F26R2| | rw | $00000000 | $314   | $40006714 | Filter bank 26 register 2
      |CAN_F27R1| | rw | $00000000 | $318   | $40006718 | Filter bank 27 register 1
      |CAN_F27R2| | rw | $00000000 | $31C   | $4000671C | Filter bank 27 register 2
 ---------------+----+-----------+--------+-----------+---------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *DAC* BaseAddress:  $40007400
 Description:  Digital-to-analog converter

 -------------+----+-----------+--------+-----------+---------------------------------------------------------
     Register | ac | Reset     | Offset | Address   |  Description
 -------------+----+-----------+--------+-----------+---------------------------------------------------------
       |DAC_CR| | rw | $00000000 | $0     | $40007400 | control register
  |DAC_SWTRIGR| | wo | $00000000 | $4     | $40007404 | software trigger register
  |DAC_DHR12R1| | rw | $00000000 | $8     | $40007408 | channel1 12-bit right-aligned data holding register
  |DAC_DHR12L1| | rw | $00000000 | $C     | $4000740C | channel1 12-bit left aligned data holding register
   |DAC_DHR8R1| | rw | $00000000 | $10    | $40007410 | channel1 8-bit right aligned data holding register
     |DAC_DOR1| | ro | $00000000 | $2C    | $4000742C | channel1 data output register
       |DAC_SR| | rw | $00000000 | $34    | $40007434 | status register
  |DAC_DHR12R2| | rw | $00000000 | $14    | $40007414 | DAC channel2 12-bit right-aligned data holding register
  |DAC_DHR12L2| | rw | $00000000 | $18    | $40007418 | DAC channel2 12-bit left-aligned data holding register
   |DAC_DHR8R2| | rw | $00000000 | $1C    | $4000741C | DAC channel2 8-bit right-aligned data holding register
  |DAC_DHR12RD| | rw | $00000000 | $20    | $40007420 | DHR12RD
  |DAC_DHR12LD| | rw | $00000000 | $24    | $40007424 | Dual DAC 12-bit left-aligned data holding register
   |DAC_DHR8RD| | rw | $00000000 | $28    | $40007428 | Dual DAC 8-bit right-aligned data holding register
     |DAC_DOR2| | ro | $00000000 | $30    | $40007430 | DAC channel2 data output register
 -------------+----+-----------+--------+-----------+---------------------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *SCB* BaseAddress:  $E000ED00
 Description:  System control block

 -----------+----+-----------+--------+-----------+--------------------------------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+--------------------------------------------------
  |SCB_CPUID| | ro | $410FC241 | $0     | $E000ED00 | CPUID base register
   |SCB_ICSR| | rw | $00000000 | $4     | $E000ED04 | Interrupt control and state register
  |SCB_AIRCR| | rw | $00000000 | $C     | $E000ED0C | Application interrupt and reset control register
    |SCB_SCR| | rw | $00000000 | $10    | $E000ED10 | System control register
    |SCB_CCR| | rw | $00000000 | $14    | $E000ED14 | Configuration and control register
  |SCB_SHPR2| | rw | $00000000 | $1C    | $E000ED1C | System handler priority registers
  |SCB_SHPR3| | rw | $00000000 | $20    | $E000ED20 | System handler priority registers
 -----------+----+-----------+--------+-----------+--------------------------------------------------
 (ac) Access rights




 REGISTERS~

 MCU:          STM32F0x1.svd
 Peripheral:   *STK* BaseAddress:  $E000E010
 Description:  SysTick timer

 -----------+----+-----------+--------+-----------+-------------------------------------
   Register | ac | Reset     | Offset | Address   |  Description
 -----------+----+-----------+--------+-----------+-------------------------------------
    |STK_CSR| | rw | $0X00000000 | $0     | $E000E010 | SysTick control and status register
    |STK_RVR| | rw | $0X00000000 | $4     | $E000E014 | SysTick reload value register
    |STK_CVR| | rw | $0X00000000 | $8     | $E000E018 | SysTick current value register
  |STK_CALIB| | rw | $0X00000000 | $C     | $E000E01C | SysTick calibration value register
 -----------+----+-----------+--------+-----------+-------------------------------------
 (ac) Access rights


 BITFIELDS~

 Peripheral:  |CRC|
 Register:    *CRC_DR*
 Address:     $40023000
 Reset:       $FFFFFFFF
 Description: Data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=229
              (place cursor on hyperlink, type 'gx' to follow)

 -----------+----+----+----+----+--------------------
   Bitfield | bo | bw | be | ac | Description
 -----------+----+----+----+----+--------------------
  *CRC_DR_DR* | 0  | 32 | 32 | rw | Data register bits
 -----------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CRC|
 Register:    *CRC_IDR*
 Address:     $40023004
 Reset:       $00000000
 Description: Independent data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=229
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+------------------------------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+------------------------------------------
  *CRC_IDR_IDR* | 0  | 8  | 8  | rw | General-purpose 8-bit data register bits
 -------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CRC|
 Register:    *CRC_CR*
 Address:     $40023008
 Reset:       $00000000
 Description: Control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=230
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+---------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+---------------------
     *CRC_CR_RESET* | 0  | 1  | 1  | rw | reset bit
  *CRC_CR_POLYSIZE* | 3  | 2  | 5  | rw | Polynomial size
    *CRC_CR_REV_IN* | 5  | 2  | 7  | rw | Reverse input data
   *CRC_CR_REV_OUT* | 7  | 1  | 8  | rw | Reverse output data
 -----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CRC|
 Register:    *CRC_INIT*
 Address:     $4002300C
 Reset:       $FFFFFFFF
 Description: Initial CRC value
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=231
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------------------
  *CRC_INIT_INIT* | 0  | 32 | 32 | rw | Programmable initial CRC value
 ---------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_MODER*
 Address:     $48001400
 Reset:       $00000000
 Description: GPIO port mode register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOF_MODER_MODER15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_MODER_MODER14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_MODER_MODER13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_MODER_MODER12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_MODER_MODER11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_MODER_MODER10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_MODER_MODER0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_OTYPER*
 Address:     $48001404
 Reset:       $00000000
 Description: GPIO port output type register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------
  *GPIOF_OTYPER_OT15* | 15 | 1  | 16 | rw | Port x configuration bit 15
  *GPIOF_OTYPER_OT14* | 14 | 1  | 15 | rw | Port x configuration bit 14
  *GPIOF_OTYPER_OT13* | 13 | 1  | 14 | rw | Port x configuration bit 13
  *GPIOF_OTYPER_OT12* | 12 | 1  | 13 | rw | Port x configuration bit 12
  *GPIOF_OTYPER_OT11* | 11 | 1  | 12 | rw | Port x configuration bit 11
  *GPIOF_OTYPER_OT10* | 10 | 1  | 11 | rw | Port x configuration bit 10
   *GPIOF_OTYPER_OT9* | 9  | 1  | 10 | rw | Port x configuration bit 9
   *GPIOF_OTYPER_OT8* | 8  | 1  | 9  | rw | Port x configuration bit 8
   *GPIOF_OTYPER_OT7* | 7  | 1  | 8  | rw | Port x configuration bit 7
   *GPIOF_OTYPER_OT6* | 6  | 1  | 7  | rw | Port x configuration bit 6
   *GPIOF_OTYPER_OT5* | 5  | 1  | 6  | rw | Port x configuration bit 5
   *GPIOF_OTYPER_OT4* | 4  | 1  | 5  | rw | Port x configuration bit 4
   *GPIOF_OTYPER_OT3* | 3  | 1  | 4  | rw | Port x configuration bit 3
   *GPIOF_OTYPER_OT2* | 2  | 1  | 3  | rw | Port x configuration bit 2
   *GPIOF_OTYPER_OT1* | 1  | 1  | 2  | rw | Port x configuration bit 1
   *GPIOF_OTYPER_OT0* | 0  | 1  | 1  | rw | Port x configuration bit 0
 -------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_OSPEEDR*
 Address:     $48001408
 Reset:       $00000000
 Description: GPIO port output speed register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------------
  *GPIOF_OSPEEDR_OSPEEDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_OSPEEDR_OSPEEDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_OSPEEDR_OSPEEDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_OSPEEDR_OSPEEDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_OSPEEDR_OSPEEDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_OSPEEDR_OSPEEDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_OSPEEDR_OSPEEDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 -------------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_PUPDR*
 Address:     $4800140C
 Reset:       $00000000
 Description: GPIO port pull-up/pull-down register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOF_PUPDR_PUPDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_PUPDR_PUPDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_PUPDR_PUPDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_PUPDR_PUPDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_PUPDR_PUPDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOF_PUPDR_PUPDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOF_PUPDR_PUPDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_IDR*
 Address:     $48001410
 Reset:       $00000000
 Description: GPIO port input data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------
  *GPIOF_IDR_IDR15* | 15 | 1  | 16 | rw | Port input data (y = 0..15)
  *GPIOF_IDR_IDR14* | 14 | 1  | 15 | rw | Port input data (y = 0..15)
  *GPIOF_IDR_IDR13* | 13 | 1  | 14 | rw | Port input data (y = 0..15)
  *GPIOF_IDR_IDR12* | 12 | 1  | 13 | rw | Port input data (y = 0..15)
  *GPIOF_IDR_IDR11* | 11 | 1  | 12 | rw | Port input data (y = 0..15)
  *GPIOF_IDR_IDR10* | 10 | 1  | 11 | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR9* | 9  | 1  | 10 | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR8* | 8  | 1  | 9  | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR7* | 7  | 1  | 8  | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR6* | 6  | 1  | 7  | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR5* | 5  | 1  | 6  | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR4* | 4  | 1  | 5  | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR3* | 3  | 1  | 4  | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR2* | 2  | 1  | 3  | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR1* | 1  | 1  | 2  | rw | Port input data (y = 0..15)
   *GPIOF_IDR_IDR0* | 0  | 1  | 1  | rw | Port input data (y = 0..15)
 -----------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_ODR*
 Address:     $48001414
 Reset:       $00000000
 Description: GPIO port output data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------
  *GPIOF_ODR_ODR15* | 15 | 1  | 16 | rw | Port output data (y = 0..15)
  *GPIOF_ODR_ODR14* | 14 | 1  | 15 | rw | Port output data (y = 0..15)
  *GPIOF_ODR_ODR13* | 13 | 1  | 14 | rw | Port output data (y = 0..15)
  *GPIOF_ODR_ODR12* | 12 | 1  | 13 | rw | Port output data (y = 0..15)
  *GPIOF_ODR_ODR11* | 11 | 1  | 12 | rw | Port output data (y = 0..15)
  *GPIOF_ODR_ODR10* | 10 | 1  | 11 | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR9* | 9  | 1  | 10 | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR8* | 8  | 1  | 9  | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR7* | 7  | 1  | 8  | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR6* | 6  | 1  | 7  | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR5* | 5  | 1  | 6  | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR4* | 4  | 1  | 5  | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR3* | 3  | 1  | 4  | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR2* | 2  | 1  | 3  | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR1* | 1  | 1  | 2  | rw | Port output data (y = 0..15)
   *GPIOF_ODR_ODR0* | 0  | 1  | 1  | rw | Port output data (y = 0..15)
 -----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_BSRR*
 Address:     $48001418
 Reset:       $00000000
 Description: GPIO port bit set/reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------
  *GPIOF_BSRR_BR15* | 31 | 1  | 32 | rw | Port x reset bit y (y = 0..15)
  *GPIOF_BSRR_BR14* | 30 | 1  | 31 | rw | Port x reset bit y (y = 0..15)
  *GPIOF_BSRR_BR13* | 29 | 1  | 30 | rw | Port x reset bit y (y = 0..15)
  *GPIOF_BSRR_BR12* | 28 | 1  | 29 | rw | Port x reset bit y (y = 0..15)
  *GPIOF_BSRR_BR11* | 27 | 1  | 28 | rw | Port x reset bit y (y = 0..15)
  *GPIOF_BSRR_BR10* | 26 | 1  | 27 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR9* | 25 | 1  | 26 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR8* | 24 | 1  | 25 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR7* | 23 | 1  | 24 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR6* | 22 | 1  | 23 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR5* | 21 | 1  | 22 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR4* | 20 | 1  | 21 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR3* | 19 | 1  | 20 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR2* | 18 | 1  | 19 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR1* | 17 | 1  | 18 | rw | Port x reset bit y (y = 0..15)
   *GPIOF_BSRR_BR0* | 16 | 1  | 17 | rw | Port x set bit y (y= 0..15)
  *GPIOF_BSRR_BS15* | 15 | 1  | 16 | rw | Port x set bit y (y= 0..15)
  *GPIOF_BSRR_BS14* | 14 | 1  | 15 | rw | Port x set bit y (y= 0..15)
  *GPIOF_BSRR_BS13* | 13 | 1  | 14 | rw | Port x set bit y (y= 0..15)
  *GPIOF_BSRR_BS12* | 12 | 1  | 13 | rw | Port x set bit y (y= 0..15)
  *GPIOF_BSRR_BS11* | 11 | 1  | 12 | rw | Port x set bit y (y= 0..15)
  *GPIOF_BSRR_BS10* | 10 | 1  | 11 | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS9* | 9  | 1  | 10 | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS8* | 8  | 1  | 9  | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS7* | 7  | 1  | 8  | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS6* | 6  | 1  | 7  | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS5* | 5  | 1  | 6  | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS4* | 4  | 1  | 5  | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS3* | 3  | 1  | 4  | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS2* | 2  | 1  | 3  | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS1* | 1  | 1  | 2  | rw | Port x set bit y (y= 0..15)
   *GPIOF_BSRR_BS0* | 0  | 1  | 1  | rw | Port x set bit y (y= 0..15)
 -----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_LCKR*
 Address:     $4800141C
 Reset:       $00000000
 Description: GPIO port configuration lock register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------
   *GPIOF_LCKR_LCKK* | 16 | 1  | 17 | rw | Port x lock bit y
  *GPIOF_LCKR_LCK15* | 15 | 1  | 16 | rw | Port x lock bit y (y= 0..15)
  *GPIOF_LCKR_LCK14* | 14 | 1  | 15 | rw | Port x lock bit y (y= 0..15)
  *GPIOF_LCKR_LCK13* | 13 | 1  | 14 | rw | Port x lock bit y (y= 0..15)
  *GPIOF_LCKR_LCK12* | 12 | 1  | 13 | rw | Port x lock bit y (y= 0..15)
  *GPIOF_LCKR_LCK11* | 11 | 1  | 12 | rw | Port x lock bit y (y= 0..15)
  *GPIOF_LCKR_LCK10* | 10 | 1  | 11 | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK9* | 9  | 1  | 10 | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK8* | 8  | 1  | 9  | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK7* | 7  | 1  | 8  | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK6* | 6  | 1  | 7  | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK5* | 5  | 1  | 6  | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK4* | 4  | 1  | 5  | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK3* | 3  | 1  | 4  | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK2* | 2  | 1  | 3  | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK1* | 1  | 1  | 2  | rw | Port x lock bit y (y= 0..15)
   *GPIOF_LCKR_LCK0* | 0  | 1  | 1  | rw | Port x lock bit y (y= 0..15)
 ------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_AFRL*
 Address:     $48001420
 Reset:       $00000000
 Description: GPIO alternate function low register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=162
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------------------------
  *GPIOF_AFRL_AFRL7* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOF_AFRL_AFRL6* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOF_AFRL_AFRL5* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOF_AFRL_AFRL4* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOF_AFRL_AFRL3* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOF_AFRL_AFRL2* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOF_AFRL_AFRL1* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOF_AFRL_AFRL0* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 0..7)
 ------------------+----+----+----+----+----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_AFRH*
 Address:     $48001424
 Reset:       $00000000
 Description: GPIO alternate function high register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------------------------------------
  *GPIOF_AFRH_AFRH15* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOF_AFRH_AFRH14* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOF_AFRH_AFRH13* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOF_AFRH_AFRH12* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOF_AFRH_AFRH11* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOF_AFRH_AFRH10* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOF_AFRH_AFRH9* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOF_AFRH_AFRH8* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 8..15)
 -------------------+----+----+----+----+-----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOF|
 Register:    *GPIOF_BRR*
 Address:     $48001428
 Reset:       $00000000
 Description: Port bit reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
   *GPIOF_BRR_BR0* | 0  | 1  | 1  | rw | Port x Reset bit y
   *GPIOF_BRR_BR1* | 1  | 1  | 2  | rw | Port x Reset bit y
   *GPIOF_BRR_BR2* | 2  | 1  | 3  | rw | Port x Reset bit y
   *GPIOF_BRR_BR3* | 3  | 1  | 4  | rw | Port x Reset bit y
   *GPIOF_BRR_BR4* | 4  | 1  | 5  | rw | Port x Reset bit y
   *GPIOF_BRR_BR5* | 5  | 1  | 6  | rw | Port x Reset bit y
   *GPIOF_BRR_BR6* | 6  | 1  | 7  | rw | Port x Reset bit y
   *GPIOF_BRR_BR7* | 7  | 1  | 8  | rw | Port x Reset bit y
   *GPIOF_BRR_BR8* | 8  | 1  | 9  | rw | Port x Reset bit y
   *GPIOF_BRR_BR9* | 9  | 1  | 10 | rw | Port x Reset bit y
  *GPIOF_BRR_BR10* | 10 | 1  | 11 | rw | Port x Reset bit y
  *GPIOF_BRR_BR11* | 11 | 1  | 12 | rw | Port x Reset bit y
  *GPIOF_BRR_BR12* | 12 | 1  | 13 | rw | Port x Reset bit y
  *GPIOF_BRR_BR13* | 13 | 1  | 14 | rw | Port x Reset bit y
  *GPIOF_BRR_BR14* | 14 | 1  | 15 | rw | Port x Reset bit y
  *GPIOF_BRR_BR15* | 15 | 1  | 16 | rw | Port x Reset bit y
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_MODER*
 Address:     $48000C00
 Reset:       $00000000
 Description: GPIO port mode register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOD_MODER_MODER15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_MODER_MODER14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_MODER_MODER13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_MODER_MODER12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_MODER_MODER11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_MODER_MODER10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_MODER_MODER0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_OTYPER*
 Address:     $48000C04
 Reset:       $00000000
 Description: GPIO port output type register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------
  *GPIOD_OTYPER_OT15* | 15 | 1  | 16 | rw | Port x configuration bit 15
  *GPIOD_OTYPER_OT14* | 14 | 1  | 15 | rw | Port x configuration bit 14
  *GPIOD_OTYPER_OT13* | 13 | 1  | 14 | rw | Port x configuration bit 13
  *GPIOD_OTYPER_OT12* | 12 | 1  | 13 | rw | Port x configuration bit 12
  *GPIOD_OTYPER_OT11* | 11 | 1  | 12 | rw | Port x configuration bit 11
  *GPIOD_OTYPER_OT10* | 10 | 1  | 11 | rw | Port x configuration bit 10
   *GPIOD_OTYPER_OT9* | 9  | 1  | 10 | rw | Port x configuration bit 9
   *GPIOD_OTYPER_OT8* | 8  | 1  | 9  | rw | Port x configuration bit 8
   *GPIOD_OTYPER_OT7* | 7  | 1  | 8  | rw | Port x configuration bit 7
   *GPIOD_OTYPER_OT6* | 6  | 1  | 7  | rw | Port x configuration bit 6
   *GPIOD_OTYPER_OT5* | 5  | 1  | 6  | rw | Port x configuration bit 5
   *GPIOD_OTYPER_OT4* | 4  | 1  | 5  | rw | Port x configuration bit 4
   *GPIOD_OTYPER_OT3* | 3  | 1  | 4  | rw | Port x configuration bit 3
   *GPIOD_OTYPER_OT2* | 2  | 1  | 3  | rw | Port x configuration bit 2
   *GPIOD_OTYPER_OT1* | 1  | 1  | 2  | rw | Port x configuration bit 1
   *GPIOD_OTYPER_OT0* | 0  | 1  | 1  | rw | Port x configuration bit 0
 -------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_OSPEEDR*
 Address:     $48000C08
 Reset:       $00000000
 Description: GPIO port output speed register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------------
  *GPIOD_OSPEEDR_OSPEEDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_OSPEEDR_OSPEEDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_OSPEEDR_OSPEEDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_OSPEEDR_OSPEEDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_OSPEEDR_OSPEEDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_OSPEEDR_OSPEEDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_OSPEEDR_OSPEEDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 -------------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_PUPDR*
 Address:     $48000C0C
 Reset:       $00000000
 Description: GPIO port pull-up/pull-down register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOD_PUPDR_PUPDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_PUPDR_PUPDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_PUPDR_PUPDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_PUPDR_PUPDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_PUPDR_PUPDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOD_PUPDR_PUPDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOD_PUPDR_PUPDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_IDR*
 Address:     $48000C10
 Reset:       $00000000
 Description: GPIO port input data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------
  *GPIOD_IDR_IDR15* | 15 | 1  | 16 | rw | Port input data (y = 0..15)
  *GPIOD_IDR_IDR14* | 14 | 1  | 15 | rw | Port input data (y = 0..15)
  *GPIOD_IDR_IDR13* | 13 | 1  | 14 | rw | Port input data (y = 0..15)
  *GPIOD_IDR_IDR12* | 12 | 1  | 13 | rw | Port input data (y = 0..15)
  *GPIOD_IDR_IDR11* | 11 | 1  | 12 | rw | Port input data (y = 0..15)
  *GPIOD_IDR_IDR10* | 10 | 1  | 11 | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR9* | 9  | 1  | 10 | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR8* | 8  | 1  | 9  | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR7* | 7  | 1  | 8  | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR6* | 6  | 1  | 7  | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR5* | 5  | 1  | 6  | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR4* | 4  | 1  | 5  | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR3* | 3  | 1  | 4  | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR2* | 2  | 1  | 3  | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR1* | 1  | 1  | 2  | rw | Port input data (y = 0..15)
   *GPIOD_IDR_IDR0* | 0  | 1  | 1  | rw | Port input data (y = 0..15)
 -----------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_ODR*
 Address:     $48000C14
 Reset:       $00000000
 Description: GPIO port output data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------
  *GPIOD_ODR_ODR15* | 15 | 1  | 16 | rw | Port output data (y = 0..15)
  *GPIOD_ODR_ODR14* | 14 | 1  | 15 | rw | Port output data (y = 0..15)
  *GPIOD_ODR_ODR13* | 13 | 1  | 14 | rw | Port output data (y = 0..15)
  *GPIOD_ODR_ODR12* | 12 | 1  | 13 | rw | Port output data (y = 0..15)
  *GPIOD_ODR_ODR11* | 11 | 1  | 12 | rw | Port output data (y = 0..15)
  *GPIOD_ODR_ODR10* | 10 | 1  | 11 | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR9* | 9  | 1  | 10 | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR8* | 8  | 1  | 9  | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR7* | 7  | 1  | 8  | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR6* | 6  | 1  | 7  | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR5* | 5  | 1  | 6  | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR4* | 4  | 1  | 5  | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR3* | 3  | 1  | 4  | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR2* | 2  | 1  | 3  | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR1* | 1  | 1  | 2  | rw | Port output data (y = 0..15)
   *GPIOD_ODR_ODR0* | 0  | 1  | 1  | rw | Port output data (y = 0..15)
 -----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_BSRR*
 Address:     $48000C18
 Reset:       $00000000
 Description: GPIO port bit set/reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------
  *GPIOD_BSRR_BR15* | 31 | 1  | 32 | rw | Port x reset bit y (y = 0..15)
  *GPIOD_BSRR_BR14* | 30 | 1  | 31 | rw | Port x reset bit y (y = 0..15)
  *GPIOD_BSRR_BR13* | 29 | 1  | 30 | rw | Port x reset bit y (y = 0..15)
  *GPIOD_BSRR_BR12* | 28 | 1  | 29 | rw | Port x reset bit y (y = 0..15)
  *GPIOD_BSRR_BR11* | 27 | 1  | 28 | rw | Port x reset bit y (y = 0..15)
  *GPIOD_BSRR_BR10* | 26 | 1  | 27 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR9* | 25 | 1  | 26 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR8* | 24 | 1  | 25 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR7* | 23 | 1  | 24 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR6* | 22 | 1  | 23 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR5* | 21 | 1  | 22 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR4* | 20 | 1  | 21 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR3* | 19 | 1  | 20 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR2* | 18 | 1  | 19 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR1* | 17 | 1  | 18 | rw | Port x reset bit y (y = 0..15)
   *GPIOD_BSRR_BR0* | 16 | 1  | 17 | rw | Port x set bit y (y= 0..15)
  *GPIOD_BSRR_BS15* | 15 | 1  | 16 | rw | Port x set bit y (y= 0..15)
  *GPIOD_BSRR_BS14* | 14 | 1  | 15 | rw | Port x set bit y (y= 0..15)
  *GPIOD_BSRR_BS13* | 13 | 1  | 14 | rw | Port x set bit y (y= 0..15)
  *GPIOD_BSRR_BS12* | 12 | 1  | 13 | rw | Port x set bit y (y= 0..15)
  *GPIOD_BSRR_BS11* | 11 | 1  | 12 | rw | Port x set bit y (y= 0..15)
  *GPIOD_BSRR_BS10* | 10 | 1  | 11 | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS9* | 9  | 1  | 10 | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS8* | 8  | 1  | 9  | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS7* | 7  | 1  | 8  | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS6* | 6  | 1  | 7  | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS5* | 5  | 1  | 6  | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS4* | 4  | 1  | 5  | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS3* | 3  | 1  | 4  | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS2* | 2  | 1  | 3  | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS1* | 1  | 1  | 2  | rw | Port x set bit y (y= 0..15)
   *GPIOD_BSRR_BS0* | 0  | 1  | 1  | rw | Port x set bit y (y= 0..15)
 -----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_LCKR*
 Address:     $48000C1C
 Reset:       $00000000
 Description: GPIO port configuration lock register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------
   *GPIOD_LCKR_LCKK* | 16 | 1  | 17 | rw | Port x lock bit y
  *GPIOD_LCKR_LCK15* | 15 | 1  | 16 | rw | Port x lock bit y (y= 0..15)
  *GPIOD_LCKR_LCK14* | 14 | 1  | 15 | rw | Port x lock bit y (y= 0..15)
  *GPIOD_LCKR_LCK13* | 13 | 1  | 14 | rw | Port x lock bit y (y= 0..15)
  *GPIOD_LCKR_LCK12* | 12 | 1  | 13 | rw | Port x lock bit y (y= 0..15)
  *GPIOD_LCKR_LCK11* | 11 | 1  | 12 | rw | Port x lock bit y (y= 0..15)
  *GPIOD_LCKR_LCK10* | 10 | 1  | 11 | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK9* | 9  | 1  | 10 | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK8* | 8  | 1  | 9  | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK7* | 7  | 1  | 8  | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK6* | 6  | 1  | 7  | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK5* | 5  | 1  | 6  | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK4* | 4  | 1  | 5  | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK3* | 3  | 1  | 4  | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK2* | 2  | 1  | 3  | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK1* | 1  | 1  | 2  | rw | Port x lock bit y (y= 0..15)
   *GPIOD_LCKR_LCK0* | 0  | 1  | 1  | rw | Port x lock bit y (y= 0..15)
 ------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_AFRL*
 Address:     $48000C20
 Reset:       $00000000
 Description: GPIO alternate function low register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=162
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------------------------
  *GPIOD_AFRL_AFRL7* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOD_AFRL_AFRL6* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOD_AFRL_AFRL5* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOD_AFRL_AFRL4* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOD_AFRL_AFRL3* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOD_AFRL_AFRL2* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOD_AFRL_AFRL1* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOD_AFRL_AFRL0* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 0..7)
 ------------------+----+----+----+----+----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_AFRH*
 Address:     $48000C24
 Reset:       $00000000
 Description: GPIO alternate function high register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------------------------------------
  *GPIOD_AFRH_AFRH15* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOD_AFRH_AFRH14* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOD_AFRH_AFRH13* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOD_AFRH_AFRH12* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOD_AFRH_AFRH11* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOD_AFRH_AFRH10* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOD_AFRH_AFRH9* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOD_AFRH_AFRH8* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 8..15)
 -------------------+----+----+----+----+-----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOD|
 Register:    *GPIOD_BRR*
 Address:     $48000C28
 Reset:       $00000000
 Description: Port bit reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
   *GPIOD_BRR_BR0* | 0  | 1  | 1  | rw | Port x Reset bit y
   *GPIOD_BRR_BR1* | 1  | 1  | 2  | rw | Port x Reset bit y
   *GPIOD_BRR_BR2* | 2  | 1  | 3  | rw | Port x Reset bit y
   *GPIOD_BRR_BR3* | 3  | 1  | 4  | rw | Port x Reset bit y
   *GPIOD_BRR_BR4* | 4  | 1  | 5  | rw | Port x Reset bit y
   *GPIOD_BRR_BR5* | 5  | 1  | 6  | rw | Port x Reset bit y
   *GPIOD_BRR_BR6* | 6  | 1  | 7  | rw | Port x Reset bit y
   *GPIOD_BRR_BR7* | 7  | 1  | 8  | rw | Port x Reset bit y
   *GPIOD_BRR_BR8* | 8  | 1  | 9  | rw | Port x Reset bit y
   *GPIOD_BRR_BR9* | 9  | 1  | 10 | rw | Port x Reset bit y
  *GPIOD_BRR_BR10* | 10 | 1  | 11 | rw | Port x Reset bit y
  *GPIOD_BRR_BR11* | 11 | 1  | 12 | rw | Port x Reset bit y
  *GPIOD_BRR_BR12* | 12 | 1  | 13 | rw | Port x Reset bit y
  *GPIOD_BRR_BR13* | 13 | 1  | 14 | rw | Port x Reset bit y
  *GPIOD_BRR_BR14* | 14 | 1  | 15 | rw | Port x Reset bit y
  *GPIOD_BRR_BR15* | 15 | 1  | 16 | rw | Port x Reset bit y
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_MODER*
 Address:     $48000800
 Reset:       $00000000
 Description: GPIO port mode register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOC_MODER_MODER15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_MODER_MODER14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_MODER_MODER13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_MODER_MODER12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_MODER_MODER11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_MODER_MODER10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_MODER_MODER0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_OTYPER*
 Address:     $48000804
 Reset:       $00000000
 Description: GPIO port output type register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------
  *GPIOC_OTYPER_OT15* | 15 | 1  | 16 | rw | Port x configuration bit 15
  *GPIOC_OTYPER_OT14* | 14 | 1  | 15 | rw | Port x configuration bit 14
  *GPIOC_OTYPER_OT13* | 13 | 1  | 14 | rw | Port x configuration bit 13
  *GPIOC_OTYPER_OT12* | 12 | 1  | 13 | rw | Port x configuration bit 12
  *GPIOC_OTYPER_OT11* | 11 | 1  | 12 | rw | Port x configuration bit 11
  *GPIOC_OTYPER_OT10* | 10 | 1  | 11 | rw | Port x configuration bit 10
   *GPIOC_OTYPER_OT9* | 9  | 1  | 10 | rw | Port x configuration bit 9
   *GPIOC_OTYPER_OT8* | 8  | 1  | 9  | rw | Port x configuration bit 8
   *GPIOC_OTYPER_OT7* | 7  | 1  | 8  | rw | Port x configuration bit 7
   *GPIOC_OTYPER_OT6* | 6  | 1  | 7  | rw | Port x configuration bit 6
   *GPIOC_OTYPER_OT5* | 5  | 1  | 6  | rw | Port x configuration bit 5
   *GPIOC_OTYPER_OT4* | 4  | 1  | 5  | rw | Port x configuration bit 4
   *GPIOC_OTYPER_OT3* | 3  | 1  | 4  | rw | Port x configuration bit 3
   *GPIOC_OTYPER_OT2* | 2  | 1  | 3  | rw | Port x configuration bit 2
   *GPIOC_OTYPER_OT1* | 1  | 1  | 2  | rw | Port x configuration bit 1
   *GPIOC_OTYPER_OT0* | 0  | 1  | 1  | rw | Port x configuration bit 0
 -------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_OSPEEDR*
 Address:     $48000808
 Reset:       $00000000
 Description: GPIO port output speed register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------------
  *GPIOC_OSPEEDR_OSPEEDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_OSPEEDR_OSPEEDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_OSPEEDR_OSPEEDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_OSPEEDR_OSPEEDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_OSPEEDR_OSPEEDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_OSPEEDR_OSPEEDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_OSPEEDR_OSPEEDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 -------------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_PUPDR*
 Address:     $4800080C
 Reset:       $00000000
 Description: GPIO port pull-up/pull-down register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOC_PUPDR_PUPDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_PUPDR_PUPDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_PUPDR_PUPDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_PUPDR_PUPDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_PUPDR_PUPDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOC_PUPDR_PUPDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOC_PUPDR_PUPDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_IDR*
 Address:     $48000810
 Reset:       $00000000
 Description: GPIO port input data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------
  *GPIOC_IDR_IDR15* | 15 | 1  | 16 | rw | Port input data (y = 0..15)
  *GPIOC_IDR_IDR14* | 14 | 1  | 15 | rw | Port input data (y = 0..15)
  *GPIOC_IDR_IDR13* | 13 | 1  | 14 | rw | Port input data (y = 0..15)
  *GPIOC_IDR_IDR12* | 12 | 1  | 13 | rw | Port input data (y = 0..15)
  *GPIOC_IDR_IDR11* | 11 | 1  | 12 | rw | Port input data (y = 0..15)
  *GPIOC_IDR_IDR10* | 10 | 1  | 11 | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR9* | 9  | 1  | 10 | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR8* | 8  | 1  | 9  | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR7* | 7  | 1  | 8  | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR6* | 6  | 1  | 7  | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR5* | 5  | 1  | 6  | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR4* | 4  | 1  | 5  | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR3* | 3  | 1  | 4  | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR2* | 2  | 1  | 3  | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR1* | 1  | 1  | 2  | rw | Port input data (y = 0..15)
   *GPIOC_IDR_IDR0* | 0  | 1  | 1  | rw | Port input data (y = 0..15)
 -----------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_ODR*
 Address:     $48000814
 Reset:       $00000000
 Description: GPIO port output data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------
  *GPIOC_ODR_ODR15* | 15 | 1  | 16 | rw | Port output data (y = 0..15)
  *GPIOC_ODR_ODR14* | 14 | 1  | 15 | rw | Port output data (y = 0..15)
  *GPIOC_ODR_ODR13* | 13 | 1  | 14 | rw | Port output data (y = 0..15)
  *GPIOC_ODR_ODR12* | 12 | 1  | 13 | rw | Port output data (y = 0..15)
  *GPIOC_ODR_ODR11* | 11 | 1  | 12 | rw | Port output data (y = 0..15)
  *GPIOC_ODR_ODR10* | 10 | 1  | 11 | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR9* | 9  | 1  | 10 | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR8* | 8  | 1  | 9  | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR7* | 7  | 1  | 8  | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR6* | 6  | 1  | 7  | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR5* | 5  | 1  | 6  | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR4* | 4  | 1  | 5  | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR3* | 3  | 1  | 4  | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR2* | 2  | 1  | 3  | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR1* | 1  | 1  | 2  | rw | Port output data (y = 0..15)
   *GPIOC_ODR_ODR0* | 0  | 1  | 1  | rw | Port output data (y = 0..15)
 -----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_BSRR*
 Address:     $48000818
 Reset:       $00000000
 Description: GPIO port bit set/reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------
  *GPIOC_BSRR_BR15* | 31 | 1  | 32 | rw | Port x reset bit y (y = 0..15)
  *GPIOC_BSRR_BR14* | 30 | 1  | 31 | rw | Port x reset bit y (y = 0..15)
  *GPIOC_BSRR_BR13* | 29 | 1  | 30 | rw | Port x reset bit y (y = 0..15)
  *GPIOC_BSRR_BR12* | 28 | 1  | 29 | rw | Port x reset bit y (y = 0..15)
  *GPIOC_BSRR_BR11* | 27 | 1  | 28 | rw | Port x reset bit y (y = 0..15)
  *GPIOC_BSRR_BR10* | 26 | 1  | 27 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR9* | 25 | 1  | 26 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR8* | 24 | 1  | 25 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR7* | 23 | 1  | 24 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR6* | 22 | 1  | 23 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR5* | 21 | 1  | 22 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR4* | 20 | 1  | 21 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR3* | 19 | 1  | 20 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR2* | 18 | 1  | 19 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR1* | 17 | 1  | 18 | rw | Port x reset bit y (y = 0..15)
   *GPIOC_BSRR_BR0* | 16 | 1  | 17 | rw | Port x set bit y (y= 0..15)
  *GPIOC_BSRR_BS15* | 15 | 1  | 16 | rw | Port x set bit y (y= 0..15)
  *GPIOC_BSRR_BS14* | 14 | 1  | 15 | rw | Port x set bit y (y= 0..15)
  *GPIOC_BSRR_BS13* | 13 | 1  | 14 | rw | Port x set bit y (y= 0..15)
  *GPIOC_BSRR_BS12* | 12 | 1  | 13 | rw | Port x set bit y (y= 0..15)
  *GPIOC_BSRR_BS11* | 11 | 1  | 12 | rw | Port x set bit y (y= 0..15)
  *GPIOC_BSRR_BS10* | 10 | 1  | 11 | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS9* | 9  | 1  | 10 | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS8* | 8  | 1  | 9  | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS7* | 7  | 1  | 8  | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS6* | 6  | 1  | 7  | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS5* | 5  | 1  | 6  | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS4* | 4  | 1  | 5  | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS3* | 3  | 1  | 4  | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS2* | 2  | 1  | 3  | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS1* | 1  | 1  | 2  | rw | Port x set bit y (y= 0..15)
   *GPIOC_BSRR_BS0* | 0  | 1  | 1  | rw | Port x set bit y (y= 0..15)
 -----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_LCKR*
 Address:     $4800081C
 Reset:       $00000000
 Description: GPIO port configuration lock register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------
   *GPIOC_LCKR_LCKK* | 16 | 1  | 17 | rw | Port x lock bit y
  *GPIOC_LCKR_LCK15* | 15 | 1  | 16 | rw | Port x lock bit y (y= 0..15)
  *GPIOC_LCKR_LCK14* | 14 | 1  | 15 | rw | Port x lock bit y (y= 0..15)
  *GPIOC_LCKR_LCK13* | 13 | 1  | 14 | rw | Port x lock bit y (y= 0..15)
  *GPIOC_LCKR_LCK12* | 12 | 1  | 13 | rw | Port x lock bit y (y= 0..15)
  *GPIOC_LCKR_LCK11* | 11 | 1  | 12 | rw | Port x lock bit y (y= 0..15)
  *GPIOC_LCKR_LCK10* | 10 | 1  | 11 | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK9* | 9  | 1  | 10 | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK8* | 8  | 1  | 9  | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK7* | 7  | 1  | 8  | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK6* | 6  | 1  | 7  | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK5* | 5  | 1  | 6  | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK4* | 4  | 1  | 5  | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK3* | 3  | 1  | 4  | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK2* | 2  | 1  | 3  | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK1* | 1  | 1  | 2  | rw | Port x lock bit y (y= 0..15)
   *GPIOC_LCKR_LCK0* | 0  | 1  | 1  | rw | Port x lock bit y (y= 0..15)
 ------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_AFRL*
 Address:     $48000820
 Reset:       $00000000
 Description: GPIO alternate function low register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=162
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------------------------
  *GPIOC_AFRL_AFRL7* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOC_AFRL_AFRL6* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOC_AFRL_AFRL5* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOC_AFRL_AFRL4* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOC_AFRL_AFRL3* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOC_AFRL_AFRL2* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOC_AFRL_AFRL1* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOC_AFRL_AFRL0* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 0..7)
 ------------------+----+----+----+----+----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_AFRH*
 Address:     $48000824
 Reset:       $00000000
 Description: GPIO alternate function high register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------------------------------------
  *GPIOC_AFRH_AFRH15* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOC_AFRH_AFRH14* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOC_AFRH_AFRH13* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOC_AFRH_AFRH12* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOC_AFRH_AFRH11* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOC_AFRH_AFRH10* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOC_AFRH_AFRH9* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOC_AFRH_AFRH8* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 8..15)
 -------------------+----+----+----+----+-----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOC|
 Register:    *GPIOC_BRR*
 Address:     $48000828
 Reset:       $00000000
 Description: Port bit reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
   *GPIOC_BRR_BR0* | 0  | 1  | 1  | rw | Port x Reset bit y
   *GPIOC_BRR_BR1* | 1  | 1  | 2  | rw | Port x Reset bit y
   *GPIOC_BRR_BR2* | 2  | 1  | 3  | rw | Port x Reset bit y
   *GPIOC_BRR_BR3* | 3  | 1  | 4  | rw | Port x Reset bit y
   *GPIOC_BRR_BR4* | 4  | 1  | 5  | rw | Port x Reset bit y
   *GPIOC_BRR_BR5* | 5  | 1  | 6  | rw | Port x Reset bit y
   *GPIOC_BRR_BR6* | 6  | 1  | 7  | rw | Port x Reset bit y
   *GPIOC_BRR_BR7* | 7  | 1  | 8  | rw | Port x Reset bit y
   *GPIOC_BRR_BR8* | 8  | 1  | 9  | rw | Port x Reset bit y
   *GPIOC_BRR_BR9* | 9  | 1  | 10 | rw | Port x Reset bit y
  *GPIOC_BRR_BR10* | 10 | 1  | 11 | rw | Port x Reset bit y
  *GPIOC_BRR_BR11* | 11 | 1  | 12 | rw | Port x Reset bit y
  *GPIOC_BRR_BR12* | 12 | 1  | 13 | rw | Port x Reset bit y
  *GPIOC_BRR_BR13* | 13 | 1  | 14 | rw | Port x Reset bit y
  *GPIOC_BRR_BR14* | 14 | 1  | 15 | rw | Port x Reset bit y
  *GPIOC_BRR_BR15* | 15 | 1  | 16 | rw | Port x Reset bit y
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_MODER*
 Address:     $48000400
 Reset:       $00000000
 Description: GPIO port mode register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOB_MODER_MODER15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_MODER_MODER14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_MODER_MODER13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_MODER_MODER12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_MODER_MODER11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_MODER_MODER10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_MODER_MODER0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_OTYPER*
 Address:     $48000404
 Reset:       $00000000
 Description: GPIO port output type register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------
  *GPIOB_OTYPER_OT15* | 15 | 1  | 16 | rw | Port x configuration bit 15
  *GPIOB_OTYPER_OT14* | 14 | 1  | 15 | rw | Port x configuration bit 14
  *GPIOB_OTYPER_OT13* | 13 | 1  | 14 | rw | Port x configuration bit 13
  *GPIOB_OTYPER_OT12* | 12 | 1  | 13 | rw | Port x configuration bit 12
  *GPIOB_OTYPER_OT11* | 11 | 1  | 12 | rw | Port x configuration bit 11
  *GPIOB_OTYPER_OT10* | 10 | 1  | 11 | rw | Port x configuration bit 10
   *GPIOB_OTYPER_OT9* | 9  | 1  | 10 | rw | Port x configuration bit 9
   *GPIOB_OTYPER_OT8* | 8  | 1  | 9  | rw | Port x configuration bit 8
   *GPIOB_OTYPER_OT7* | 7  | 1  | 8  | rw | Port x configuration bit 7
   *GPIOB_OTYPER_OT6* | 6  | 1  | 7  | rw | Port x configuration bit 6
   *GPIOB_OTYPER_OT5* | 5  | 1  | 6  | rw | Port x configuration bit 5
   *GPIOB_OTYPER_OT4* | 4  | 1  | 5  | rw | Port x configuration bit 4
   *GPIOB_OTYPER_OT3* | 3  | 1  | 4  | rw | Port x configuration bit 3
   *GPIOB_OTYPER_OT2* | 2  | 1  | 3  | rw | Port x configuration bit 2
   *GPIOB_OTYPER_OT1* | 1  | 1  | 2  | rw | Port x configuration bit 1
   *GPIOB_OTYPER_OT0* | 0  | 1  | 1  | rw | Port x configuration bit 0
 -------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_OSPEEDR*
 Address:     $48000408
 Reset:       $00000000
 Description: GPIO port output speed register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------------
  *GPIOB_OSPEEDR_OSPEEDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_OSPEEDR_OSPEEDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_OSPEEDR_OSPEEDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_OSPEEDR_OSPEEDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_OSPEEDR_OSPEEDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_OSPEEDR_OSPEEDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_OSPEEDR_OSPEEDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 -------------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_PUPDR*
 Address:     $4800040C
 Reset:       $00000000
 Description: GPIO port pull-up/pull-down register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOB_PUPDR_PUPDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_PUPDR_PUPDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_PUPDR_PUPDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_PUPDR_PUPDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_PUPDR_PUPDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOB_PUPDR_PUPDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOB_PUPDR_PUPDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_IDR*
 Address:     $48000410
 Reset:       $00000000
 Description: GPIO port input data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------
  *GPIOB_IDR_IDR15* | 15 | 1  | 16 | rw | Port input data (y = 0..15)
  *GPIOB_IDR_IDR14* | 14 | 1  | 15 | rw | Port input data (y = 0..15)
  *GPIOB_IDR_IDR13* | 13 | 1  | 14 | rw | Port input data (y = 0..15)
  *GPIOB_IDR_IDR12* | 12 | 1  | 13 | rw | Port input data (y = 0..15)
  *GPIOB_IDR_IDR11* | 11 | 1  | 12 | rw | Port input data (y = 0..15)
  *GPIOB_IDR_IDR10* | 10 | 1  | 11 | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR9* | 9  | 1  | 10 | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR8* | 8  | 1  | 9  | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR7* | 7  | 1  | 8  | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR6* | 6  | 1  | 7  | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR5* | 5  | 1  | 6  | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR4* | 4  | 1  | 5  | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR3* | 3  | 1  | 4  | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR2* | 2  | 1  | 3  | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR1* | 1  | 1  | 2  | rw | Port input data (y = 0..15)
   *GPIOB_IDR_IDR0* | 0  | 1  | 1  | rw | Port input data (y = 0..15)
 -----------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_ODR*
 Address:     $48000414
 Reset:       $00000000
 Description: GPIO port output data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------
  *GPIOB_ODR_ODR15* | 15 | 1  | 16 | rw | Port output data (y = 0..15)
  *GPIOB_ODR_ODR14* | 14 | 1  | 15 | rw | Port output data (y = 0..15)
  *GPIOB_ODR_ODR13* | 13 | 1  | 14 | rw | Port output data (y = 0..15)
  *GPIOB_ODR_ODR12* | 12 | 1  | 13 | rw | Port output data (y = 0..15)
  *GPIOB_ODR_ODR11* | 11 | 1  | 12 | rw | Port output data (y = 0..15)
  *GPIOB_ODR_ODR10* | 10 | 1  | 11 | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR9* | 9  | 1  | 10 | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR8* | 8  | 1  | 9  | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR7* | 7  | 1  | 8  | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR6* | 6  | 1  | 7  | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR5* | 5  | 1  | 6  | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR4* | 4  | 1  | 5  | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR3* | 3  | 1  | 4  | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR2* | 2  | 1  | 3  | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR1* | 1  | 1  | 2  | rw | Port output data (y = 0..15)
   *GPIOB_ODR_ODR0* | 0  | 1  | 1  | rw | Port output data (y = 0..15)
 -----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_BSRR*
 Address:     $48000418
 Reset:       $00000000
 Description: GPIO port bit set/reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------
  *GPIOB_BSRR_BR15* | 31 | 1  | 32 | rw | Port x reset bit y (y = 0..15)
  *GPIOB_BSRR_BR14* | 30 | 1  | 31 | rw | Port x reset bit y (y = 0..15)
  *GPIOB_BSRR_BR13* | 29 | 1  | 30 | rw | Port x reset bit y (y = 0..15)
  *GPIOB_BSRR_BR12* | 28 | 1  | 29 | rw | Port x reset bit y (y = 0..15)
  *GPIOB_BSRR_BR11* | 27 | 1  | 28 | rw | Port x reset bit y (y = 0..15)
  *GPIOB_BSRR_BR10* | 26 | 1  | 27 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR9* | 25 | 1  | 26 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR8* | 24 | 1  | 25 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR7* | 23 | 1  | 24 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR6* | 22 | 1  | 23 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR5* | 21 | 1  | 22 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR4* | 20 | 1  | 21 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR3* | 19 | 1  | 20 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR2* | 18 | 1  | 19 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR1* | 17 | 1  | 18 | rw | Port x reset bit y (y = 0..15)
   *GPIOB_BSRR_BR0* | 16 | 1  | 17 | rw | Port x set bit y (y= 0..15)
  *GPIOB_BSRR_BS15* | 15 | 1  | 16 | rw | Port x set bit y (y= 0..15)
  *GPIOB_BSRR_BS14* | 14 | 1  | 15 | rw | Port x set bit y (y= 0..15)
  *GPIOB_BSRR_BS13* | 13 | 1  | 14 | rw | Port x set bit y (y= 0..15)
  *GPIOB_BSRR_BS12* | 12 | 1  | 13 | rw | Port x set bit y (y= 0..15)
  *GPIOB_BSRR_BS11* | 11 | 1  | 12 | rw | Port x set bit y (y= 0..15)
  *GPIOB_BSRR_BS10* | 10 | 1  | 11 | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS9* | 9  | 1  | 10 | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS8* | 8  | 1  | 9  | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS7* | 7  | 1  | 8  | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS6* | 6  | 1  | 7  | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS5* | 5  | 1  | 6  | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS4* | 4  | 1  | 5  | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS3* | 3  | 1  | 4  | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS2* | 2  | 1  | 3  | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS1* | 1  | 1  | 2  | rw | Port x set bit y (y= 0..15)
   *GPIOB_BSRR_BS0* | 0  | 1  | 1  | rw | Port x set bit y (y= 0..15)
 -----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_LCKR*
 Address:     $4800041C
 Reset:       $00000000
 Description: GPIO port configuration lock register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------
   *GPIOB_LCKR_LCKK* | 16 | 1  | 17 | rw | Port x lock bit y
  *GPIOB_LCKR_LCK15* | 15 | 1  | 16 | rw | Port x lock bit y (y= 0..15)
  *GPIOB_LCKR_LCK14* | 14 | 1  | 15 | rw | Port x lock bit y (y= 0..15)
  *GPIOB_LCKR_LCK13* | 13 | 1  | 14 | rw | Port x lock bit y (y= 0..15)
  *GPIOB_LCKR_LCK12* | 12 | 1  | 13 | rw | Port x lock bit y (y= 0..15)
  *GPIOB_LCKR_LCK11* | 11 | 1  | 12 | rw | Port x lock bit y (y= 0..15)
  *GPIOB_LCKR_LCK10* | 10 | 1  | 11 | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK9* | 9  | 1  | 10 | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK8* | 8  | 1  | 9  | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK7* | 7  | 1  | 8  | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK6* | 6  | 1  | 7  | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK5* | 5  | 1  | 6  | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK4* | 4  | 1  | 5  | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK3* | 3  | 1  | 4  | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK2* | 2  | 1  | 3  | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK1* | 1  | 1  | 2  | rw | Port x lock bit y (y= 0..15)
   *GPIOB_LCKR_LCK0* | 0  | 1  | 1  | rw | Port x lock bit y (y= 0..15)
 ------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_AFRL*
 Address:     $48000420
 Reset:       $00000000
 Description: GPIO alternate function low register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=162
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------------------------
  *GPIOB_AFRL_AFRL7* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOB_AFRL_AFRL6* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOB_AFRL_AFRL5* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOB_AFRL_AFRL4* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOB_AFRL_AFRL3* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOB_AFRL_AFRL2* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOB_AFRL_AFRL1* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOB_AFRL_AFRL0* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 0..7)
 ------------------+----+----+----+----+----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_AFRH*
 Address:     $48000424
 Reset:       $00000000
 Description: GPIO alternate function high register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------------------------------------
  *GPIOB_AFRH_AFRH15* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOB_AFRH_AFRH14* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOB_AFRH_AFRH13* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOB_AFRH_AFRH12* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOB_AFRH_AFRH11* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOB_AFRH_AFRH10* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOB_AFRH_AFRH9* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOB_AFRH_AFRH8* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 8..15)
 -------------------+----+----+----+----+-----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOB|
 Register:    *GPIOB_BRR*
 Address:     $48000428
 Reset:       $00000000
 Description: Port bit reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
   *GPIOB_BRR_BR0* | 0  | 1  | 1  | rw | Port x Reset bit y
   *GPIOB_BRR_BR1* | 1  | 1  | 2  | rw | Port x Reset bit y
   *GPIOB_BRR_BR2* | 2  | 1  | 3  | rw | Port x Reset bit y
   *GPIOB_BRR_BR3* | 3  | 1  | 4  | rw | Port x Reset bit y
   *GPIOB_BRR_BR4* | 4  | 1  | 5  | rw | Port x Reset bit y
   *GPIOB_BRR_BR5* | 5  | 1  | 6  | rw | Port x Reset bit y
   *GPIOB_BRR_BR6* | 6  | 1  | 7  | rw | Port x Reset bit y
   *GPIOB_BRR_BR7* | 7  | 1  | 8  | rw | Port x Reset bit y
   *GPIOB_BRR_BR8* | 8  | 1  | 9  | rw | Port x Reset bit y
   *GPIOB_BRR_BR9* | 9  | 1  | 10 | rw | Port x Reset bit y
  *GPIOB_BRR_BR10* | 10 | 1  | 11 | rw | Port x Reset bit y
  *GPIOB_BRR_BR11* | 11 | 1  | 12 | rw | Port x Reset bit y
  *GPIOB_BRR_BR12* | 12 | 1  | 13 | rw | Port x Reset bit y
  *GPIOB_BRR_BR13* | 13 | 1  | 14 | rw | Port x Reset bit y
  *GPIOB_BRR_BR14* | 14 | 1  | 15 | rw | Port x Reset bit y
  *GPIOB_BRR_BR15* | 15 | 1  | 16 | rw | Port x Reset bit y
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_MODER*
 Address:     $48001000
 Reset:       $00000000
 Description: GPIO port mode register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOE_MODER_MODER15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_MODER_MODER14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_MODER_MODER13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_MODER_MODER12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_MODER_MODER11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_MODER_MODER10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_MODER_MODER0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_OTYPER*
 Address:     $48001004
 Reset:       $00000000
 Description: GPIO port output type register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------
  *GPIOE_OTYPER_OT15* | 15 | 1  | 16 | rw | Port x configuration bit 15
  *GPIOE_OTYPER_OT14* | 14 | 1  | 15 | rw | Port x configuration bit 14
  *GPIOE_OTYPER_OT13* | 13 | 1  | 14 | rw | Port x configuration bit 13
  *GPIOE_OTYPER_OT12* | 12 | 1  | 13 | rw | Port x configuration bit 12
  *GPIOE_OTYPER_OT11* | 11 | 1  | 12 | rw | Port x configuration bit 11
  *GPIOE_OTYPER_OT10* | 10 | 1  | 11 | rw | Port x configuration bit 10
   *GPIOE_OTYPER_OT9* | 9  | 1  | 10 | rw | Port x configuration bit 9
   *GPIOE_OTYPER_OT8* | 8  | 1  | 9  | rw | Port x configuration bit 8
   *GPIOE_OTYPER_OT7* | 7  | 1  | 8  | rw | Port x configuration bit 7
   *GPIOE_OTYPER_OT6* | 6  | 1  | 7  | rw | Port x configuration bit 6
   *GPIOE_OTYPER_OT5* | 5  | 1  | 6  | rw | Port x configuration bit 5
   *GPIOE_OTYPER_OT4* | 4  | 1  | 5  | rw | Port x configuration bit 4
   *GPIOE_OTYPER_OT3* | 3  | 1  | 4  | rw | Port x configuration bit 3
   *GPIOE_OTYPER_OT2* | 2  | 1  | 3  | rw | Port x configuration bit 2
   *GPIOE_OTYPER_OT1* | 1  | 1  | 2  | rw | Port x configuration bit 1
   *GPIOE_OTYPER_OT0* | 0  | 1  | 1  | rw | Port x configuration bit 0
 -------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_OSPEEDR*
 Address:     $48001008
 Reset:       $00000000
 Description: GPIO port output speed register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------------
  *GPIOE_OSPEEDR_OSPEEDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_OSPEEDR_OSPEEDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_OSPEEDR_OSPEEDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_OSPEEDR_OSPEEDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_OSPEEDR_OSPEEDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_OSPEEDR_OSPEEDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_OSPEEDR_OSPEEDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 -------------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_PUPDR*
 Address:     $4800100C
 Reset:       $00000000
 Description: GPIO port pull-up/pull-down register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOE_PUPDR_PUPDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_PUPDR_PUPDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_PUPDR_PUPDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_PUPDR_PUPDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_PUPDR_PUPDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOE_PUPDR_PUPDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOE_PUPDR_PUPDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_IDR*
 Address:     $48001010
 Reset:       $00000000
 Description: GPIO port input data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------
  *GPIOE_IDR_IDR15* | 15 | 1  | 16 | rw | Port input data (y = 0..15)
  *GPIOE_IDR_IDR14* | 14 | 1  | 15 | rw | Port input data (y = 0..15)
  *GPIOE_IDR_IDR13* | 13 | 1  | 14 | rw | Port input data (y = 0..15)
  *GPIOE_IDR_IDR12* | 12 | 1  | 13 | rw | Port input data (y = 0..15)
  *GPIOE_IDR_IDR11* | 11 | 1  | 12 | rw | Port input data (y = 0..15)
  *GPIOE_IDR_IDR10* | 10 | 1  | 11 | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR9* | 9  | 1  | 10 | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR8* | 8  | 1  | 9  | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR7* | 7  | 1  | 8  | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR6* | 6  | 1  | 7  | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR5* | 5  | 1  | 6  | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR4* | 4  | 1  | 5  | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR3* | 3  | 1  | 4  | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR2* | 2  | 1  | 3  | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR1* | 1  | 1  | 2  | rw | Port input data (y = 0..15)
   *GPIOE_IDR_IDR0* | 0  | 1  | 1  | rw | Port input data (y = 0..15)
 -----------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_ODR*
 Address:     $48001014
 Reset:       $00000000
 Description: GPIO port output data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------
  *GPIOE_ODR_ODR15* | 15 | 1  | 16 | rw | Port output data (y = 0..15)
  *GPIOE_ODR_ODR14* | 14 | 1  | 15 | rw | Port output data (y = 0..15)
  *GPIOE_ODR_ODR13* | 13 | 1  | 14 | rw | Port output data (y = 0..15)
  *GPIOE_ODR_ODR12* | 12 | 1  | 13 | rw | Port output data (y = 0..15)
  *GPIOE_ODR_ODR11* | 11 | 1  | 12 | rw | Port output data (y = 0..15)
  *GPIOE_ODR_ODR10* | 10 | 1  | 11 | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR9* | 9  | 1  | 10 | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR8* | 8  | 1  | 9  | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR7* | 7  | 1  | 8  | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR6* | 6  | 1  | 7  | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR5* | 5  | 1  | 6  | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR4* | 4  | 1  | 5  | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR3* | 3  | 1  | 4  | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR2* | 2  | 1  | 3  | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR1* | 1  | 1  | 2  | rw | Port output data (y = 0..15)
   *GPIOE_ODR_ODR0* | 0  | 1  | 1  | rw | Port output data (y = 0..15)
 -----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_BSRR*
 Address:     $48001018
 Reset:       $00000000
 Description: GPIO port bit set/reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------
  *GPIOE_BSRR_BR15* | 31 | 1  | 32 | rw | Port x reset bit y (y = 0..15)
  *GPIOE_BSRR_BR14* | 30 | 1  | 31 | rw | Port x reset bit y (y = 0..15)
  *GPIOE_BSRR_BR13* | 29 | 1  | 30 | rw | Port x reset bit y (y = 0..15)
  *GPIOE_BSRR_BR12* | 28 | 1  | 29 | rw | Port x reset bit y (y = 0..15)
  *GPIOE_BSRR_BR11* | 27 | 1  | 28 | rw | Port x reset bit y (y = 0..15)
  *GPIOE_BSRR_BR10* | 26 | 1  | 27 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR9* | 25 | 1  | 26 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR8* | 24 | 1  | 25 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR7* | 23 | 1  | 24 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR6* | 22 | 1  | 23 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR5* | 21 | 1  | 22 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR4* | 20 | 1  | 21 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR3* | 19 | 1  | 20 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR2* | 18 | 1  | 19 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR1* | 17 | 1  | 18 | rw | Port x reset bit y (y = 0..15)
   *GPIOE_BSRR_BR0* | 16 | 1  | 17 | rw | Port x set bit y (y= 0..15)
  *GPIOE_BSRR_BS15* | 15 | 1  | 16 | rw | Port x set bit y (y= 0..15)
  *GPIOE_BSRR_BS14* | 14 | 1  | 15 | rw | Port x set bit y (y= 0..15)
  *GPIOE_BSRR_BS13* | 13 | 1  | 14 | rw | Port x set bit y (y= 0..15)
  *GPIOE_BSRR_BS12* | 12 | 1  | 13 | rw | Port x set bit y (y= 0..15)
  *GPIOE_BSRR_BS11* | 11 | 1  | 12 | rw | Port x set bit y (y= 0..15)
  *GPIOE_BSRR_BS10* | 10 | 1  | 11 | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS9* | 9  | 1  | 10 | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS8* | 8  | 1  | 9  | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS7* | 7  | 1  | 8  | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS6* | 6  | 1  | 7  | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS5* | 5  | 1  | 6  | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS4* | 4  | 1  | 5  | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS3* | 3  | 1  | 4  | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS2* | 2  | 1  | 3  | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS1* | 1  | 1  | 2  | rw | Port x set bit y (y= 0..15)
   *GPIOE_BSRR_BS0* | 0  | 1  | 1  | rw | Port x set bit y (y= 0..15)
 -----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_LCKR*
 Address:     $4800101C
 Reset:       $00000000
 Description: GPIO port configuration lock register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------
   *GPIOE_LCKR_LCKK* | 16 | 1  | 17 | rw | Port x lock bit y
  *GPIOE_LCKR_LCK15* | 15 | 1  | 16 | rw | Port x lock bit y (y= 0..15)
  *GPIOE_LCKR_LCK14* | 14 | 1  | 15 | rw | Port x lock bit y (y= 0..15)
  *GPIOE_LCKR_LCK13* | 13 | 1  | 14 | rw | Port x lock bit y (y= 0..15)
  *GPIOE_LCKR_LCK12* | 12 | 1  | 13 | rw | Port x lock bit y (y= 0..15)
  *GPIOE_LCKR_LCK11* | 11 | 1  | 12 | rw | Port x lock bit y (y= 0..15)
  *GPIOE_LCKR_LCK10* | 10 | 1  | 11 | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK9* | 9  | 1  | 10 | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK8* | 8  | 1  | 9  | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK7* | 7  | 1  | 8  | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK6* | 6  | 1  | 7  | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK5* | 5  | 1  | 6  | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK4* | 4  | 1  | 5  | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK3* | 3  | 1  | 4  | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK2* | 2  | 1  | 3  | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK1* | 1  | 1  | 2  | rw | Port x lock bit y (y= 0..15)
   *GPIOE_LCKR_LCK0* | 0  | 1  | 1  | rw | Port x lock bit y (y= 0..15)
 ------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_AFRL*
 Address:     $48001020
 Reset:       $00000000
 Description: GPIO alternate function low register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=162
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------------------------
  *GPIOE_AFRL_AFRL7* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOE_AFRL_AFRL6* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOE_AFRL_AFRL5* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOE_AFRL_AFRL4* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOE_AFRL_AFRL3* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOE_AFRL_AFRL2* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOE_AFRL_AFRL1* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOE_AFRL_AFRL0* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 0..7)
 ------------------+----+----+----+----+----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_AFRH*
 Address:     $48001024
 Reset:       $00000000
 Description: GPIO alternate function high register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------------------------------------
  *GPIOE_AFRH_AFRH15* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOE_AFRH_AFRH14* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOE_AFRH_AFRH13* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOE_AFRH_AFRH12* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOE_AFRH_AFRH11* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOE_AFRH_AFRH10* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOE_AFRH_AFRH9* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOE_AFRH_AFRH8* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 8..15)
 -------------------+----+----+----+----+-----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOE|
 Register:    *GPIOE_BRR*
 Address:     $48001028
 Reset:       $00000000
 Description: Port bit reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
   *GPIOE_BRR_BR0* | 0  | 1  | 1  | rw | Port x Reset bit y
   *GPIOE_BRR_BR1* | 1  | 1  | 2  | rw | Port x Reset bit y
   *GPIOE_BRR_BR2* | 2  | 1  | 3  | rw | Port x Reset bit y
   *GPIOE_BRR_BR3* | 3  | 1  | 4  | rw | Port x Reset bit y
   *GPIOE_BRR_BR4* | 4  | 1  | 5  | rw | Port x Reset bit y
   *GPIOE_BRR_BR5* | 5  | 1  | 6  | rw | Port x Reset bit y
   *GPIOE_BRR_BR6* | 6  | 1  | 7  | rw | Port x Reset bit y
   *GPIOE_BRR_BR7* | 7  | 1  | 8  | rw | Port x Reset bit y
   *GPIOE_BRR_BR8* | 8  | 1  | 9  | rw | Port x Reset bit y
   *GPIOE_BRR_BR9* | 9  | 1  | 10 | rw | Port x Reset bit y
  *GPIOE_BRR_BR10* | 10 | 1  | 11 | rw | Port x Reset bit y
  *GPIOE_BRR_BR11* | 11 | 1  | 12 | rw | Port x Reset bit y
  *GPIOE_BRR_BR12* | 12 | 1  | 13 | rw | Port x Reset bit y
  *GPIOE_BRR_BR13* | 13 | 1  | 14 | rw | Port x Reset bit y
  *GPIOE_BRR_BR14* | 14 | 1  | 15 | rw | Port x Reset bit y
  *GPIOE_BRR_BR15* | 15 | 1  | 16 | rw | Port x Reset bit y
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_MODER*
 Address:     $48000000
 Reset:       $28000000
 Description: GPIO port mode register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOA_MODER_MODER15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_MODER_MODER14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_MODER_MODER13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_MODER_MODER12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_MODER_MODER11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_MODER_MODER10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_MODER_MODER0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_OTYPER*
 Address:     $48000004
 Reset:       $00000000
 Description: GPIO port output type register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=158
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+---------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+---------------------------------------
  *GPIOA_OTYPER_OT15* | 15 | 1  | 16 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OTYPER_OT14* | 14 | 1  | 15 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OTYPER_OT13* | 13 | 1  | 14 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OTYPER_OT12* | 12 | 1  | 13 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OTYPER_OT11* | 11 | 1  | 12 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OTYPER_OT10* | 10 | 1  | 11 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT9* | 9  | 1  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT8* | 8  | 1  | 9  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT7* | 7  | 1  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT6* | 6  | 1  | 7  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT5* | 5  | 1  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT4* | 4  | 1  | 5  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT3* | 3  | 1  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT2* | 2  | 1  | 3  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT1* | 1  | 1  | 2  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OTYPER_OT0* | 0  | 1  | 1  | rw | Port x configuration bits (y = 0..15)
 -------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_OSPEEDR*
 Address:     $48000008
 Reset:       $00000000
 Description: GPIO port output speed register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------------
  *GPIOA_OSPEEDR_OSPEEDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OSPEEDR_OSPEEDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OSPEEDR_OSPEEDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OSPEEDR_OSPEEDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OSPEEDR_OSPEEDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_OSPEEDR_OSPEEDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_OSPEEDR_OSPEEDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 -------------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_PUPDR*
 Address:     $4800000C
 Reset:       $24000000
 Description: GPIO port pull-up/pull-down register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=159
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *GPIOA_PUPDR_PUPDR15* | 30 | 2  | 32 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_PUPDR_PUPDR14* | 28 | 2  | 30 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_PUPDR_PUPDR13* | 26 | 2  | 28 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_PUPDR_PUPDR12* | 24 | 2  | 26 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_PUPDR_PUPDR11* | 22 | 2  | 24 | rw | Port x configuration bits (y = 0..15)
  *GPIOA_PUPDR_PUPDR10* | 20 | 2  | 22 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR9* | 18 | 2  | 20 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR8* | 16 | 2  | 18 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR7* | 14 | 2  | 16 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR6* | 12 | 2  | 14 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR5* | 10 | 2  | 12 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR4* | 8  | 2  | 10 | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR3* | 6  | 2  | 8  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR2* | 4  | 2  | 6  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR1* | 2  | 2  | 4  | rw | Port x configuration bits (y = 0..15)
   *GPIOA_PUPDR_PUPDR0* | 0  | 2  | 2  | rw | Port x configuration bits (y = 0..15)
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_IDR*
 Address:     $48000010
 Reset:       $00000000
 Description: GPIO port input data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------
  *GPIOA_IDR_IDR15* | 15 | 1  | 16 | rw | Port input data (y = 0..15)
  *GPIOA_IDR_IDR14* | 14 | 1  | 15 | rw | Port input data (y = 0..15)
  *GPIOA_IDR_IDR13* | 13 | 1  | 14 | rw | Port input data (y = 0..15)
  *GPIOA_IDR_IDR12* | 12 | 1  | 13 | rw | Port input data (y = 0..15)
  *GPIOA_IDR_IDR11* | 11 | 1  | 12 | rw | Port input data (y = 0..15)
  *GPIOA_IDR_IDR10* | 10 | 1  | 11 | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR9* | 9  | 1  | 10 | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR8* | 8  | 1  | 9  | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR7* | 7  | 1  | 8  | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR6* | 6  | 1  | 7  | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR5* | 5  | 1  | 6  | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR4* | 4  | 1  | 5  | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR3* | 3  | 1  | 4  | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR2* | 2  | 1  | 3  | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR1* | 1  | 1  | 2  | rw | Port input data (y = 0..15)
   *GPIOA_IDR_IDR0* | 0  | 1  | 1  | rw | Port input data (y = 0..15)
 -----------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_ODR*
 Address:     $48000014
 Reset:       $00000000
 Description: GPIO port output data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=160
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------
  *GPIOA_ODR_ODR15* | 15 | 1  | 16 | rw | Port output data (y = 0..15)
  *GPIOA_ODR_ODR14* | 14 | 1  | 15 | rw | Port output data (y = 0..15)
  *GPIOA_ODR_ODR13* | 13 | 1  | 14 | rw | Port output data (y = 0..15)
  *GPIOA_ODR_ODR12* | 12 | 1  | 13 | rw | Port output data (y = 0..15)
  *GPIOA_ODR_ODR11* | 11 | 1  | 12 | rw | Port output data (y = 0..15)
  *GPIOA_ODR_ODR10* | 10 | 1  | 11 | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR9* | 9  | 1  | 10 | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR8* | 8  | 1  | 9  | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR7* | 7  | 1  | 8  | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR6* | 6  | 1  | 7  | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR5* | 5  | 1  | 6  | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR4* | 4  | 1  | 5  | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR3* | 3  | 1  | 4  | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR2* | 2  | 1  | 3  | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR1* | 1  | 1  | 2  | rw | Port output data (y = 0..15)
   *GPIOA_ODR_ODR0* | 0  | 1  | 1  | rw | Port output data (y = 0..15)
 -----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_BSRR*
 Address:     $48000018
 Reset:       $00000000
 Description: GPIO port bit set/reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------
  *GPIOA_BSRR_BR15* | 31 | 1  | 32 | rw | Port x reset bit y (y = 0..15)
  *GPIOA_BSRR_BR14* | 30 | 1  | 31 | rw | Port x reset bit y (y = 0..15)
  *GPIOA_BSRR_BR13* | 29 | 1  | 30 | rw | Port x reset bit y (y = 0..15)
  *GPIOA_BSRR_BR12* | 28 | 1  | 29 | rw | Port x reset bit y (y = 0..15)
  *GPIOA_BSRR_BR11* | 27 | 1  | 28 | rw | Port x reset bit y (y = 0..15)
  *GPIOA_BSRR_BR10* | 26 | 1  | 27 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR9* | 25 | 1  | 26 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR8* | 24 | 1  | 25 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR7* | 23 | 1  | 24 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR6* | 22 | 1  | 23 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR5* | 21 | 1  | 22 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR4* | 20 | 1  | 21 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR3* | 19 | 1  | 20 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR2* | 18 | 1  | 19 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR1* | 17 | 1  | 18 | rw | Port x reset bit y (y = 0..15)
   *GPIOA_BSRR_BR0* | 16 | 1  | 17 | rw | Port x set bit y (y= 0..15)
  *GPIOA_BSRR_BS15* | 15 | 1  | 16 | rw | Port x set bit y (y= 0..15)
  *GPIOA_BSRR_BS14* | 14 | 1  | 15 | rw | Port x set bit y (y= 0..15)
  *GPIOA_BSRR_BS13* | 13 | 1  | 14 | rw | Port x set bit y (y= 0..15)
  *GPIOA_BSRR_BS12* | 12 | 1  | 13 | rw | Port x set bit y (y= 0..15)
  *GPIOA_BSRR_BS11* | 11 | 1  | 12 | rw | Port x set bit y (y= 0..15)
  *GPIOA_BSRR_BS10* | 10 | 1  | 11 | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS9* | 9  | 1  | 10 | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS8* | 8  | 1  | 9  | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS7* | 7  | 1  | 8  | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS6* | 6  | 1  | 7  | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS5* | 5  | 1  | 6  | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS4* | 4  | 1  | 5  | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS3* | 3  | 1  | 4  | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS2* | 2  | 1  | 3  | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS1* | 1  | 1  | 2  | rw | Port x set bit y (y= 0..15)
   *GPIOA_BSRR_BS0* | 0  | 1  | 1  | rw | Port x set bit y (y= 0..15)
 -----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_LCKR*
 Address:     $4800001C
 Reset:       $00000000
 Description: GPIO port configuration lock register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=161
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------
   *GPIOA_LCKR_LCKK* | 16 | 1  | 17 | rw | Port x lock bit y (y= 0..15)
  *GPIOA_LCKR_LCK15* | 15 | 1  | 16 | rw | Port x lock bit y (y= 0..15)
  *GPIOA_LCKR_LCK14* | 14 | 1  | 15 | rw | Port x lock bit y (y= 0..15)
  *GPIOA_LCKR_LCK13* | 13 | 1  | 14 | rw | Port x lock bit y (y= 0..15)
  *GPIOA_LCKR_LCK12* | 12 | 1  | 13 | rw | Port x lock bit y (y= 0..15)
  *GPIOA_LCKR_LCK11* | 11 | 1  | 12 | rw | Port x lock bit y (y= 0..15)
  *GPIOA_LCKR_LCK10* | 10 | 1  | 11 | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK9* | 9  | 1  | 10 | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK8* | 8  | 1  | 9  | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK7* | 7  | 1  | 8  | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK6* | 6  | 1  | 7  | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK5* | 5  | 1  | 6  | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK4* | 4  | 1  | 5  | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK3* | 3  | 1  | 4  | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK2* | 2  | 1  | 3  | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK1* | 1  | 1  | 2  | rw | Port x lock bit y (y= 0..15)
   *GPIOA_LCKR_LCK0* | 0  | 1  | 1  | rw | Port x lock bit y (y= 0..15)
 ------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_AFRL*
 Address:     $48000020
 Reset:       $00000000
 Description: GPIO alternate function low register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=162
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------------------------
  *GPIOA_AFRL_AFRL7* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOA_AFRL_AFRL6* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOA_AFRL_AFRL5* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOA_AFRL_AFRL4* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOA_AFRL_AFRL3* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOA_AFRL_AFRL2* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOA_AFRL_AFRL1* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 0..7)
  *GPIOA_AFRL_AFRL0* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 0..7)
 ------------------+----+----+----+----+----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_AFRH*
 Address:     $48000024
 Reset:       $00000000
 Description: GPIO alternate function high register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------------------------------------
  *GPIOA_AFRH_AFRH15* | 28 | 4  | 32 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOA_AFRH_AFRH14* | 24 | 4  | 28 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOA_AFRH_AFRH13* | 20 | 4  | 24 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOA_AFRH_AFRH12* | 16 | 4  | 20 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOA_AFRH_AFRH11* | 12 | 4  | 16 | rw | Alternate function selection for port x bit y (y = 8..15)
  *GPIOA_AFRH_AFRH10* | 8  | 4  | 12 | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOA_AFRH_AFRH9* | 4  | 4  | 8  | rw | Alternate function selection for port x bit y (y = 8..15)
   *GPIOA_AFRH_AFRH8* | 0  | 4  | 4  | rw | Alternate function selection for port x bit y (y = 8..15)
 -------------------+----+----+----+----+-----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |GPIOA|
 Register:    *GPIOA_BRR*
 Address:     $48000028
 Reset:       $00000000
 Description: Port bit reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=163
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
   *GPIOA_BRR_BR0* | 0  | 1  | 1  | rw | Port x Reset bit y
   *GPIOA_BRR_BR1* | 1  | 1  | 2  | rw | Port x Reset bit y
   *GPIOA_BRR_BR2* | 2  | 1  | 3  | rw | Port x Reset bit y
   *GPIOA_BRR_BR3* | 3  | 1  | 4  | rw | Port x Reset bit y
   *GPIOA_BRR_BR4* | 4  | 1  | 5  | rw | Port x Reset bit y
   *GPIOA_BRR_BR5* | 5  | 1  | 6  | rw | Port x Reset bit y
   *GPIOA_BRR_BR6* | 6  | 1  | 7  | rw | Port x Reset bit y
   *GPIOA_BRR_BR7* | 7  | 1  | 8  | rw | Port x Reset bit y
   *GPIOA_BRR_BR8* | 8  | 1  | 9  | rw | Port x Reset bit y
   *GPIOA_BRR_BR9* | 9  | 1  | 10 | rw | Port x Reset bit y
  *GPIOA_BRR_BR10* | 10 | 1  | 11 | rw | Port x Reset bit y
  *GPIOA_BRR_BR11* | 11 | 1  | 12 | rw | Port x Reset bit y
  *GPIOA_BRR_BR12* | 12 | 1  | 13 | rw | Port x Reset bit y
  *GPIOA_BRR_BR13* | 13 | 1  | 14 | rw | Port x Reset bit y
  *GPIOA_BRR_BR14* | 14 | 1  | 15 | rw | Port x Reset bit y
  *GPIOA_BRR_BR15* | 15 | 1  | 16 | rw | Port x Reset bit y
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_CR1*
 Address:     $40013000
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=814
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-------------------------------------
  *SPI1_CR1_BIDIMODE* | 15 | 1  | 16 | rw | Bidirectional data mode enable
    *SPI1_CR1_BIDIOE* | 14 | 1  | 15 | rw | Output enable in bidirectional mode
     *SPI1_CR1_CRCEN* | 13 | 1  | 14 | rw | Hardware CRC calculation enable
   *SPI1_CR1_CRCNEXT* | 12 | 1  | 13 | rw | CRC transfer next
       *SPI1_CR1_DFF* | 11 | 1  | 12 | rw | Data frame format
    *SPI1_CR1_RXONLY* | 10 | 1  | 11 | rw | Receive only
       *SPI1_CR1_SSM* | 9  | 1  | 10 | rw | Software slave management
       *SPI1_CR1_SSI* | 8  | 1  | 9  | rw | Internal slave select
  *SPI1_CR1_LSBFIRST* | 7  | 1  | 8  | rw | Frame format
       *SPI1_CR1_SPE* | 6  | 1  | 7  | rw | SPI enable
        *SPI1_CR1_BR* | 3  | 3  | 6  | rw | Baud rate control
      *SPI1_CR1_MSTR* | 2  | 1  | 3  | rw | Master selection
      *SPI1_CR1_CPOL* | 1  | 1  | 2  | rw | Clock polarity
      *SPI1_CR1_CPHA* | 0  | 1  | 1  | rw | Clock phase
 -------------------+----+----+----+----+-------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_CR2*
 Address:     $40013004
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=816
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+--------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+--------------------------------------
  *SPI1_CR2_RXDMAEN* | 0  | 1  | 1  | rw | Rx buffer DMA enable
  *SPI1_CR2_TXDMAEN* | 1  | 1  | 2  | rw | Tx buffer DMA enable
     *SPI1_CR2_SSOE* | 2  | 1  | 3  | rw | SS output enable
     *SPI1_CR2_NSSP* | 3  | 1  | 4  | rw | NSS pulse management
      *SPI1_CR2_FRF* | 4  | 1  | 5  | rw | Frame format
    *SPI1_CR2_ERRIE* | 5  | 1  | 6  | rw | Error interrupt enable
   *SPI1_CR2_RXNEIE* | 6  | 1  | 7  | rw | RX buffer not empty interrupt enable
    *SPI1_CR2_TXEIE* | 7  | 1  | 8  | rw | Tx buffer empty interrupt enable
       *SPI1_CR2_DS* | 8  | 4  | 12 | rw | Data size
    *SPI1_CR2_FRXTH* | 12 | 1  | 13 | rw | FIFO reception threshold
  *SPI1_CR2_LDMA_RX* | 13 | 1  | 14 | rw | Last DMA transfer for reception
  *SPI1_CR2_LDMA_TX* | 14 | 1  | 15 | rw | Last DMA transfer for transmission
 ------------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_SR*
 Address:     $40013008
 Reset:       $0002
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=818
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------------
    *SPI1_SR_RXNE* | 0  | 1  | 1  | ro | Receive buffer not empty
     *SPI1_SR_TXE* | 1  | 1  | 2  | ro | Transmit buffer empty
  *SPI1_SR_CHSIDE* | 2  | 1  | 3  | ro | Channel side
     *SPI1_SR_UDR* | 3  | 1  | 4  | ro | Underrun flag
  *SPI1_SR_CRCERR* | 4  | 1  | 5  | rw | CRC error flag
    *SPI1_SR_MODF* | 5  | 1  | 6  | ro | Mode fault
     *SPI1_SR_OVR* | 6  | 1  | 7  | ro | Overrun flag
     *SPI1_SR_BSY* | 7  | 1  | 8  | ro | Busy flag
  *SPI1_SR_TIFRFE* | 8  | 1  | 9  | ro | TI frame format error
   *SPI1_SR_FRLVL* | 9  | 2  | 11 | ro | FIFO reception level
   *SPI1_SR_FTLVL* | 11 | 2  | 13 | ro | FIFO transmission level
 ----------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_DR*
 Address:     $4001300C
 Reset:       $0000
 Description: data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=820
              (place cursor on hyperlink, type 'gx' to follow)

 ------------+----+----+----+----+---------------
    Bitfield | bo | bw | be | ac | Description
 ------------+----+----+----+----+---------------
  *SPI1_DR_DR* | 0  | 16 | 16 | rw | Data register
 ------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_CRCPR*
 Address:     $40013010
 Reset:       $0007
 Description: CRC polynomial register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=820
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+-------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+-------------------------
  *SPI1_CRCPR_CRCPOLY* | 0  | 16 | 16 | rw | CRC polynomial register
 --------------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_RXCRCR*
 Address:     $40013014
 Reset:       $0000
 Description: RX CRC register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=820
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------
  *SPI1_RXCRCR_RxCRC* | 0  | 16 | 16 | rw | Rx CRC register
 -------------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_TXCRCR*
 Address:     $40013018
 Reset:       $0000
 Description: TX CRC register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=821
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------
  *SPI1_TXCRCR_TxCRC* | 0  | 16 | 16 | rw | Tx CRC register
 -------------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_I2SCFGR*
 Address:     $4001301C
 Reset:       $0000
 Description: I2S configuration register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=821
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+---------------------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+---------------------------------------------------
   *SPI1_I2SCFGR_I2SMOD* | 11 | 1  | 12 | rw | I2S mode selection
     *SPI1_I2SCFGR_I2SE* | 10 | 1  | 11 | rw | I2S Enable
   *SPI1_I2SCFGR_I2SCFG* | 8  | 2  | 10 | rw | I2S configuration mode
  *SPI1_I2SCFGR_PCMSYNC* | 7  | 1  | 8  | rw | PCM frame synchronization
   *SPI1_I2SCFGR_I2SSTD* | 4  | 2  | 6  | rw | I2S standard selection
    *SPI1_I2SCFGR_CKPOL* | 3  | 1  | 4  | rw | Steady state clock polarity
   *SPI1_I2SCFGR_DATLEN* | 1  | 2  | 3  | rw | Data length to be transferred
    *SPI1_I2SCFGR_CHLEN* | 0  | 1  | 1  | rw | Channel length (number of bits per audio channel)
 ----------------------+----+----+----+----+---------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI1|
 Register:    *SPI1_I2SPR*
 Address:     $40013020
 Reset:       $00000010
 Description: I2S prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=823
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------
   *SPI1_I2SPR_MCKOE* | 9  | 1  | 10 | rw | Master clock output enable
     *SPI1_I2SPR_ODD* | 8  | 1  | 9  | rw | Odd factor for the prescaler
  *SPI1_I2SPR_I2SDIV* | 0  | 8  | 8  | rw | I2S Linear prescaler
 -------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_CR1*
 Address:     $40003800
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=814
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-------------------------------------
  *SPI2_CR1_BIDIMODE* | 15 | 1  | 16 | rw | Bidirectional data mode enable
    *SPI2_CR1_BIDIOE* | 14 | 1  | 15 | rw | Output enable in bidirectional mode
     *SPI2_CR1_CRCEN* | 13 | 1  | 14 | rw | Hardware CRC calculation enable
   *SPI2_CR1_CRCNEXT* | 12 | 1  | 13 | rw | CRC transfer next
       *SPI2_CR1_DFF* | 11 | 1  | 12 | rw | Data frame format
    *SPI2_CR1_RXONLY* | 10 | 1  | 11 | rw | Receive only
       *SPI2_CR1_SSM* | 9  | 1  | 10 | rw | Software slave management
       *SPI2_CR1_SSI* | 8  | 1  | 9  | rw | Internal slave select
  *SPI2_CR1_LSBFIRST* | 7  | 1  | 8  | rw | Frame format
       *SPI2_CR1_SPE* | 6  | 1  | 7  | rw | SPI enable
        *SPI2_CR1_BR* | 3  | 3  | 6  | rw | Baud rate control
      *SPI2_CR1_MSTR* | 2  | 1  | 3  | rw | Master selection
      *SPI2_CR1_CPOL* | 1  | 1  | 2  | rw | Clock polarity
      *SPI2_CR1_CPHA* | 0  | 1  | 1  | rw | Clock phase
 -------------------+----+----+----+----+-------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_CR2*
 Address:     $40003804
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=816
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+--------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+--------------------------------------
  *SPI2_CR2_RXDMAEN* | 0  | 1  | 1  | rw | Rx buffer DMA enable
  *SPI2_CR2_TXDMAEN* | 1  | 1  | 2  | rw | Tx buffer DMA enable
     *SPI2_CR2_SSOE* | 2  | 1  | 3  | rw | SS output enable
     *SPI2_CR2_NSSP* | 3  | 1  | 4  | rw | NSS pulse management
      *SPI2_CR2_FRF* | 4  | 1  | 5  | rw | Frame format
    *SPI2_CR2_ERRIE* | 5  | 1  | 6  | rw | Error interrupt enable
   *SPI2_CR2_RXNEIE* | 6  | 1  | 7  | rw | RX buffer not empty interrupt enable
    *SPI2_CR2_TXEIE* | 7  | 1  | 8  | rw | Tx buffer empty interrupt enable
       *SPI2_CR2_DS* | 8  | 4  | 12 | rw | Data size
    *SPI2_CR2_FRXTH* | 12 | 1  | 13 | rw | FIFO reception threshold
  *SPI2_CR2_LDMA_RX* | 13 | 1  | 14 | rw | Last DMA transfer for reception
  *SPI2_CR2_LDMA_TX* | 14 | 1  | 15 | rw | Last DMA transfer for transmission
 ------------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_SR*
 Address:     $40003808
 Reset:       $0002
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=818
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------------
    *SPI2_SR_RXNE* | 0  | 1  | 1  | ro | Receive buffer not empty
     *SPI2_SR_TXE* | 1  | 1  | 2  | ro | Transmit buffer empty
  *SPI2_SR_CHSIDE* | 2  | 1  | 3  | ro | Channel side
     *SPI2_SR_UDR* | 3  | 1  | 4  | ro | Underrun flag
  *SPI2_SR_CRCERR* | 4  | 1  | 5  | rw | CRC error flag
    *SPI2_SR_MODF* | 5  | 1  | 6  | ro | Mode fault
     *SPI2_SR_OVR* | 6  | 1  | 7  | ro | Overrun flag
     *SPI2_SR_BSY* | 7  | 1  | 8  | ro | Busy flag
  *SPI2_SR_TIFRFE* | 8  | 1  | 9  | ro | TI frame format error
   *SPI2_SR_FRLVL* | 9  | 2  | 11 | ro | FIFO reception level
   *SPI2_SR_FTLVL* | 11 | 2  | 13 | ro | FIFO transmission level
 ----------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_DR*
 Address:     $4000380C
 Reset:       $0000
 Description: data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=820
              (place cursor on hyperlink, type 'gx' to follow)

 ------------+----+----+----+----+---------------
    Bitfield | bo | bw | be | ac | Description
 ------------+----+----+----+----+---------------
  *SPI2_DR_DR* | 0  | 16 | 16 | rw | Data register
 ------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_CRCPR*
 Address:     $40003810
 Reset:       $0007
 Description: CRC polynomial register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=820
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+-------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+-------------------------
  *SPI2_CRCPR_CRCPOLY* | 0  | 16 | 16 | rw | CRC polynomial register
 --------------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_RXCRCR*
 Address:     $40003814
 Reset:       $0000
 Description: RX CRC register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=820
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------
  *SPI2_RXCRCR_RxCRC* | 0  | 16 | 16 | rw | Rx CRC register
 -------------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_TXCRCR*
 Address:     $40003818
 Reset:       $0000
 Description: TX CRC register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=821
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------
  *SPI2_TXCRCR_TxCRC* | 0  | 16 | 16 | rw | Tx CRC register
 -------------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_I2SCFGR*
 Address:     $4000381C
 Reset:       $0000
 Description: I2S configuration register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=821
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+---------------------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+---------------------------------------------------
   *SPI2_I2SCFGR_I2SMOD* | 11 | 1  | 12 | rw | I2S mode selection
     *SPI2_I2SCFGR_I2SE* | 10 | 1  | 11 | rw | I2S Enable
   *SPI2_I2SCFGR_I2SCFG* | 8  | 2  | 10 | rw | I2S configuration mode
  *SPI2_I2SCFGR_PCMSYNC* | 7  | 1  | 8  | rw | PCM frame synchronization
   *SPI2_I2SCFGR_I2SSTD* | 4  | 2  | 6  | rw | I2S standard selection
    *SPI2_I2SCFGR_CKPOL* | 3  | 1  | 4  | rw | Steady state clock polarity
   *SPI2_I2SCFGR_DATLEN* | 1  | 2  | 3  | rw | Data length to be transferred
    *SPI2_I2SCFGR_CHLEN* | 0  | 1  | 1  | rw | Channel length (number of bits per audio channel)
 ----------------------+----+----+----+----+---------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SPI2|
 Register:    *SPI2_I2SPR*
 Address:     $40003820
 Reset:       $00000010
 Description: I2S prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=823
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------
   *SPI2_I2SPR_MCKOE* | 9  | 1  | 10 | rw | Master clock output enable
     *SPI2_I2SPR_ODD* | 8  | 1  | 9  | rw | Odd factor for the prescaler
  *SPI2_I2SPR_I2SDIV* | 0  | 8  | 8  | rw | I2S Linear prescaler
 -------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |PWR|
 Register:    *PWR_CR*
 Address:     $40007000
 Reset:       $00000000
 Description: power control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=92
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+----------------------------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+----------------------------------------
   *PWR_CR_DBP* | 8  | 1  | 9  | rw | Disable backup domain write protection
   *PWR_CR_PLS* | 5  | 3  | 8  | rw | PVD level selection
  *PWR_CR_PVDE* | 4  | 1  | 5  | rw | Power voltage detector enable
  *PWR_CR_CSBF* | 3  | 1  | 4  | rw | Clear standby flag
  *PWR_CR_CWUF* | 2  | 1  | 3  | rw | Clear wakeup flag
  *PWR_CR_PDDS* | 1  | 1  | 2  | rw | Power down deepsleep
  *PWR_CR_LPDS* | 0  | 1  | 1  | rw | Low-power deep sleep
 -------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |PWR|
 Register:    *PWR_CSR*
 Address:     $40007004
 Reset:       $00000000
 Description: power control/status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=93
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+---------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+---------------------------------
         *PWR_CSR_WUF* | 0  | 1  | 1  | ro | Wakeup flag
         *PWR_CSR_SBF* | 1  | 1  | 2  | ro | Standby flag
        *PWR_CSR_PVDO* | 2  | 1  | 3  | ro | PVD output
  *PWR_CSR_VREFINTRDY* | 3  | 1  | 4  | ro | VREFINT reference voltage ready
       *PWR_CSR_EWUP1* | 8  | 1  | 9  | rw | Enable WKUP pin 1
       *PWR_CSR_EWUP2* | 9  | 1  | 10 | rw | Enable WKUP pin 2
       *PWR_CSR_EWUP3* | 10 | 1  | 11 | rw | Enable WKUP pin 3
       *PWR_CSR_EWUP4* | 11 | 1  | 12 | rw | Enable WKUP pin 4
       *PWR_CSR_EWUP5* | 12 | 1  | 13 | rw | Enable WKUP pin 5
       *PWR_CSR_EWUP6* | 13 | 1  | 14 | rw | Enable WKUP pin 6
       *PWR_CSR_EWUP7* | 14 | 1  | 15 | rw | Enable WKUP pin 7
       *PWR_CSR_EWUP8* | 15 | 1  | 16 | rw | Enable WKUP pin 8
 --------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_CR1*
 Address:     $40005400
 Reset:       $00000000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=684
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+---------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+---------------------------------------------
         *I2C1_CR1_PE* | 0  | 1  | 1  | rw | Peripheral enable
       *I2C1_CR1_TXIE* | 1  | 1  | 2  | rw | TX Interrupt enable
       *I2C1_CR1_RXIE* | 2  | 1  | 3  | rw | RX Interrupt enable
     *I2C1_CR1_ADDRIE* | 3  | 1  | 4  | rw | Address match interrupt enable (slave only)
     *I2C1_CR1_NACKIE* | 4  | 1  | 5  | rw | Not acknowledge received interrupt enable
     *I2C1_CR1_STOPIE* | 5  | 1  | 6  | rw | STOP detection Interrupt enable
       *I2C1_CR1_TCIE* | 6  | 1  | 7  | rw | Transfer Complete interrupt enable
      *I2C1_CR1_ERRIE* | 7  | 1  | 8  | rw | Error interrupts enable
        *I2C1_CR1_DNF* | 8  | 4  | 12 | rw | Digital noise filter
     *I2C1_CR1_ANFOFF* | 12 | 1  | 13 | rw | Analog noise filter OFF
      *I2C1_CR1_SWRST* | 13 | 1  | 14 | wo | Software reset
    *I2C1_CR1_TXDMAEN* | 14 | 1  | 15 | rw | DMA transmission requests enable
    *I2C1_CR1_RXDMAEN* | 15 | 1  | 16 | rw | DMA reception requests enable
        *I2C1_CR1_SBC* | 16 | 1  | 17 | rw | Slave byte control
  *I2C1_CR1_NOSTRETCH* | 17 | 1  | 18 | rw | Clock stretching disable
      *I2C1_CR1_WUPEN* | 18 | 1  | 19 | rw | Wakeup from STOP enable
       *I2C1_CR1_GCEN* | 19 | 1  | 20 | rw | General call enable
     *I2C1_CR1_SMBHEN* | 20 | 1  | 21 | rw | SMBus Host address enable
     *I2C1_CR1_SMBDEN* | 21 | 1  | 22 | rw | SMBus Device Default address enable
    *I2C1_CR1_ALERTEN* | 22 | 1  | 23 | rw | SMBUS alert enable
      *I2C1_CR1_PECEN* | 23 | 1  | 24 | rw | PEC enable
 --------------------+----+----+----+----+---------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_CR2*
 Address:     $40005404
 Reset:       $00000000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=687
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------------------------------------------
  *I2C1_CR2_PECBYTE* | 26 | 1  | 27 | rw | Packet error checking byte
  *I2C1_CR2_AUTOEND* | 25 | 1  | 26 | rw | Automatic end mode (master mode)
   *I2C1_CR2_RELOAD* | 24 | 1  | 25 | rw | NBYTES reload mode
   *I2C1_CR2_NBYTES* | 16 | 8  | 24 | rw | Number of bytes
     *I2C1_CR2_NACK* | 15 | 1  | 16 | rw | NACK generation (slave mode)
     *I2C1_CR2_STOP* | 14 | 1  | 15 | rw | Stop generation (master mode)
    *I2C1_CR2_START* | 13 | 1  | 14 | rw | Start generation
  *I2C1_CR2_HEAD10R* | 12 | 1  | 13 | rw | 10-bit address header only read direction (master receiver mode)
    *I2C1_CR2_ADD10* | 11 | 1  | 12 | rw | 10-bit addressing mode (master mode)
   *I2C1_CR2_RD_WRN* | 10 | 1  | 11 | rw | Transfer direction (master mode)
    *I2C1_CR2_SADD8* | 8  | 2  | 10 | rw | Slave address bit 9:8 (master mode)
    *I2C1_CR2_SADD1* | 1  | 7  | 8  | rw | Slave address bit 7:1 (master mode)
    *I2C1_CR2_SADD0* | 0  | 1  | 1  | rw | Slave address bit 0 (master mode)
 ------------------+----+----+----+----+------------------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_OAR1*
 Address:     $40005408
 Reset:       $00000000
 Description: Own address register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=689
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+---------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+---------------------------
    *I2C1_OAR1_OA1_0* | 0  | 1  | 1  | rw | Interface address
    *I2C1_OAR1_OA1_1* | 1  | 7  | 8  | rw | Interface address
    *I2C1_OAR1_OA1_8* | 8  | 2  | 10 | rw | Interface address
  *I2C1_OAR1_OA1MODE* | 10 | 1  | 11 | rw | Own Address 1 10-bit mode
    *I2C1_OAR1_OA1EN* | 15 | 1  | 16 | rw | Own Address 1 enable
 -------------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_OAR2*
 Address:     $4000540C
 Reset:       $00000000
 Description: Own address register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=690
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------
     *I2C1_OAR2_OA2* | 1  | 7  | 8  | rw | Interface address
  *I2C1_OAR2_OA2MSK* | 8  | 3  | 11 | rw | Own Address 2 masks
   *I2C1_OAR2_OA2EN* | 15 | 1  | 16 | rw | Own Address 2 enable
 ------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_TIMINGR*
 Address:     $40005410
 Reset:       $00000000
 Description: Timing register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=691
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------
    *I2C1_TIMINGR_SCLL* | 0  | 8  | 8  | rw | SCL low period (master mode)
    *I2C1_TIMINGR_SCLH* | 8  | 8  | 16 | rw | SCL high period (master mode)
  *I2C1_TIMINGR_SDADEL* | 16 | 4  | 20 | rw | Data hold time
  *I2C1_TIMINGR_SCLDEL* | 20 | 4  | 24 | rw | Data setup time
   *I2C1_TIMINGR_PRESC* | 28 | 4  | 32 | rw | Timing prescaler
 ---------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_TIMEOUTR*
 Address:     $40005414
 Reset:       $00000000
 Description: Status register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=692
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------------+----+----+----+----+-------------------------------
                Bitfield | bo | bw | be | ac | Description
 ------------------------+----+----+----+----+-------------------------------
  *I2C1_TIMEOUTR_TIMEOUTA* | 0  | 12 | 12 | rw | Bus timeout A
     *I2C1_TIMEOUTR_TIDLE* | 12 | 1  | 13 | rw | Idle clock timeout detection
  *I2C1_TIMEOUTR_TIMOUTEN* | 15 | 1  | 16 | rw | Clock timeout enable
  *I2C1_TIMEOUTR_TIMEOUTB* | 16 | 12 | 28 | rw | Bus timeout B
    *I2C1_TIMEOUTR_TEXTEN* | 31 | 1  | 32 | rw | Extended clock timeout enable
 ------------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_ISR*
 Address:     $40005418
 Reset:       $00000001
 Description: Interrupt and Status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=693
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+---------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+---------------------------------------------
  *I2C1_ISR_ADDCODE* | 17 | 7  | 24 | ro | Address match code (Slave mode)
      *I2C1_ISR_DIR* | 16 | 1  | 17 | ro | Transfer direction (Slave mode)
     *I2C1_ISR_BUSY* | 15 | 1  | 16 | ro | Bus busy
    *I2C1_ISR_ALERT* | 13 | 1  | 14 | ro | SMBus alert
  *I2C1_ISR_TIMEOUT* | 12 | 1  | 13 | ro | Timeout or t_low detection flag
   *I2C1_ISR_PECERR* | 11 | 1  | 12 | ro | PEC Error in reception
      *I2C1_ISR_OVR* | 10 | 1  | 11 | ro | Overrun/Underrun (slave mode)
     *I2C1_ISR_ARLO* | 9  | 1  | 10 | ro | Arbitration lost
     *I2C1_ISR_BERR* | 8  | 1  | 9  | ro | Bus error
      *I2C1_ISR_TCR* | 7  | 1  | 8  | ro | Transfer Complete Reload
       *I2C1_ISR_TC* | 6  | 1  | 7  | ro | Transfer Complete (master mode)
    *I2C1_ISR_STOPF* | 5  | 1  | 6  | ro | Stop detection flag
    *I2C1_ISR_NACKF* | 4  | 1  | 5  | ro | Not acknowledge received flag
     *I2C1_ISR_ADDR* | 3  | 1  | 4  | ro | Address matched (slave mode)
     *I2C1_ISR_RXNE* | 2  | 1  | 3  | ro | Receive data register not empty (receivers)
     *I2C1_ISR_TXIS* | 1  | 1  | 2  | rw | Transmit interrupt status (transmitters)
      *I2C1_ISR_TXE* | 0  | 1  | 1  | rw | Transmit data register empty (transmitters)
 ------------------+----+----+----+----+---------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_ICR*
 Address:     $4000541C
 Reset:       $00000000
 Description: Interrupt clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=695
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------
   *I2C1_ICR_ALERTCF* | 13 | 1  | 14 | rw | Alert flag clear
  *I2C1_ICR_TIMOUTCF* | 12 | 1  | 13 | rw | Timeout detection flag clear
     *I2C1_ICR_PECCF* | 11 | 1  | 12 | rw | PEC Error flag clear
     *I2C1_ICR_OVRCF* | 10 | 1  | 11 | rw | Overrun/Underrun flag clear
    *I2C1_ICR_ARLOCF* | 9  | 1  | 10 | rw | Arbitration lost flag clear
    *I2C1_ICR_BERRCF* | 8  | 1  | 9  | rw | Bus error flag clear
    *I2C1_ICR_STOPCF* | 5  | 1  | 6  | rw | Stop detection flag clear
    *I2C1_ICR_NACKCF* | 4  | 1  | 5  | rw | Not Acknowledge flag clear
    *I2C1_ICR_ADDRCF* | 3  | 1  | 4  | rw | Address Matched flag clear
 -------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_PECR*
 Address:     $40005420
 Reset:       $00000000
 Description: PEC register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=696
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------------------
  *I2C1_PECR_PEC* | 0  | 8  | 8  | rw | Packet error checking register
 ---------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_RXDR*
 Address:     $40005424
 Reset:       $00000000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=697
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+--------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+--------------------
  *I2C1_RXDR_RXDATA* | 0  | 8  | 8  | rw | 8-bit receive data
 ------------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C1|
 Register:    *I2C1_TXDR*
 Address:     $40005428
 Reset:       $00000000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=697
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+---------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+---------------------
  *I2C1_TXDR_TXDATA* | 0  | 8  | 8  | rw | 8-bit transmit data
 ------------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_CR1*
 Address:     $40005800
 Reset:       $00000000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=684
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+---------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+---------------------------------------------
         *I2C2_CR1_PE* | 0  | 1  | 1  | rw | Peripheral enable
       *I2C2_CR1_TXIE* | 1  | 1  | 2  | rw | TX Interrupt enable
       *I2C2_CR1_RXIE* | 2  | 1  | 3  | rw | RX Interrupt enable
     *I2C2_CR1_ADDRIE* | 3  | 1  | 4  | rw | Address match interrupt enable (slave only)
     *I2C2_CR1_NACKIE* | 4  | 1  | 5  | rw | Not acknowledge received interrupt enable
     *I2C2_CR1_STOPIE* | 5  | 1  | 6  | rw | STOP detection Interrupt enable
       *I2C2_CR1_TCIE* | 6  | 1  | 7  | rw | Transfer Complete interrupt enable
      *I2C2_CR1_ERRIE* | 7  | 1  | 8  | rw | Error interrupts enable
        *I2C2_CR1_DNF* | 8  | 4  | 12 | rw | Digital noise filter
     *I2C2_CR1_ANFOFF* | 12 | 1  | 13 | rw | Analog noise filter OFF
      *I2C2_CR1_SWRST* | 13 | 1  | 14 | wo | Software reset
    *I2C2_CR1_TXDMAEN* | 14 | 1  | 15 | rw | DMA transmission requests enable
    *I2C2_CR1_RXDMAEN* | 15 | 1  | 16 | rw | DMA reception requests enable
        *I2C2_CR1_SBC* | 16 | 1  | 17 | rw | Slave byte control
  *I2C2_CR1_NOSTRETCH* | 17 | 1  | 18 | rw | Clock stretching disable
      *I2C2_CR1_WUPEN* | 18 | 1  | 19 | rw | Wakeup from STOP enable
       *I2C2_CR1_GCEN* | 19 | 1  | 20 | rw | General call enable
     *I2C2_CR1_SMBHEN* | 20 | 1  | 21 | rw | SMBus Host address enable
     *I2C2_CR1_SMBDEN* | 21 | 1  | 22 | rw | SMBus Device Default address enable
    *I2C2_CR1_ALERTEN* | 22 | 1  | 23 | rw | SMBUS alert enable
      *I2C2_CR1_PECEN* | 23 | 1  | 24 | rw | PEC enable
 --------------------+----+----+----+----+---------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_CR2*
 Address:     $40005804
 Reset:       $00000000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=687
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------------------------------------------
  *I2C2_CR2_PECBYTE* | 26 | 1  | 27 | rw | Packet error checking byte
  *I2C2_CR2_AUTOEND* | 25 | 1  | 26 | rw | Automatic end mode (master mode)
   *I2C2_CR2_RELOAD* | 24 | 1  | 25 | rw | NBYTES reload mode
   *I2C2_CR2_NBYTES* | 16 | 8  | 24 | rw | Number of bytes
     *I2C2_CR2_NACK* | 15 | 1  | 16 | rw | NACK generation (slave mode)
     *I2C2_CR2_STOP* | 14 | 1  | 15 | rw | Stop generation (master mode)
    *I2C2_CR2_START* | 13 | 1  | 14 | rw | Start generation
  *I2C2_CR2_HEAD10R* | 12 | 1  | 13 | rw | 10-bit address header only read direction (master receiver mode)
    *I2C2_CR2_ADD10* | 11 | 1  | 12 | rw | 10-bit addressing mode (master mode)
   *I2C2_CR2_RD_WRN* | 10 | 1  | 11 | rw | Transfer direction (master mode)
    *I2C2_CR2_SADD8* | 8  | 2  | 10 | rw | Slave address bit 9:8 (master mode)
    *I2C2_CR2_SADD1* | 1  | 7  | 8  | rw | Slave address bit 7:1 (master mode)
    *I2C2_CR2_SADD0* | 0  | 1  | 1  | rw | Slave address bit 0 (master mode)
 ------------------+----+----+----+----+------------------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_OAR1*
 Address:     $40005808
 Reset:       $00000000
 Description: Own address register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=689
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+---------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+---------------------------
    *I2C2_OAR1_OA1_0* | 0  | 1  | 1  | rw | Interface address
    *I2C2_OAR1_OA1_1* | 1  | 7  | 8  | rw | Interface address
    *I2C2_OAR1_OA1_8* | 8  | 2  | 10 | rw | Interface address
  *I2C2_OAR1_OA1MODE* | 10 | 1  | 11 | rw | Own Address 1 10-bit mode
    *I2C2_OAR1_OA1EN* | 15 | 1  | 16 | rw | Own Address 1 enable
 -------------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_OAR2*
 Address:     $4000580C
 Reset:       $00000000
 Description: Own address register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=690
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------
     *I2C2_OAR2_OA2* | 1  | 7  | 8  | rw | Interface address
  *I2C2_OAR2_OA2MSK* | 8  | 3  | 11 | rw | Own Address 2 masks
   *I2C2_OAR2_OA2EN* | 15 | 1  | 16 | rw | Own Address 2 enable
 ------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_TIMINGR*
 Address:     $40005810
 Reset:       $00000000
 Description: Timing register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=691
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------
    *I2C2_TIMINGR_SCLL* | 0  | 8  | 8  | rw | SCL low period (master mode)
    *I2C2_TIMINGR_SCLH* | 8  | 8  | 16 | rw | SCL high period (master mode)
  *I2C2_TIMINGR_SDADEL* | 16 | 4  | 20 | rw | Data hold time
  *I2C2_TIMINGR_SCLDEL* | 20 | 4  | 24 | rw | Data setup time
   *I2C2_TIMINGR_PRESC* | 28 | 4  | 32 | rw | Timing prescaler
 ---------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_TIMEOUTR*
 Address:     $40005814
 Reset:       $00000000
 Description: Status register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=692
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------------+----+----+----+----+-------------------------------
                Bitfield | bo | bw | be | ac | Description
 ------------------------+----+----+----+----+-------------------------------
  *I2C2_TIMEOUTR_TIMEOUTA* | 0  | 12 | 12 | rw | Bus timeout A
     *I2C2_TIMEOUTR_TIDLE* | 12 | 1  | 13 | rw | Idle clock timeout detection
  *I2C2_TIMEOUTR_TIMOUTEN* | 15 | 1  | 16 | rw | Clock timeout enable
  *I2C2_TIMEOUTR_TIMEOUTB* | 16 | 12 | 28 | rw | Bus timeout B
    *I2C2_TIMEOUTR_TEXTEN* | 31 | 1  | 32 | rw | Extended clock timeout enable
 ------------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_ISR*
 Address:     $40005818
 Reset:       $00000001
 Description: Interrupt and Status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=693
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+---------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+---------------------------------------------
  *I2C2_ISR_ADDCODE* | 17 | 7  | 24 | ro | Address match code (Slave mode)
      *I2C2_ISR_DIR* | 16 | 1  | 17 | ro | Transfer direction (Slave mode)
     *I2C2_ISR_BUSY* | 15 | 1  | 16 | ro | Bus busy
    *I2C2_ISR_ALERT* | 13 | 1  | 14 | ro | SMBus alert
  *I2C2_ISR_TIMEOUT* | 12 | 1  | 13 | ro | Timeout or t_low detection flag
   *I2C2_ISR_PECERR* | 11 | 1  | 12 | ro | PEC Error in reception
      *I2C2_ISR_OVR* | 10 | 1  | 11 | ro | Overrun/Underrun (slave mode)
     *I2C2_ISR_ARLO* | 9  | 1  | 10 | ro | Arbitration lost
     *I2C2_ISR_BERR* | 8  | 1  | 9  | ro | Bus error
      *I2C2_ISR_TCR* | 7  | 1  | 8  | ro | Transfer Complete Reload
       *I2C2_ISR_TC* | 6  | 1  | 7  | ro | Transfer Complete (master mode)
    *I2C2_ISR_STOPF* | 5  | 1  | 6  | ro | Stop detection flag
    *I2C2_ISR_NACKF* | 4  | 1  | 5  | ro | Not acknowledge received flag
     *I2C2_ISR_ADDR* | 3  | 1  | 4  | ro | Address matched (slave mode)
     *I2C2_ISR_RXNE* | 2  | 1  | 3  | ro | Receive data register not empty (receivers)
     *I2C2_ISR_TXIS* | 1  | 1  | 2  | rw | Transmit interrupt status (transmitters)
      *I2C2_ISR_TXE* | 0  | 1  | 1  | rw | Transmit data register empty (transmitters)
 ------------------+----+----+----+----+---------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_ICR*
 Address:     $4000581C
 Reset:       $00000000
 Description: Interrupt clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=695
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------
   *I2C2_ICR_ALERTCF* | 13 | 1  | 14 | rw | Alert flag clear
  *I2C2_ICR_TIMOUTCF* | 12 | 1  | 13 | rw | Timeout detection flag clear
     *I2C2_ICR_PECCF* | 11 | 1  | 12 | rw | PEC Error flag clear
     *I2C2_ICR_OVRCF* | 10 | 1  | 11 | rw | Overrun/Underrun flag clear
    *I2C2_ICR_ARLOCF* | 9  | 1  | 10 | rw | Arbitration lost flag clear
    *I2C2_ICR_BERRCF* | 8  | 1  | 9  | rw | Bus error flag clear
    *I2C2_ICR_STOPCF* | 5  | 1  | 6  | rw | Stop detection flag clear
    *I2C2_ICR_NACKCF* | 4  | 1  | 5  | rw | Not Acknowledge flag clear
    *I2C2_ICR_ADDRCF* | 3  | 1  | 4  | rw | Address Matched flag clear
 -------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_PECR*
 Address:     $40005820
 Reset:       $00000000
 Description: PEC register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=696
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------------------
  *I2C2_PECR_PEC* | 0  | 8  | 8  | rw | Packet error checking register
 ---------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_RXDR*
 Address:     $40005824
 Reset:       $00000000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=697
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+--------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+--------------------
  *I2C2_RXDR_RXDATA* | 0  | 8  | 8  | rw | 8-bit receive data
 ------------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |I2C2|
 Register:    *I2C2_TXDR*
 Address:     $40005828
 Reset:       $00000000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=697
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+---------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+---------------------
  *I2C2_TXDR_TXDATA* | 0  | 8  | 8  | rw | 8-bit transmit data
 ------------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |IWDG|
 Register:    *IWDG_KR*
 Address:     $40003000
 Reset:       $00000000
 Description: Key register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=577
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+------------
  *IWDG_KR_KEY* | 0  | 16 | 16 | rw | Key value
 -------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |IWDG|
 Register:    *IWDG_PR*
 Address:     $40003004
 Reset:       $00000000
 Description: Prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=578
              (place cursor on hyperlink, type 'gx' to follow)

 ------------+----+----+----+----+-------------------
    Bitfield | bo | bw | be | ac | Description
 ------------+----+----+----+----+-------------------
  *IWDG_PR_PR* | 0  | 3  | 3  | rw | Prescaler divider
 ------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |IWDG|
 Register:    *IWDG_RLR*
 Address:     $40003008
 Reset:       $00000FFF
 Description: Reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=579
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+-------------------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+-------------------------------
  *IWDG_RLR_RL* | 0  | 12 | 12 | rw | Watchdog counter reload value
 -------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |IWDG|
 Register:    *IWDG_SR*
 Address:     $4000300C
 Reset:       $00000000
 Description: Status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=580
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+--------------------------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+--------------------------------------
  *IWDG_SR_PVU* | 0  | 1  | 1  | rw | Watchdog prescaler value update
  *IWDG_SR_RVU* | 1  | 1  | 2  | rw | Watchdog counter reload value update
  *IWDG_SR_WVU* | 2  | 1  | 3  | rw | Watchdog counter window value update
 -------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |IWDG|
 Register:    *IWDG_WINR*
 Address:     $40003010
 Reset:       $00000FFF
 Description: Window register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=581
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------------
  *IWDG_WINR_WIN* | 0  | 12 | 12 | rw | Watchdog counter window value
 ---------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |WWDG|
 Register:    *WWDG_CR*
 Address:     $40002C00
 Reset:       $0000007F
 Description: Control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=586
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+----------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+----------------
  *WWDG_CR_WDGA* | 7  | 1  | 8  | rw | Activation bit
     *WWDG_CR_T* | 0  | 7  | 7  | rw | 7-bit counter
 --------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |WWDG|
 Register:    *WWDG_CFR*
 Address:     $40002C04
 Reset:       $0000007F
 Description: Configuration register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=587
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------
    *WWDG_CFR_EWI* | 9  | 1  | 10 | rw | Early wakeup interrupt
  *WWDG_CFR_WDGTB* | 7  | 2  | 9  | rw | Timer base
      *WWDG_CFR_W* | 0  | 7  | 7  | rw | 7-bit window value
 ----------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |WWDG|
 Register:    *WWDG_SR*
 Address:     $40002C08
 Reset:       $00000000
 Description: Status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=587
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------------------
  *WWDG_SR_EWIF* | 0  | 1  | 1  | rw | Early wakeup interrupt flag
 --------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CR1*
 Address:     $40012C00
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=375
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------------
   *TIM1_CR1_CKD* | 8  | 2  | 10 | rw | Clock division
  *TIM1_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM1_CR1_CMS* | 5  | 2  | 7  | rw | Center-aligned mode selection
   *TIM1_CR1_DIR* | 4  | 1  | 5  | rw | Direction
   *TIM1_CR1_OPM* | 3  | 1  | 4  | rw | One-pulse mode
   *TIM1_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM1_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM1_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ---------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CR2*
 Address:     $40012C04
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=376
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------------------
   *TIM1_CR2_OIS4* | 14 | 1  | 15 | rw | Output Idle state 4
  *TIM1_CR2_OIS3N* | 13 | 1  | 14 | rw | Output Idle state 3
   *TIM1_CR2_OIS3* | 12 | 1  | 13 | rw | Output Idle state 3
  *TIM1_CR2_OIS2N* | 11 | 1  | 12 | rw | Output Idle state 2
   *TIM1_CR2_OIS2* | 10 | 1  | 11 | rw | Output Idle state 2
  *TIM1_CR2_OIS1N* | 9  | 1  | 10 | rw | Output Idle state 1
   *TIM1_CR2_OIS1* | 8  | 1  | 9  | rw | Output Idle state 1
   *TIM1_CR2_TI1S* | 7  | 1  | 8  | rw | TI1 selection
    *TIM1_CR2_MMS* | 4  | 3  | 7  | rw | Master mode selection
   *TIM1_CR2_CCDS* | 3  | 1  | 4  | rw | Capture/compare DMA selection
   *TIM1_CR2_CCUS* | 2  | 1  | 3  | rw | Capture/compare control update selection
   *TIM1_CR2_CCPC* | 0  | 1  | 1  | rw | Capture/compare preloaded control
 ----------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_SMCR*
 Address:     $40012C08
 Reset:       $0000
 Description: slave mode control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=378
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------------
   *TIM1_SMCR_ETP* | 15 | 1  | 16 | rw | External trigger polarity
   *TIM1_SMCR_ECE* | 14 | 1  | 15 | rw | External clock enable
  *TIM1_SMCR_ETPS* | 12 | 2  | 14 | rw | External trigger prescaler
   *TIM1_SMCR_ETF* | 8  | 4  | 12 | rw | External trigger filter
   *TIM1_SMCR_MSM* | 7  | 1  | 8  | rw | Master/Slave mode
    *TIM1_SMCR_TS* | 4  | 3  | 7  | rw | Trigger selection
   *TIM1_SMCR_SMS* | 0  | 3  | 3  | rw | Slave mode selection
 ----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_DIER*
 Address:     $40012C0C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=381
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------------
    *TIM1_DIER_TDE* | 14 | 1  | 15 | rw | Trigger DMA request enable
  *TIM1_DIER_COMDE* | 13 | 1  | 14 | rw | COM DMA request enable
  *TIM1_DIER_CC4DE* | 12 | 1  | 13 | rw | Capture/Compare 4 DMA request enable
  *TIM1_DIER_CC3DE* | 11 | 1  | 12 | rw | Capture/Compare 3 DMA request enable
  *TIM1_DIER_CC2DE* | 10 | 1  | 11 | rw | Capture/Compare 2 DMA request enable
  *TIM1_DIER_CC1DE* | 9  | 1  | 10 | rw | Capture/Compare 1 DMA request enable
    *TIM1_DIER_UDE* | 8  | 1  | 9  | rw | Update DMA request enable
    *TIM1_DIER_BIE* | 7  | 1  | 8  | rw | Break interrupt enable
    *TIM1_DIER_TIE* | 6  | 1  | 7  | rw | Trigger interrupt enable
  *TIM1_DIER_COMIE* | 5  | 1  | 6  | rw | COM interrupt enable
  *TIM1_DIER_CC4IE* | 4  | 1  | 5  | rw | Capture/Compare 4 interrupt enable
  *TIM1_DIER_CC3IE* | 3  | 1  | 4  | rw | Capture/Compare 3 interrupt enable
  *TIM1_DIER_CC2IE* | 2  | 1  | 3  | rw | Capture/Compare 2 interrupt enable
  *TIM1_DIER_CC1IE* | 1  | 1  | 2  | rw | Capture/Compare 1 interrupt enable
    *TIM1_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 -----------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_SR*
 Address:     $40012C10
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=383
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------------------------
  *TIM1_SR_CC4OF* | 12 | 1  | 13 | rw | Capture/Compare 4 overcapture flag
  *TIM1_SR_CC3OF* | 11 | 1  | 12 | rw | Capture/Compare 3 overcapture flag
  *TIM1_SR_CC2OF* | 10 | 1  | 11 | rw | Capture/compare 2 overcapture flag
  *TIM1_SR_CC1OF* | 9  | 1  | 10 | rw | Capture/Compare 1 overcapture flag
    *TIM1_SR_BIF* | 7  | 1  | 8  | rw | Break interrupt flag
    *TIM1_SR_TIF* | 6  | 1  | 7  | rw | Trigger interrupt flag
  *TIM1_SR_COMIF* | 5  | 1  | 6  | rw | COM interrupt flag
  *TIM1_SR_CC4IF* | 4  | 1  | 5  | rw | Capture/Compare 4 interrupt flag
  *TIM1_SR_CC3IF* | 3  | 1  | 4  | rw | Capture/Compare 3 interrupt flag
  *TIM1_SR_CC2IF* | 2  | 1  | 3  | rw | Capture/Compare 2 interrupt flag
  *TIM1_SR_CC1IF* | 1  | 1  | 2  | rw | Capture/compare 1 interrupt flag
    *TIM1_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 ---------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_EGR*
 Address:     $40012C14
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=384
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------------------------
    *TIM1_EGR_BG* | 7  | 1  | 8  | rw | Break generation
    *TIM1_EGR_TG* | 6  | 1  | 7  | rw | Trigger generation
  *TIM1_EGR_COMG* | 5  | 1  | 6  | rw | Capture/Compare control update generation
  *TIM1_EGR_CC4G* | 4  | 1  | 5  | rw | Capture/compare 4 generation
  *TIM1_EGR_CC3G* | 3  | 1  | 4  | rw | Capture/compare 3 generation
  *TIM1_EGR_CC2G* | 2  | 1  | 3  | rw | Capture/compare 2 generation
  *TIM1_EGR_CC1G* | 1  | 1  | 2  | rw | Capture/compare 1 generation
    *TIM1_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 ---------------+----+----+----+----+-------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCMR1_Output*
 Address:     $40012C18
 Reset:       $00000000
 Description: capture/compare mode register (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=386
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------
  *TIM1_CCMR1_Output_OC2CE* | 15 | 1  | 16 | rw | Output Compare 2 clear enable
   *TIM1_CCMR1_Output_OC2M* | 12 | 3  | 15 | rw | Output Compare 2 mode
  *TIM1_CCMR1_Output_OC2PE* | 11 | 1  | 12 | rw | Output Compare 2 preload enable
  *TIM1_CCMR1_Output_OC2FE* | 10 | 1  | 11 | rw | Output Compare 2 fast enable
   *TIM1_CCMR1_Output_CC2S* | 8  | 2  | 10 | rw | Capture/Compare 2 selection
  *TIM1_CCMR1_Output_OC1CE* | 7  | 1  | 8  | rw | Output Compare 1 clear enable
   *TIM1_CCMR1_Output_OC1M* | 4  | 3  | 7  | rw | Output Compare 1 mode
  *TIM1_CCMR1_Output_OC1PE* | 3  | 1  | 4  | rw | Output Compare 1 preload enable
  *TIM1_CCMR1_Output_OC1FE* | 2  | 1  | 3  | rw | Output Compare 1 fast enable
   *TIM1_CCMR1_Output_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 -------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCMR1_Input*
 Address:     $40012C18
 Reset:       $00000000
 Description: capture/compare mode register 1 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=386
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+-----------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+-----------------------------
    *TIM1_CCMR1_Input_IC2F* | 12 | 4  | 16 | rw | Input capture 2 filter
  *TIM1_CCMR1_Input_IC2PCS* | 10 | 2  | 12 | rw | Input capture 2 prescaler
    *TIM1_CCMR1_Input_CC2S* | 8  | 2  | 10 | rw | Capture/Compare 2 selection
    *TIM1_CCMR1_Input_IC1F* | 4  | 4  | 8  | rw | Input capture 1 filter
  *TIM1_CCMR1_Input_IC1PCS* | 2  | 2  | 4  | rw | Input capture 1 prescaler
    *TIM1_CCMR1_Input_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 -------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCMR2_Output*
 Address:     $40012C1C
 Reset:       $00000000
 Description: capture/compare mode register (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=389
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------
  *TIM1_CCMR2_Output_OC4CE* | 15 | 1  | 16 | rw | Output compare 4 clear enable
   *TIM1_CCMR2_Output_OC4M* | 12 | 3  | 15 | rw | Output compare 4 mode
  *TIM1_CCMR2_Output_OC4PE* | 11 | 1  | 12 | rw | Output compare 4 preload enable
  *TIM1_CCMR2_Output_OC4FE* | 10 | 1  | 11 | rw | Output compare 4 fast enable
   *TIM1_CCMR2_Output_CC4S* | 8  | 2  | 10 | rw | Capture/Compare 4 selection
  *TIM1_CCMR2_Output_OC3CE* | 7  | 1  | 8  | rw | Output compare 3 clear enable
   *TIM1_CCMR2_Output_OC3M* | 4  | 3  | 7  | rw | Output compare 3 mode
  *TIM1_CCMR2_Output_OC3PE* | 3  | 1  | 4  | rw | Output compare 3 preload enable
  *TIM1_CCMR2_Output_OC3FE* | 2  | 1  | 3  | rw | Output compare 3 fast enable
   *TIM1_CCMR2_Output_CC3S* | 0  | 2  | 2  | rw | Capture/Compare 3 selection
 -------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCMR2_Input*
 Address:     $40012C1C
 Reset:       $00000000
 Description: capture/compare mode register 2 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=389
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+-----------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+-----------------------------
    *TIM1_CCMR2_Input_IC4F* | 12 | 4  | 16 | rw | Input capture 4 filter
  *TIM1_CCMR2_Input_IC4PSC* | 10 | 2  | 12 | rw | Input capture 4 prescaler
    *TIM1_CCMR2_Input_CC4S* | 8  | 2  | 10 | rw | Capture/Compare 4 selection
    *TIM1_CCMR2_Input_IC3F* | 4  | 4  | 8  | rw | Input capture 3 filter
  *TIM1_CCMR2_Input_IC3PSC* | 2  | 2  | 4  | rw | Input capture 3 prescaler
    *TIM1_CCMR2_Input_CC3S* | 0  | 2  | 2  | rw | Capture/compare 3 selection
 -------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCER*
 Address:     $40012C20
 Reset:       $0000
 Description: capture/compare enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=391
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------------------------
   *TIM1_CCER_CC4P* | 13 | 1  | 14 | rw | Capture/Compare 3 output Polarity
   *TIM1_CCER_CC4E* | 12 | 1  | 13 | rw | Capture/Compare 4 output enable
  *TIM1_CCER_CC3NP* | 11 | 1  | 12 | rw | Capture/Compare 3 output Polarity
  *TIM1_CCER_CC3NE* | 10 | 1  | 11 | rw | Capture/Compare 3 complementary output enable
   *TIM1_CCER_CC3P* | 9  | 1  | 10 | rw | Capture/Compare 3 output Polarity
   *TIM1_CCER_CC3E* | 8  | 1  | 9  | rw | Capture/Compare 3 output enable
  *TIM1_CCER_CC2NP* | 7  | 1  | 8  | rw | Capture/Compare 2 output Polarity
  *TIM1_CCER_CC2NE* | 6  | 1  | 7  | rw | Capture/Compare 2 complementary output enable
   *TIM1_CCER_CC2P* | 5  | 1  | 6  | rw | Capture/Compare 2 output Polarity
   *TIM1_CCER_CC2E* | 4  | 1  | 5  | rw | Capture/Compare 2 output enable
  *TIM1_CCER_CC1NP* | 3  | 1  | 4  | rw | Capture/Compare 1 output Polarity
  *TIM1_CCER_CC1NE* | 2  | 1  | 3  | rw | Capture/Compare 1 complementary output enable
   *TIM1_CCER_CC1P* | 1  | 1  | 2  | rw | Capture/Compare 1 output Polarity
   *TIM1_CCER_CC1E* | 0  | 1  | 1  | rw | Capture/Compare 1 output enable
 -----------------+----+----+----+----+-----------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CNT*
 Address:     $40012C24
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=394
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+---------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+---------------
  *TIM1_CNT_CNT* | 0  | 16 | 16 | rw | counter value
 --------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_PSC*
 Address:     $40012C28
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=395
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------
  *TIM1_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 --------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_ARR*
 Address:     $40012C2C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=395
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-------------------
  *TIM1_ARR_ARR* | 0  | 16 | 16 | rw | Auto-reload value
 --------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_RCR*
 Address:     $40012C30
 Reset:       $0000
 Description: repetition counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=395
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+--------------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+--------------------------
  *TIM1_RCR_REP* | 0  | 8  | 8  | rw | Repetition counter value
 --------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCR1*
 Address:     $40012C34
 Reset:       $00000000
 Description: capture/compare register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=396
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------------------
  *TIM1_CCR1_CCR1* | 0  | 16 | 16 | rw | Capture/Compare 1 value
 ----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCR2*
 Address:     $40012C38
 Reset:       $00000000
 Description: capture/compare register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=396
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------------------
  *TIM1_CCR2_CCR2* | 0  | 16 | 16 | rw | Capture/Compare 2 value
 ----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCR3*
 Address:     $40012C3C
 Reset:       $00000000
 Description: capture/compare register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=397
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------------------
  *TIM1_CCR3_CCR3* | 0  | 16 | 16 | rw | Capture/Compare 3 value
 ----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_CCR4*
 Address:     $40012C40
 Reset:       $00000000
 Description: capture/compare register 4
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=398
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------------------
  *TIM1_CCR4_CCR4* | 0  | 16 | 16 | rw | Capture/Compare 3 value
 ----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_BDTR*
 Address:     $40012C44
 Reset:       $0000
 Description: break and dead-time register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=398
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-----------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-----------------------------------
   *TIM1_BDTR_MOE* | 15 | 1  | 16 | rw | Main output enable
   *TIM1_BDTR_AOE* | 14 | 1  | 15 | rw | Automatic output enable
   *TIM1_BDTR_BKP* | 13 | 1  | 14 | rw | Break polarity
   *TIM1_BDTR_BKE* | 12 | 1  | 13 | rw | Break enable
  *TIM1_BDTR_OSSR* | 11 | 1  | 12 | rw | Off-state selection for Run mode
  *TIM1_BDTR_OSSI* | 10 | 1  | 11 | rw | Off-state selection for Idle mode
  *TIM1_BDTR_LOCK* | 8  | 2  | 10 | rw | Lock configuration
   *TIM1_BDTR_DTG* | 0  | 8  | 8  | rw | Dead-time generator setup
 ----------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_DCR*
 Address:     $40012C48
 Reset:       $0000
 Description: DMA control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=400
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+------------------
  *TIM1_DCR_DBL* | 8  | 5  | 13 | rw | DMA burst length
  *TIM1_DCR_DBA* | 0  | 5  | 5  | rw | DMA base address
 --------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM1|
 Register:    *TIM1_DMAR*
 Address:     $40012C4C
 Reset:       $0000
 Description: DMA address for full transfer
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=401
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------------
  *TIM1_DMAR_DMAB* | 0  | 16 | 16 | rw | DMA register for burst accesses
 ----------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CR1*
 Address:     $40000000
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=446
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------------
   *TIM2_CR1_CKD* | 8  | 2  | 10 | rw | Clock division
  *TIM2_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM2_CR1_CMS* | 5  | 2  | 7  | rw | Center-aligned mode selection
   *TIM2_CR1_DIR* | 4  | 1  | 5  | rw | Direction
   *TIM2_CR1_OPM* | 3  | 1  | 4  | rw | One-pulse mode
   *TIM2_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM2_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM2_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ---------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CR2*
 Address:     $40000004
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=448
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------------
  *TIM2_CR2_TI1S* | 7  | 1  | 8  | rw | TI1 selection
   *TIM2_CR2_MMS* | 4  | 3  | 7  | rw | Master mode selection
  *TIM2_CR2_CCDS* | 3  | 1  | 4  | rw | Capture/compare DMA selection
 ---------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_SMCR*
 Address:     $40000008
 Reset:       $0000
 Description: slave mode control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=449
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------------
   *TIM2_SMCR_ETP* | 15 | 1  | 16 | rw | External trigger polarity
   *TIM2_SMCR_ECE* | 14 | 1  | 15 | rw | External clock enable
  *TIM2_SMCR_ETPS* | 12 | 2  | 14 | rw | External trigger prescaler
   *TIM2_SMCR_ETF* | 8  | 4  | 12 | rw | External trigger filter
   *TIM2_SMCR_MSM* | 7  | 1  | 8  | rw | Master/Slave mode
    *TIM2_SMCR_TS* | 4  | 3  | 7  | rw | Trigger selection
   *TIM2_SMCR_SMS* | 0  | 3  | 3  | rw | Slave mode selection
 ----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_DIER*
 Address:     $4000000C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=451
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------------
    *TIM2_DIER_TDE* | 14 | 1  | 15 | rw | Trigger DMA request enable
  *TIM2_DIER_COMDE* | 13 | 1  | 14 | rw | COM DMA request enable
  *TIM2_DIER_CC4DE* | 12 | 1  | 13 | rw | Capture/Compare 4 DMA request enable
  *TIM2_DIER_CC3DE* | 11 | 1  | 12 | rw | Capture/Compare 3 DMA request enable
  *TIM2_DIER_CC2DE* | 10 | 1  | 11 | rw | Capture/Compare 2 DMA request enable
  *TIM2_DIER_CC1DE* | 9  | 1  | 10 | rw | Capture/Compare 1 DMA request enable
    *TIM2_DIER_UDE* | 8  | 1  | 9  | rw | Update DMA request enable
    *TIM2_DIER_TIE* | 6  | 1  | 7  | rw | Trigger interrupt enable
  *TIM2_DIER_CC4IE* | 4  | 1  | 5  | rw | Capture/Compare 4 interrupt enable
  *TIM2_DIER_CC3IE* | 3  | 1  | 4  | rw | Capture/Compare 3 interrupt enable
  *TIM2_DIER_CC2IE* | 2  | 1  | 3  | rw | Capture/Compare 2 interrupt enable
  *TIM2_DIER_CC1IE* | 1  | 1  | 2  | rw | Capture/Compare 1 interrupt enable
    *TIM2_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 -----------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_SR*
 Address:     $40000010
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=452
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------------------------
  *TIM2_SR_CC4OF* | 12 | 1  | 13 | rw | Capture/Compare 4 overcapture flag
  *TIM2_SR_CC3OF* | 11 | 1  | 12 | rw | Capture/Compare 3 overcapture flag
  *TIM2_SR_CC2OF* | 10 | 1  | 11 | rw | Capture/compare 2 overcapture flag
  *TIM2_SR_CC1OF* | 9  | 1  | 10 | rw | Capture/Compare 1 overcapture flag
    *TIM2_SR_TIF* | 6  | 1  | 7  | rw | Trigger interrupt flag
  *TIM2_SR_CC4IF* | 4  | 1  | 5  | rw | Capture/Compare 4 interrupt flag
  *TIM2_SR_CC3IF* | 3  | 1  | 4  | rw | Capture/Compare 3 interrupt flag
  *TIM2_SR_CC2IF* | 2  | 1  | 3  | rw | Capture/Compare 2 interrupt flag
  *TIM2_SR_CC1IF* | 1  | 1  | 2  | rw | Capture/compare 1 interrupt flag
    *TIM2_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 ---------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_EGR*
 Address:     $40000014
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=455
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------------------
    *TIM2_EGR_TG* | 6  | 1  | 7  | rw | Trigger generation
  *TIM2_EGR_CC4G* | 4  | 1  | 5  | rw | Capture/compare 4 generation
  *TIM2_EGR_CC3G* | 3  | 1  | 4  | rw | Capture/compare 3 generation
  *TIM2_EGR_CC2G* | 2  | 1  | 3  | rw | Capture/compare 2 generation
  *TIM2_EGR_CC1G* | 1  | 1  | 2  | rw | Capture/compare 1 generation
    *TIM2_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 ---------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCMR1_Output*
 Address:     $40000018
 Reset:       $00000000
 Description: capture/compare mode register 1 (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=456
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------
  *TIM2_CCMR1_Output_OC2CE* | 15 | 1  | 16 | rw | Output compare 2 clear enable
   *TIM2_CCMR1_Output_OC2M* | 12 | 3  | 15 | rw | Output compare 2 mode
  *TIM2_CCMR1_Output_OC2PE* | 11 | 1  | 12 | rw | Output compare 2 preload enable
  *TIM2_CCMR1_Output_OC2FE* | 10 | 1  | 11 | rw | Output compare 2 fast enable
   *TIM2_CCMR1_Output_CC2S* | 8  | 2  | 10 | rw | Capture/Compare 2 selection
  *TIM2_CCMR1_Output_OC1CE* | 7  | 1  | 8  | rw | Output compare 1 clear enable
   *TIM2_CCMR1_Output_OC1M* | 4  | 3  | 7  | rw | Output compare 1 mode
  *TIM2_CCMR1_Output_OC1PE* | 3  | 1  | 4  | rw | Output compare 1 preload enable
  *TIM2_CCMR1_Output_OC1FE* | 2  | 1  | 3  | rw | Output compare 1 fast enable
   *TIM2_CCMR1_Output_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 -------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCMR1_Input*
 Address:     $40000018
 Reset:       $00000000
 Description: capture/compare mode register 1 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=456
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+-----------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+-----------------------------
    *TIM2_CCMR1_Input_IC2F* | 12 | 4  | 16 | rw | Input capture 2 filter
  *TIM2_CCMR1_Input_IC2PSC* | 10 | 2  | 12 | rw | Input capture 2 prescaler
    *TIM2_CCMR1_Input_CC2S* | 8  | 2  | 10 | rw | Capture/compare 2 selection
    *TIM2_CCMR1_Input_IC1F* | 4  | 4  | 8  | rw | Input capture 1 filter
  *TIM2_CCMR1_Input_IC1PSC* | 2  | 2  | 4  | rw | Input capture 1 prescaler
    *TIM2_CCMR1_Input_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 -------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCMR2_Output*
 Address:     $4000001C
 Reset:       $00000000
 Description: capture/compare mode register 2 (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=459
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------
  *TIM2_CCMR2_Output_OC4CE* | 15 | 1  | 16 | rw | Output compare 4 clear enable
   *TIM2_CCMR2_Output_OC4M* | 12 | 3  | 15 | rw | Output compare 4 mode
  *TIM2_CCMR2_Output_OC4PE* | 11 | 1  | 12 | rw | Output compare 4 preload enable
  *TIM2_CCMR2_Output_OC4FE* | 10 | 1  | 11 | rw | Output compare 4 fast enable
   *TIM2_CCMR2_Output_CC4S* | 8  | 2  | 10 | rw | Capture/Compare 4 selection
  *TIM2_CCMR2_Output_OC3CE* | 7  | 1  | 8  | rw | Output compare 3 clear enable
   *TIM2_CCMR2_Output_OC3M* | 4  | 3  | 7  | rw | Output compare 3 mode
  *TIM2_CCMR2_Output_OC3PE* | 3  | 1  | 4  | rw | Output compare 3 preload enable
  *TIM2_CCMR2_Output_OC3FE* | 2  | 1  | 3  | rw | Output compare 3 fast enable
   *TIM2_CCMR2_Output_CC3S* | 0  | 2  | 2  | rw | Capture/Compare 3 selection
 -------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCMR2_Input*
 Address:     $4000001C
 Reset:       $00000000
 Description: capture/compare mode register 2 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=459
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+-----------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+-----------------------------
    *TIM2_CCMR2_Input_IC4F* | 12 | 4  | 16 | rw | Input capture 4 filter
  *TIM2_CCMR2_Input_IC4PSC* | 10 | 2  | 12 | rw | Input capture 4 prescaler
    *TIM2_CCMR2_Input_CC4S* | 8  | 2  | 10 | rw | Capture/Compare 4 selection
    *TIM2_CCMR2_Input_IC3F* | 4  | 4  | 8  | rw | Input capture 3 filter
  *TIM2_CCMR2_Input_IC3PSC* | 2  | 2  | 4  | rw | Input capture 3 prescaler
    *TIM2_CCMR2_Input_CC3S* | 0  | 2  | 2  | rw | Capture/Compare 3 selection
 -------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCER*
 Address:     $40000020
 Reset:       $0000
 Description: capture/compare enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=460
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------------
  *TIM2_CCER_CC4NP* | 15 | 1  | 16 | rw | Capture/Compare 4 output Polarity
   *TIM2_CCER_CC4P* | 13 | 1  | 14 | rw | Capture/Compare 3 output Polarity
   *TIM2_CCER_CC4E* | 12 | 1  | 13 | rw | Capture/Compare 4 output enable
  *TIM2_CCER_CC3NP* | 11 | 1  | 12 | rw | Capture/Compare 3 output Polarity
   *TIM2_CCER_CC3P* | 9  | 1  | 10 | rw | Capture/Compare 3 output Polarity
   *TIM2_CCER_CC3E* | 8  | 1  | 9  | rw | Capture/Compare 3 output enable
  *TIM2_CCER_CC2NP* | 7  | 1  | 8  | rw | Capture/Compare 2 output Polarity
   *TIM2_CCER_CC2P* | 5  | 1  | 6  | rw | Capture/Compare 2 output Polarity
   *TIM2_CCER_CC2E* | 4  | 1  | 5  | rw | Capture/Compare 2 output enable
  *TIM2_CCER_CC1NP* | 3  | 1  | 4  | rw | Capture/Compare 1 output Polarity
   *TIM2_CCER_CC1P* | 1  | 1  | 2  | rw | Capture/Compare 1 output Polarity
   *TIM2_CCER_CC1E* | 0  | 1  | 1  | rw | Capture/Compare 1 output enable
 -----------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CNT*
 Address:     $40000024
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=462
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------------------
  *TIM2_CNT_CNT_H* | 16 | 16 | 32 | rw | High counter value (TIM2 only)
  *TIM2_CNT_CNT_L* | 0  | 16 | 16 | rw | Low counter value
 ----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_PSC*
 Address:     $40000028
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=462
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------
  *TIM2_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 --------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_ARR*
 Address:     $4000002C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=463
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------------
  *TIM2_ARR_ARR_H* | 16 | 16 | 32 | rw | High Auto-reload value (TIM2 only)
  *TIM2_ARR_ARR_L* | 0  | 16 | 16 | rw | Low Auto-reload value
 ----------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCR1*
 Address:     $40000034
 Reset:       $00000000
 Description: capture/compare register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=463
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------------------
  *TIM2_CCR1_CCR1_H* | 16 | 16 | 32 | rw | High Capture/Compare 1 value (TIM2 only)
  *TIM2_CCR1_CCR1_L* | 0  | 16 | 16 | rw | Low Capture/Compare 1 value
 ------------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCR2*
 Address:     $40000038
 Reset:       $00000000
 Description: capture/compare register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=464
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------------------
  *TIM2_CCR2_CCR2_H* | 16 | 16 | 32 | rw | High Capture/Compare 2 value (TIM2 only)
  *TIM2_CCR2_CCR2_L* | 0  | 16 | 16 | rw | Low Capture/Compare 2 value
 ------------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCR3*
 Address:     $4000003C
 Reset:       $00000000
 Description: capture/compare register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=464
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------
  *TIM2_CCR3_CCR3_H* | 16 | 16 | 32 | rw | High Capture/Compare value (TIM2 only)
  *TIM2_CCR3_CCR3_L* | 0  | 16 | 16 | rw | Low Capture/Compare value
 ------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_CCR4*
 Address:     $40000040
 Reset:       $00000000
 Description: capture/compare register 4
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=466
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------
  *TIM2_CCR4_CCR4_H* | 16 | 16 | 32 | rw | High Capture/Compare value (TIM2 only)
  *TIM2_CCR4_CCR4_L* | 0  | 16 | 16 | rw | Low Capture/Compare value
 ------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_DCR*
 Address:     $40000048
 Reset:       $0000
 Description: DMA control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=466
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+------------------
  *TIM2_DCR_DBL* | 8  | 5  | 13 | rw | DMA burst length
  *TIM2_DCR_DBA* | 0  | 5  | 5  | rw | DMA base address
 --------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM2|
 Register:    *TIM2_DMAR*
 Address:     $4000004C
 Reset:       $0000
 Description: DMA address for full transfer
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=467
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------------
  *TIM2_DMAR_DMAR* | 0  | 16 | 16 | rw | DMA register for burst accesses
 ----------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CR1*
 Address:     $40000400
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=446
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------------
   *TIM3_CR1_CKD* | 8  | 2  | 10 | rw | Clock division
  *TIM3_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM3_CR1_CMS* | 5  | 2  | 7  | rw | Center-aligned mode selection
   *TIM3_CR1_DIR* | 4  | 1  | 5  | rw | Direction
   *TIM3_CR1_OPM* | 3  | 1  | 4  | rw | One-pulse mode
   *TIM3_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM3_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM3_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ---------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CR2*
 Address:     $40000404
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=448
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------------
  *TIM3_CR2_TI1S* | 7  | 1  | 8  | rw | TI1 selection
   *TIM3_CR2_MMS* | 4  | 3  | 7  | rw | Master mode selection
  *TIM3_CR2_CCDS* | 3  | 1  | 4  | rw | Capture/compare DMA selection
 ---------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_SMCR*
 Address:     $40000408
 Reset:       $0000
 Description: slave mode control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=449
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------------
   *TIM3_SMCR_ETP* | 15 | 1  | 16 | rw | External trigger polarity
   *TIM3_SMCR_ECE* | 14 | 1  | 15 | rw | External clock enable
  *TIM3_SMCR_ETPS* | 12 | 2  | 14 | rw | External trigger prescaler
   *TIM3_SMCR_ETF* | 8  | 4  | 12 | rw | External trigger filter
   *TIM3_SMCR_MSM* | 7  | 1  | 8  | rw | Master/Slave mode
    *TIM3_SMCR_TS* | 4  | 3  | 7  | rw | Trigger selection
   *TIM3_SMCR_SMS* | 0  | 3  | 3  | rw | Slave mode selection
 ----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_DIER*
 Address:     $4000040C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=451
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------------
    *TIM3_DIER_TDE* | 14 | 1  | 15 | rw | Trigger DMA request enable
  *TIM3_DIER_COMDE* | 13 | 1  | 14 | rw | COM DMA request enable
  *TIM3_DIER_CC4DE* | 12 | 1  | 13 | rw | Capture/Compare 4 DMA request enable
  *TIM3_DIER_CC3DE* | 11 | 1  | 12 | rw | Capture/Compare 3 DMA request enable
  *TIM3_DIER_CC2DE* | 10 | 1  | 11 | rw | Capture/Compare 2 DMA request enable
  *TIM3_DIER_CC1DE* | 9  | 1  | 10 | rw | Capture/Compare 1 DMA request enable
    *TIM3_DIER_UDE* | 8  | 1  | 9  | rw | Update DMA request enable
    *TIM3_DIER_TIE* | 6  | 1  | 7  | rw | Trigger interrupt enable
  *TIM3_DIER_CC4IE* | 4  | 1  | 5  | rw | Capture/Compare 4 interrupt enable
  *TIM3_DIER_CC3IE* | 3  | 1  | 4  | rw | Capture/Compare 3 interrupt enable
  *TIM3_DIER_CC2IE* | 2  | 1  | 3  | rw | Capture/Compare 2 interrupt enable
  *TIM3_DIER_CC1IE* | 1  | 1  | 2  | rw | Capture/Compare 1 interrupt enable
    *TIM3_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 -----------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_SR*
 Address:     $40000410
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=452
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------------------------
  *TIM3_SR_CC4OF* | 12 | 1  | 13 | rw | Capture/Compare 4 overcapture flag
  *TIM3_SR_CC3OF* | 11 | 1  | 12 | rw | Capture/Compare 3 overcapture flag
  *TIM3_SR_CC2OF* | 10 | 1  | 11 | rw | Capture/compare 2 overcapture flag
  *TIM3_SR_CC1OF* | 9  | 1  | 10 | rw | Capture/Compare 1 overcapture flag
    *TIM3_SR_TIF* | 6  | 1  | 7  | rw | Trigger interrupt flag
  *TIM3_SR_CC4IF* | 4  | 1  | 5  | rw | Capture/Compare 4 interrupt flag
  *TIM3_SR_CC3IF* | 3  | 1  | 4  | rw | Capture/Compare 3 interrupt flag
  *TIM3_SR_CC2IF* | 2  | 1  | 3  | rw | Capture/Compare 2 interrupt flag
  *TIM3_SR_CC1IF* | 1  | 1  | 2  | rw | Capture/compare 1 interrupt flag
    *TIM3_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 ---------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_EGR*
 Address:     $40000414
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=455
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------------------
    *TIM3_EGR_TG* | 6  | 1  | 7  | rw | Trigger generation
  *TIM3_EGR_CC4G* | 4  | 1  | 5  | rw | Capture/compare 4 generation
  *TIM3_EGR_CC3G* | 3  | 1  | 4  | rw | Capture/compare 3 generation
  *TIM3_EGR_CC2G* | 2  | 1  | 3  | rw | Capture/compare 2 generation
  *TIM3_EGR_CC1G* | 1  | 1  | 2  | rw | Capture/compare 1 generation
    *TIM3_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 ---------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCMR1_Output*
 Address:     $40000418
 Reset:       $00000000
 Description: capture/compare mode register 1 (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=456
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------
  *TIM3_CCMR1_Output_OC2CE* | 15 | 1  | 16 | rw | Output compare 2 clear enable
   *TIM3_CCMR1_Output_OC2M* | 12 | 3  | 15 | rw | Output compare 2 mode
  *TIM3_CCMR1_Output_OC2PE* | 11 | 1  | 12 | rw | Output compare 2 preload enable
  *TIM3_CCMR1_Output_OC2FE* | 10 | 1  | 11 | rw | Output compare 2 fast enable
   *TIM3_CCMR1_Output_CC2S* | 8  | 2  | 10 | rw | Capture/Compare 2 selection
  *TIM3_CCMR1_Output_OC1CE* | 7  | 1  | 8  | rw | Output compare 1 clear enable
   *TIM3_CCMR1_Output_OC1M* | 4  | 3  | 7  | rw | Output compare 1 mode
  *TIM3_CCMR1_Output_OC1PE* | 3  | 1  | 4  | rw | Output compare 1 preload enable
  *TIM3_CCMR1_Output_OC1FE* | 2  | 1  | 3  | rw | Output compare 1 fast enable
   *TIM3_CCMR1_Output_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 -------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCMR1_Input*
 Address:     $40000418
 Reset:       $00000000
 Description: capture/compare mode register 1 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=456
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+-----------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+-----------------------------
    *TIM3_CCMR1_Input_IC2F* | 12 | 4  | 16 | rw | Input capture 2 filter
  *TIM3_CCMR1_Input_IC2PSC* | 10 | 2  | 12 | rw | Input capture 2 prescaler
    *TIM3_CCMR1_Input_CC2S* | 8  | 2  | 10 | rw | Capture/compare 2 selection
    *TIM3_CCMR1_Input_IC1F* | 4  | 4  | 8  | rw | Input capture 1 filter
  *TIM3_CCMR1_Input_IC1PSC* | 2  | 2  | 4  | rw | Input capture 1 prescaler
    *TIM3_CCMR1_Input_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 -------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCMR2_Output*
 Address:     $4000041C
 Reset:       $00000000
 Description: capture/compare mode register 2 (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=459
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------------------------
  *TIM3_CCMR2_Output_OC4CE* | 15 | 1  | 16 | rw | Output compare 4 clear enable
   *TIM3_CCMR2_Output_OC4M* | 12 | 3  | 15 | rw | Output compare 4 mode
  *TIM3_CCMR2_Output_OC4PE* | 11 | 1  | 12 | rw | Output compare 4 preload enable
  *TIM3_CCMR2_Output_OC4FE* | 10 | 1  | 11 | rw | Output compare 4 fast enable
   *TIM3_CCMR2_Output_CC4S* | 8  | 2  | 10 | rw | Capture/Compare 4 selection
  *TIM3_CCMR2_Output_OC3CE* | 7  | 1  | 8  | rw | Output compare 3 clear enable
   *TIM3_CCMR2_Output_OC3M* | 4  | 3  | 7  | rw | Output compare 3 mode
  *TIM3_CCMR2_Output_OC3PE* | 3  | 1  | 4  | rw | Output compare 3 preload enable
  *TIM3_CCMR2_Output_OC3FE* | 2  | 1  | 3  | rw | Output compare 3 fast enable
   *TIM3_CCMR2_Output_CC3S* | 0  | 2  | 2  | rw | Capture/Compare 3 selection
 -------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCMR2_Input*
 Address:     $4000041C
 Reset:       $00000000
 Description: capture/compare mode register 2 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=459
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+-----------------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+-----------------------------
    *TIM3_CCMR2_Input_IC4F* | 12 | 4  | 16 | rw | Input capture 4 filter
  *TIM3_CCMR2_Input_IC4PSC* | 10 | 2  | 12 | rw | Input capture 4 prescaler
    *TIM3_CCMR2_Input_CC4S* | 8  | 2  | 10 | rw | Capture/Compare 4 selection
    *TIM3_CCMR2_Input_IC3F* | 4  | 4  | 8  | rw | Input capture 3 filter
  *TIM3_CCMR2_Input_IC3PSC* | 2  | 2  | 4  | rw | Input capture 3 prescaler
    *TIM3_CCMR2_Input_CC3S* | 0  | 2  | 2  | rw | Capture/Compare 3 selection
 -------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCER*
 Address:     $40000420
 Reset:       $0000
 Description: capture/compare enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=460
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------------
  *TIM3_CCER_CC4NP* | 15 | 1  | 16 | rw | Capture/Compare 4 output Polarity
   *TIM3_CCER_CC4P* | 13 | 1  | 14 | rw | Capture/Compare 3 output Polarity
   *TIM3_CCER_CC4E* | 12 | 1  | 13 | rw | Capture/Compare 4 output enable
  *TIM3_CCER_CC3NP* | 11 | 1  | 12 | rw | Capture/Compare 3 output Polarity
   *TIM3_CCER_CC3P* | 9  | 1  | 10 | rw | Capture/Compare 3 output Polarity
   *TIM3_CCER_CC3E* | 8  | 1  | 9  | rw | Capture/Compare 3 output enable
  *TIM3_CCER_CC2NP* | 7  | 1  | 8  | rw | Capture/Compare 2 output Polarity
   *TIM3_CCER_CC2P* | 5  | 1  | 6  | rw | Capture/Compare 2 output Polarity
   *TIM3_CCER_CC2E* | 4  | 1  | 5  | rw | Capture/Compare 2 output enable
  *TIM3_CCER_CC1NP* | 3  | 1  | 4  | rw | Capture/Compare 1 output Polarity
   *TIM3_CCER_CC1P* | 1  | 1  | 2  | rw | Capture/Compare 1 output Polarity
   *TIM3_CCER_CC1E* | 0  | 1  | 1  | rw | Capture/Compare 1 output enable
 -----------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CNT*
 Address:     $40000424
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=462
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------------------
  *TIM3_CNT_CNT_H* | 16 | 16 | 32 | rw | High counter value (TIM2 only)
  *TIM3_CNT_CNT_L* | 0  | 16 | 16 | rw | Low counter value
 ----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_PSC*
 Address:     $40000428
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=462
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------
  *TIM3_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 --------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_ARR*
 Address:     $4000042C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=463
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------------
  *TIM3_ARR_ARR_H* | 16 | 16 | 32 | rw | High Auto-reload value (TIM2 only)
  *TIM3_ARR_ARR_L* | 0  | 16 | 16 | rw | Low Auto-reload value
 ----------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCR1*
 Address:     $40000434
 Reset:       $00000000
 Description: capture/compare register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=463
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------------------
  *TIM3_CCR1_CCR1_H* | 16 | 16 | 32 | rw | High Capture/Compare 1 value (TIM2 only)
  *TIM3_CCR1_CCR1_L* | 0  | 16 | 16 | rw | Low Capture/Compare 1 value
 ------------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCR2*
 Address:     $40000438
 Reset:       $00000000
 Description: capture/compare register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=464
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------------------
  *TIM3_CCR2_CCR2_H* | 16 | 16 | 32 | rw | High Capture/Compare 2 value (TIM2 only)
  *TIM3_CCR2_CCR2_L* | 0  | 16 | 16 | rw | Low Capture/Compare 2 value
 ------------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCR3*
 Address:     $4000043C
 Reset:       $00000000
 Description: capture/compare register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=464
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------
  *TIM3_CCR3_CCR3_H* | 16 | 16 | 32 | rw | High Capture/Compare value (TIM2 only)
  *TIM3_CCR3_CCR3_L* | 0  | 16 | 16 | rw | Low Capture/Compare value
 ------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_CCR4*
 Address:     $40000440
 Reset:       $00000000
 Description: capture/compare register 4
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=466
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------
  *TIM3_CCR4_CCR4_H* | 16 | 16 | 32 | rw | High Capture/Compare value (TIM2 only)
  *TIM3_CCR4_CCR4_L* | 0  | 16 | 16 | rw | Low Capture/Compare value
 ------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_DCR*
 Address:     $40000448
 Reset:       $0000
 Description: DMA control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=466
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+------------------
  *TIM3_DCR_DBL* | 8  | 5  | 13 | rw | DMA burst length
  *TIM3_DCR_DBA* | 0  | 5  | 5  | rw | DMA base address
 --------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM3|
 Register:    *TIM3_DMAR*
 Address:     $4000044C
 Reset:       $0000
 Description: DMA address for full transfer
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=467
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------------
  *TIM3_DMAR_DMAR* | 0  | 16 | 16 | rw | DMA register for burst accesses
 ----------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_CR1*
 Address:     $40002000
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=482
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------------
   *TIM14_CR1_CKD* | 8  | 2  | 10 | rw | Clock division
  *TIM14_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM14_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM14_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM14_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_DIER*
 Address:     $4000200C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=483
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------------
  *TIM14_DIER_CC1IE* | 1  | 1  | 2  | rw | Capture/Compare 1 interrupt enable
    *TIM14_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 ------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_SR*
 Address:     $40002010
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=484
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------------
  *TIM14_SR_CC1OF* | 9  | 1  | 10 | rw | Capture/Compare 1 overcapture flag
  *TIM14_SR_CC1IF* | 1  | 1  | 2  | rw | Capture/compare 1 interrupt flag
    *TIM14_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 ----------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_EGR*
 Address:     $40002014
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=484
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------
  *TIM14_EGR_CC1G* | 1  | 1  | 2  | rw | Capture/compare 1 generation
    *TIM14_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 ----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_CCMR1_Output*
 Address:     $40002018
 Reset:       $00000000
 Description: capture/compare mode register (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=485
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------+----+----+----+----+---------------------------------
                  Bitfield | bo | bw | be | ac | Description
 --------------------------+----+----+----+----+---------------------------------
   *TIM14_CCMR1_Output_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
  *TIM14_CCMR1_Output_OC1FE* | 2  | 1  | 3  | rw | Output compare 1 fast enable
  *TIM14_CCMR1_Output_OC1PE* | 3  | 1  | 4  | rw | Output Compare 1 preload enable
   *TIM14_CCMR1_Output_OC1M* | 4  | 3  | 7  | rw | Output Compare 1 mode
 --------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_CCMR1_Input*
 Address:     $40002018
 Reset:       $00000000
 Description: capture/compare mode register (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=486
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------+----+----+----+----+-----------------------------
                  Bitfield | bo | bw | be | ac | Description
 --------------------------+----+----+----+----+-----------------------------
    *TIM14_CCMR1_Input_IC1F* | 4  | 4  | 8  | rw | Input capture 1 filter
  *TIM14_CCMR1_Input_IC1PSC* | 2  | 2  | 4  | rw | Input capture 1 prescaler
    *TIM14_CCMR1_Input_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 --------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_CCER*
 Address:     $40002020
 Reset:       $0000
 Description: capture/compare enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=487
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------
  *TIM14_CCER_CC1NP* | 3  | 1  | 4  | rw | Capture/Compare 1 output Polarity
   *TIM14_CCER_CC1P* | 1  | 1  | 2  | rw | Capture/Compare 1 output Polarity
   *TIM14_CCER_CC1E* | 0  | 1  | 1  | rw | Capture/Compare 1 output enable
 ------------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_CNT*
 Address:     $40002024
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=488
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+---------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+---------------
  *TIM14_CNT_CNT* | 0  | 16 | 16 | rw | counter value
 ---------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_PSC*
 Address:     $40002028
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=489
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-----------------
  *TIM14_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 ---------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_ARR*
 Address:     $4000202C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=489
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------
  *TIM14_ARR_ARR* | 0  | 16 | 16 | rw | Auto-reload value
 ---------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_CCR1*
 Address:     $40002034
 Reset:       $00000000
 Description: capture/compare register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=489
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-------------------------
  *TIM14_CCR1_CCR1* | 0  | 16 | 16 | rw | Capture/Compare 1 value
 -----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM14|
 Register:    *TIM14_OR*
 Address:     $40002050
 Reset:       $00000000
 Description: option register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=490
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+---------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+---------------------
  *TIM14_OR_RMP* | 0  | 2  | 2  | rw | Timer input 1 remap
 --------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM6|
 Register:    *TIM6_CR1*
 Address:     $40001000
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=568
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------------------
  *TIM6_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM6_CR1_OPM* | 3  | 1  | 4  | rw | One-pulse mode
   *TIM6_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM6_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM6_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ---------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM6|
 Register:    *TIM6_CR2*
 Address:     $40001004
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=569
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------------
  *TIM6_CR2_MMS* | 4  | 3  | 7  | rw | Master mode selection
 --------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM6|
 Register:    *TIM6_DIER*
 Address:     $4000100C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=569
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+---------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+---------------------------
  *TIM6_DIER_UDE* | 8  | 1  | 9  | rw | Update DMA request enable
  *TIM6_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 ---------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM6|
 Register:    *TIM6_SR*
 Address:     $40001010
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=570
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+-----------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+-----------------------
  *TIM6_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 -------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM6|
 Register:    *TIM6_EGR*
 Address:     $40001014
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=570
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+-------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+-------------------
  *TIM6_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 -------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM6|
 Register:    *TIM6_CNT*
 Address:     $40001024
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=570
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-------------------
  *TIM6_CNT_CNT* | 0  | 16 | 16 | rw | Low counter value
 --------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM6|
 Register:    *TIM6_PSC*
 Address:     $40001028
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=571
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------
  *TIM6_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 --------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM6|
 Register:    *TIM6_ARR*
 Address:     $4000102C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=571
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------------
  *TIM6_ARR_ARR* | 0  | 16 | 16 | rw | Low Auto-reload value
 --------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM7|
 Register:    *TIM7_CR1*
 Address:     $40001400
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=568
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------------------
  *TIM7_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM7_CR1_OPM* | 3  | 1  | 4  | rw | One-pulse mode
   *TIM7_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM7_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM7_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ---------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM7|
 Register:    *TIM7_CR2*
 Address:     $40001404
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=569
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------------
  *TIM7_CR2_MMS* | 4  | 3  | 7  | rw | Master mode selection
 --------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM7|
 Register:    *TIM7_DIER*
 Address:     $4000140C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=569
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+---------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+---------------------------
  *TIM7_DIER_UDE* | 8  | 1  | 9  | rw | Update DMA request enable
  *TIM7_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 ---------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM7|
 Register:    *TIM7_SR*
 Address:     $40001410
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=570
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+-----------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+-----------------------
  *TIM7_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 -------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM7|
 Register:    *TIM7_EGR*
 Address:     $40001414
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=570
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+-------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+-------------------
  *TIM7_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 -------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM7|
 Register:    *TIM7_CNT*
 Address:     $40001424
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=570
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-------------------
  *TIM7_CNT_CNT* | 0  | 16 | 16 | rw | Low counter value
 --------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM7|
 Register:    *TIM7_PSC*
 Address:     $40001428
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=571
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------
  *TIM7_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 --------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM7|
 Register:    *TIM7_ARR*
 Address:     $4000142C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=571
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------------
  *TIM7_ARR_ARR* | 0  | 16 | 16 | rw | Low Auto-reload value
 --------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |EXTI|
 Register:    *EXTI_IMR*
 Address:     $40010400
 Reset:       $0F940000
 Description: Interrupt mask register (EXTI_IMR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=221
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+---------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+---------------------------
   *EXTI_IMR_MR0* | 0  | 1  | 1  | rw | Interrupt Mask on line 0
   *EXTI_IMR_MR1* | 1  | 1  | 2  | rw | Interrupt Mask on line 1
   *EXTI_IMR_MR2* | 2  | 1  | 3  | rw | Interrupt Mask on line 2
   *EXTI_IMR_MR3* | 3  | 1  | 4  | rw | Interrupt Mask on line 3
   *EXTI_IMR_MR4* | 4  | 1  | 5  | rw | Interrupt Mask on line 4
   *EXTI_IMR_MR5* | 5  | 1  | 6  | rw | Interrupt Mask on line 5
   *EXTI_IMR_MR6* | 6  | 1  | 7  | rw | Interrupt Mask on line 6
   *EXTI_IMR_MR7* | 7  | 1  | 8  | rw | Interrupt Mask on line 7
   *EXTI_IMR_MR8* | 8  | 1  | 9  | rw | Interrupt Mask on line 8
   *EXTI_IMR_MR9* | 9  | 1  | 10 | rw | Interrupt Mask on line 9
  *EXTI_IMR_MR10* | 10 | 1  | 11 | rw | Interrupt Mask on line 10
  *EXTI_IMR_MR11* | 11 | 1  | 12 | rw | Interrupt Mask on line 11
  *EXTI_IMR_MR12* | 12 | 1  | 13 | rw | Interrupt Mask on line 12
  *EXTI_IMR_MR13* | 13 | 1  | 14 | rw | Interrupt Mask on line 13
  *EXTI_IMR_MR14* | 14 | 1  | 15 | rw | Interrupt Mask on line 14
  *EXTI_IMR_MR15* | 15 | 1  | 16 | rw | Interrupt Mask on line 15
  *EXTI_IMR_MR16* | 16 | 1  | 17 | rw | Interrupt Mask on line 16
  *EXTI_IMR_MR17* | 17 | 1  | 18 | rw | Interrupt Mask on line 17
  *EXTI_IMR_MR18* | 18 | 1  | 19 | rw | Interrupt Mask on line 18
  *EXTI_IMR_MR19* | 19 | 1  | 20 | rw | Interrupt Mask on line 19
  *EXTI_IMR_MR20* | 20 | 1  | 21 | rw | Interrupt Mask on line 20
  *EXTI_IMR_MR21* | 21 | 1  | 22 | rw | Interrupt Mask on line 21
  *EXTI_IMR_MR22* | 22 | 1  | 23 | rw | Interrupt Mask on line 22
  *EXTI_IMR_MR23* | 23 | 1  | 24 | rw | Interrupt Mask on line 23
  *EXTI_IMR_MR24* | 24 | 1  | 25 | rw | Interrupt Mask on line 24
  *EXTI_IMR_MR25* | 25 | 1  | 26 | rw | Interrupt Mask on line 25
  *EXTI_IMR_MR26* | 26 | 1  | 27 | rw | Interrupt Mask on line 26
  *EXTI_IMR_MR27* | 27 | 1  | 28 | rw | Interrupt Mask on line 27
 ---------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |EXTI|
 Register:    *EXTI_EMR*
 Address:     $40010404
 Reset:       $00000000
 Description: Event mask register (EXTI_EMR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=222
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-----------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-----------------------
   *EXTI_EMR_MR0* | 0  | 1  | 1  | rw | Event Mask on line 0
   *EXTI_EMR_MR1* | 1  | 1  | 2  | rw | Event Mask on line 1
   *EXTI_EMR_MR2* | 2  | 1  | 3  | rw | Event Mask on line 2
   *EXTI_EMR_MR3* | 3  | 1  | 4  | rw | Event Mask on line 3
   *EXTI_EMR_MR4* | 4  | 1  | 5  | rw | Event Mask on line 4
   *EXTI_EMR_MR5* | 5  | 1  | 6  | rw | Event Mask on line 5
   *EXTI_EMR_MR6* | 6  | 1  | 7  | rw | Event Mask on line 6
   *EXTI_EMR_MR7* | 7  | 1  | 8  | rw | Event Mask on line 7
   *EXTI_EMR_MR8* | 8  | 1  | 9  | rw | Event Mask on line 8
   *EXTI_EMR_MR9* | 9  | 1  | 10 | rw | Event Mask on line 9
  *EXTI_EMR_MR10* | 10 | 1  | 11 | rw | Event Mask on line 10
  *EXTI_EMR_MR11* | 11 | 1  | 12 | rw | Event Mask on line 11
  *EXTI_EMR_MR12* | 12 | 1  | 13 | rw | Event Mask on line 12
  *EXTI_EMR_MR13* | 13 | 1  | 14 | rw | Event Mask on line 13
  *EXTI_EMR_MR14* | 14 | 1  | 15 | rw | Event Mask on line 14
  *EXTI_EMR_MR15* | 15 | 1  | 16 | rw | Event Mask on line 15
  *EXTI_EMR_MR16* | 16 | 1  | 17 | rw | Event Mask on line 16
  *EXTI_EMR_MR17* | 17 | 1  | 18 | rw | Event Mask on line 17
  *EXTI_EMR_MR18* | 18 | 1  | 19 | rw | Event Mask on line 18
  *EXTI_EMR_MR19* | 19 | 1  | 20 | rw | Event Mask on line 19
  *EXTI_EMR_MR20* | 20 | 1  | 21 | rw | Event Mask on line 20
  *EXTI_EMR_MR21* | 21 | 1  | 22 | rw | Event Mask on line 21
  *EXTI_EMR_MR22* | 22 | 1  | 23 | rw | Event Mask on line 22
  *EXTI_EMR_MR23* | 23 | 1  | 24 | rw | Event Mask on line 23
  *EXTI_EMR_MR24* | 24 | 1  | 25 | rw | Event Mask on line 24
  *EXTI_EMR_MR25* | 25 | 1  | 26 | rw | Event Mask on line 25
  *EXTI_EMR_MR26* | 26 | 1  | 27 | rw | Event Mask on line 26
  *EXTI_EMR_MR27* | 27 | 1  | 28 | rw | Event Mask on line 27
 ---------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |EXTI|
 Register:    *EXTI_RTSR*
 Address:     $40010408
 Reset:       $00000000
 Description: Rising Trigger selection register (EXTI_RTSR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=222
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-----------------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-----------------------------------------------
   *EXTI_RTSR_TR0* | 0  | 1  | 1  | rw | Rising trigger event configuration of line 0
   *EXTI_RTSR_TR1* | 1  | 1  | 2  | rw | Rising trigger event configuration of line 1
   *EXTI_RTSR_TR2* | 2  | 1  | 3  | rw | Rising trigger event configuration of line 2
   *EXTI_RTSR_TR3* | 3  | 1  | 4  | rw | Rising trigger event configuration of line 3
   *EXTI_RTSR_TR4* | 4  | 1  | 5  | rw | Rising trigger event configuration of line 4
   *EXTI_RTSR_TR5* | 5  | 1  | 6  | rw | Rising trigger event configuration of line 5
   *EXTI_RTSR_TR6* | 6  | 1  | 7  | rw | Rising trigger event configuration of line 6
   *EXTI_RTSR_TR7* | 7  | 1  | 8  | rw | Rising trigger event configuration of line 7
   *EXTI_RTSR_TR8* | 8  | 1  | 9  | rw | Rising trigger event configuration of line 8
   *EXTI_RTSR_TR9* | 9  | 1  | 10 | rw | Rising trigger event configuration of line 9
  *EXTI_RTSR_TR10* | 10 | 1  | 11 | rw | Rising trigger event configuration of line 10
  *EXTI_RTSR_TR11* | 11 | 1  | 12 | rw | Rising trigger event configuration of line 11
  *EXTI_RTSR_TR12* | 12 | 1  | 13 | rw | Rising trigger event configuration of line 12
  *EXTI_RTSR_TR13* | 13 | 1  | 14 | rw | Rising trigger event configuration of line 13
  *EXTI_RTSR_TR14* | 14 | 1  | 15 | rw | Rising trigger event configuration of line 14
  *EXTI_RTSR_TR15* | 15 | 1  | 16 | rw | Rising trigger event configuration of line 15
  *EXTI_RTSR_TR16* | 16 | 1  | 17 | rw | Rising trigger event configuration of line 16
  *EXTI_RTSR_TR17* | 17 | 1  | 18 | rw | Rising trigger event configuration of line 17
  *EXTI_RTSR_TR19* | 19 | 1  | 20 | rw | Rising trigger event configuration of line 19
 ----------------+----+----+----+----+-----------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |EXTI|
 Register:    *EXTI_FTSR*
 Address:     $4001040C
 Reset:       $00000000
 Description: Falling Trigger selection register (EXTI_FTSR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=223
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------------------------
   *EXTI_FTSR_TR0* | 0  | 1  | 1  | rw | Falling trigger event configuration of line 0
   *EXTI_FTSR_TR1* | 1  | 1  | 2  | rw | Falling trigger event configuration of line 1
   *EXTI_FTSR_TR2* | 2  | 1  | 3  | rw | Falling trigger event configuration of line 2
   *EXTI_FTSR_TR3* | 3  | 1  | 4  | rw | Falling trigger event configuration of line 3
   *EXTI_FTSR_TR4* | 4  | 1  | 5  | rw | Falling trigger event configuration of line 4
   *EXTI_FTSR_TR5* | 5  | 1  | 6  | rw | Falling trigger event configuration of line 5
   *EXTI_FTSR_TR6* | 6  | 1  | 7  | rw | Falling trigger event configuration of line 6
   *EXTI_FTSR_TR7* | 7  | 1  | 8  | rw | Falling trigger event configuration of line 7
   *EXTI_FTSR_TR8* | 8  | 1  | 9  | rw | Falling trigger event configuration of line 8
   *EXTI_FTSR_TR9* | 9  | 1  | 10 | rw | Falling trigger event configuration of line 9
  *EXTI_FTSR_TR10* | 10 | 1  | 11 | rw | Falling trigger event configuration of line 10
  *EXTI_FTSR_TR11* | 11 | 1  | 12 | rw | Falling trigger event configuration of line 11
  *EXTI_FTSR_TR12* | 12 | 1  | 13 | rw | Falling trigger event configuration of line 12
  *EXTI_FTSR_TR13* | 13 | 1  | 14 | rw | Falling trigger event configuration of line 13
  *EXTI_FTSR_TR14* | 14 | 1  | 15 | rw | Falling trigger event configuration of line 14
  *EXTI_FTSR_TR15* | 15 | 1  | 16 | rw | Falling trigger event configuration of line 15
  *EXTI_FTSR_TR16* | 16 | 1  | 17 | rw | Falling trigger event configuration of line 16
  *EXTI_FTSR_TR17* | 17 | 1  | 18 | rw | Falling trigger event configuration of line 17
  *EXTI_FTSR_TR19* | 19 | 1  | 20 | rw | Falling trigger event configuration of line 19
 ----------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |EXTI|
 Register:    *EXTI_SWIER*
 Address:     $40010410
 Reset:       $00000000
 Description: Software interrupt event register (EXTI_SWIER)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=223
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+-------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+-------------------------------
   *EXTI_SWIER_SWIER0* | 0  | 1  | 1  | rw | Software Interrupt on line 0
   *EXTI_SWIER_SWIER1* | 1  | 1  | 2  | rw | Software Interrupt on line 1
   *EXTI_SWIER_SWIER2* | 2  | 1  | 3  | rw | Software Interrupt on line 2
   *EXTI_SWIER_SWIER3* | 3  | 1  | 4  | rw | Software Interrupt on line 3
   *EXTI_SWIER_SWIER4* | 4  | 1  | 5  | rw | Software Interrupt on line 4
   *EXTI_SWIER_SWIER5* | 5  | 1  | 6  | rw | Software Interrupt on line 5
   *EXTI_SWIER_SWIER6* | 6  | 1  | 7  | rw | Software Interrupt on line 6
   *EXTI_SWIER_SWIER7* | 7  | 1  | 8  | rw | Software Interrupt on line 7
   *EXTI_SWIER_SWIER8* | 8  | 1  | 9  | rw | Software Interrupt on line 8
   *EXTI_SWIER_SWIER9* | 9  | 1  | 10 | rw | Software Interrupt on line 9
  *EXTI_SWIER_SWIER10* | 10 | 1  | 11 | rw | Software Interrupt on line 10
  *EXTI_SWIER_SWIER11* | 11 | 1  | 12 | rw | Software Interrupt on line 11
  *EXTI_SWIER_SWIER12* | 12 | 1  | 13 | rw | Software Interrupt on line 12
  *EXTI_SWIER_SWIER13* | 13 | 1  | 14 | rw | Software Interrupt on line 13
  *EXTI_SWIER_SWIER14* | 14 | 1  | 15 | rw | Software Interrupt on line 14
  *EXTI_SWIER_SWIER15* | 15 | 1  | 16 | rw | Software Interrupt on line 15
  *EXTI_SWIER_SWIER16* | 16 | 1  | 17 | rw | Software Interrupt on line 16
  *EXTI_SWIER_SWIER17* | 17 | 1  | 18 | rw | Software Interrupt on line 17
  *EXTI_SWIER_SWIER19* | 19 | 1  | 20 | rw | Software Interrupt on line 19
 --------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |EXTI|
 Register:    *EXTI_PR*
 Address:     $40010414
 Reset:       $00000000
 Description: Pending register (EXTI_PR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=224
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+----------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+----------------
   *EXTI_PR_PR0* | 0  | 1  | 1  | rw | Pending bit 0
   *EXTI_PR_PR1* | 1  | 1  | 2  | rw | Pending bit 1
   *EXTI_PR_PR2* | 2  | 1  | 3  | rw | Pending bit 2
   *EXTI_PR_PR3* | 3  | 1  | 4  | rw | Pending bit 3
   *EXTI_PR_PR4* | 4  | 1  | 5  | rw | Pending bit 4
   *EXTI_PR_PR5* | 5  | 1  | 6  | rw | Pending bit 5
   *EXTI_PR_PR6* | 6  | 1  | 7  | rw | Pending bit 6
   *EXTI_PR_PR7* | 7  | 1  | 8  | rw | Pending bit 7
   *EXTI_PR_PR8* | 8  | 1  | 9  | rw | Pending bit 8
   *EXTI_PR_PR9* | 9  | 1  | 10 | rw | Pending bit 9
  *EXTI_PR_PR10* | 10 | 1  | 11 | rw | Pending bit 10
  *EXTI_PR_PR11* | 11 | 1  | 12 | rw | Pending bit 11
  *EXTI_PR_PR12* | 12 | 1  | 13 | rw | Pending bit 12
  *EXTI_PR_PR13* | 13 | 1  | 14 | rw | Pending bit 13
  *EXTI_PR_PR14* | 14 | 1  | 15 | rw | Pending bit 14
  *EXTI_PR_PR15* | 15 | 1  | 16 | rw | Pending bit 15
  *EXTI_PR_PR16* | 16 | 1  | 17 | rw | Pending bit 16
  *EXTI_PR_PR17* | 17 | 1  | 18 | rw | Pending bit 17
  *EXTI_PR_PR19* | 19 | 1  | 20 | rw | Pending bit 19
 --------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_ISER*
 Address:     $E000E100
 Reset:       $00000000
 Description: Interrupt Set Enable Register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------
  *NVIC_ISER_SETENA* | 0  | 32 | 32 | rw | SETENA
 ------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_ICER*
 Address:     $E000E180
 Reset:       $00000000
 Description: Interrupt Clear Enable Register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------
  *NVIC_ICER_CLRENA* | 0  | 32 | 32 | rw | CLRENA
 ------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_ISPR*
 Address:     $E000E200
 Reset:       $00000000
 Description: Interrupt Set-Pending Register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *NVIC_ISPR_SETPEND* | 0  | 32 | 32 | rw | SETPEND
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_ICPR*
 Address:     $E000E280
 Reset:       $00000000
 Description: Interrupt Clear-Pending Register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *NVIC_ICPR_CLRPEND* | 0  | 32 | 32 | rw | CLRPEND
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_IPR0*
 Address:     $E000E400
 Reset:       $00000000
 Description: Interrupt Priority Register 0
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------
  *NVIC_IPR0_PRI_00* | 6  | 2  | 8  | rw | PRI_00
  *NVIC_IPR0_PRI_01* | 14 | 2  | 16 | rw | PRI_01
  *NVIC_IPR0_PRI_02* | 22 | 2  | 24 | rw | PRI_02
  *NVIC_IPR0_PRI_03* | 30 | 2  | 32 | rw | PRI_03
 ------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_IPR1*
 Address:     $E000E404
 Reset:       $00000000
 Description: Interrupt Priority Register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------
  *NVIC_IPR1_PRI_40* | 6  | 2  | 8  | rw | PRI_40
  *NVIC_IPR1_PRI_41* | 14 | 2  | 16 | rw | PRI_41
  *NVIC_IPR1_PRI_42* | 22 | 2  | 24 | rw | PRI_42
  *NVIC_IPR1_PRI_43* | 30 | 2  | 32 | rw | PRI_43
 ------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_IPR2*
 Address:     $E000E408
 Reset:       $00000000
 Description: Interrupt Priority Register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------
  *NVIC_IPR2_PRI_80* | 6  | 2  | 8  | rw | PRI_80
  *NVIC_IPR2_PRI_81* | 14 | 2  | 16 | rw | PRI_81
  *NVIC_IPR2_PRI_82* | 22 | 2  | 24 | rw | PRI_82
  *NVIC_IPR2_PRI_83* | 30 | 2  | 32 | rw | PRI_83
 ------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_IPR3*
 Address:     $E000E40C
 Reset:       $00000000
 Description: Interrupt Priority Register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *NVIC_IPR3_PRI_120* | 6  | 2  | 8  | rw | PRI_120
  *NVIC_IPR3_PRI_121* | 14 | 2  | 16 | rw | PRI_121
  *NVIC_IPR3_PRI_122* | 22 | 2  | 24 | rw | PRI_122
  *NVIC_IPR3_PRI_123* | 30 | 2  | 32 | rw | PRI_123
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_IPR4*
 Address:     $E000E410
 Reset:       $00000000
 Description: Interrupt Priority Register 4
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *NVIC_IPR4_PRI_160* | 6  | 2  | 8  | rw | PRI_160
  *NVIC_IPR4_PRI_161* | 14 | 2  | 16 | rw | PRI_161
  *NVIC_IPR4_PRI_162* | 22 | 2  | 24 | rw | PRI_162
  *NVIC_IPR4_PRI_163* | 30 | 2  | 32 | rw | PRI_163
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_IPR5*
 Address:     $E000E414
 Reset:       $00000000
 Description: Interrupt Priority Register 5
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *NVIC_IPR5_PRI_200* | 6  | 2  | 8  | rw | PRI_200
  *NVIC_IPR5_PRI_201* | 14 | 2  | 16 | rw | PRI_201
  *NVIC_IPR5_PRI_202* | 22 | 2  | 24 | rw | PRI_202
  *NVIC_IPR5_PRI_203* | 30 | 2  | 32 | rw | PRI_203
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_IPR6*
 Address:     $E000E418
 Reset:       $00000000
 Description: Interrupt Priority Register 6
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *NVIC_IPR6_PRI_240* | 6  | 2  | 8  | rw | PRI_240
  *NVIC_IPR6_PRI_241* | 14 | 2  | 16 | rw | PRI_241
  *NVIC_IPR6_PRI_242* | 22 | 2  | 24 | rw | PRI_242
  *NVIC_IPR6_PRI_243* | 30 | 2  | 32 | rw | PRI_243
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |NVIC|
 Register:    *NVIC_IPR7*
 Address:     $E000E41C
 Reset:       $00000000
 Description: Interrupt Priority Register 7
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=215
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *NVIC_IPR7_PRI_280* | 6  | 2  | 8  | rw | PRI_280
  *NVIC_IPR7_PRI_281* | 14 | 2  | 16 | rw | PRI_281
  *NVIC_IPR7_PRI_282* | 22 | 2  | 24 | rw | PRI_282
  *NVIC_IPR7_PRI_283* | 30 | 2  | 32 | rw | PRI_283
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_ISR*
 Address:     $40020000
 Reset:       $00000000
 Description: DMA interrupt status register (DMA_ISR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=203
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------------------
   *DMA1_ISR_GIF1* | 0  | 1  | 1  | rw | Channel 1 Global interrupt flag
  *DMA1_ISR_TCIF1* | 1  | 1  | 2  | rw | Channel 1 Transfer Complete flag
  *DMA1_ISR_HTIF1* | 2  | 1  | 3  | rw | Channel 1 Half Transfer Complete flag
  *DMA1_ISR_TEIF1* | 3  | 1  | 4  | rw | Channel 1 Transfer Error flag
   *DMA1_ISR_GIF2* | 4  | 1  | 5  | rw | Channel 2 Global interrupt flag
  *DMA1_ISR_TCIF2* | 5  | 1  | 6  | rw | Channel 2 Transfer Complete flag
  *DMA1_ISR_HTIF2* | 6  | 1  | 7  | rw | Channel 2 Half Transfer Complete flag
  *DMA1_ISR_TEIF2* | 7  | 1  | 8  | rw | Channel 2 Transfer Error flag
   *DMA1_ISR_GIF3* | 8  | 1  | 9  | rw | Channel 3 Global interrupt flag
  *DMA1_ISR_TCIF3* | 9  | 1  | 10 | rw | Channel 3 Transfer Complete flag
  *DMA1_ISR_HTIF3* | 10 | 1  | 11 | rw | Channel 3 Half Transfer Complete flag
  *DMA1_ISR_TEIF3* | 11 | 1  | 12 | rw | Channel 3 Transfer Error flag
   *DMA1_ISR_GIF4* | 12 | 1  | 13 | rw | Channel 4 Global interrupt flag
  *DMA1_ISR_TCIF4* | 13 | 1  | 14 | rw | Channel 4 Transfer Complete flag
  *DMA1_ISR_HTIF4* | 14 | 1  | 15 | rw | Channel 4 Half Transfer Complete flag
  *DMA1_ISR_TEIF4* | 15 | 1  | 16 | rw | Channel 4 Transfer Error flag
   *DMA1_ISR_GIF5* | 16 | 1  | 17 | rw | Channel 5 Global interrupt flag
  *DMA1_ISR_TCIF5* | 17 | 1  | 18 | rw | Channel 5 Transfer Complete flag
  *DMA1_ISR_HTIF5* | 18 | 1  | 19 | rw | Channel 5 Half Transfer Complete flag
  *DMA1_ISR_TEIF5* | 19 | 1  | 20 | rw | Channel 5 Transfer Error flag
   *DMA1_ISR_GIF6* | 20 | 1  | 21 | rw | Channel 6 Global interrupt flag
  *DMA1_ISR_TCIF6* | 21 | 1  | 22 | rw | Channel 6 Transfer Complete flag
  *DMA1_ISR_HTIF6* | 22 | 1  | 23 | rw | Channel 6 Half Transfer Complete flag
  *DMA1_ISR_TEIF6* | 23 | 1  | 24 | rw | Channel 6 Transfer Error flag
   *DMA1_ISR_GIF7* | 24 | 1  | 25 | rw | Channel 7 Global interrupt flag
  *DMA1_ISR_TCIF7* | 25 | 1  | 26 | rw | Channel 7 Transfer Complete flag
  *DMA1_ISR_HTIF7* | 26 | 1  | 27 | rw | Channel 7 Half Transfer Complete flag
  *DMA1_ISR_TEIF7* | 27 | 1  | 28 | rw | Channel 7 Transfer Error flag
 ----------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_IFCR*
 Address:     $40020004
 Reset:       $00000000
 Description: DMA interrupt flag clear register (DMA_IFCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=205
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------
   *DMA1_IFCR_CGIF1* | 0  | 1  | 1  | rw | Channel 1 Global interrupt clear
  *DMA1_IFCR_CTCIF1* | 1  | 1  | 2  | rw | Channel 1 Transfer Complete clear
  *DMA1_IFCR_CHTIF1* | 2  | 1  | 3  | rw | Channel 1 Half Transfer clear
  *DMA1_IFCR_CTEIF1* | 3  | 1  | 4  | rw | Channel 1 Transfer Error clear
   *DMA1_IFCR_CGIF2* | 4  | 1  | 5  | rw | Channel 2 Global interrupt clear
  *DMA1_IFCR_CTCIF2* | 5  | 1  | 6  | rw | Channel 2 Transfer Complete clear
  *DMA1_IFCR_CHTIF2* | 6  | 1  | 7  | rw | Channel 2 Half Transfer clear
  *DMA1_IFCR_CTEIF2* | 7  | 1  | 8  | rw | Channel 2 Transfer Error clear
   *DMA1_IFCR_CGIF3* | 8  | 1  | 9  | rw | Channel 3 Global interrupt clear
  *DMA1_IFCR_CTCIF3* | 9  | 1  | 10 | rw | Channel 3 Transfer Complete clear
  *DMA1_IFCR_CHTIF3* | 10 | 1  | 11 | rw | Channel 3 Half Transfer clear
  *DMA1_IFCR_CTEIF3* | 11 | 1  | 12 | rw | Channel 3 Transfer Error clear
   *DMA1_IFCR_CGIF4* | 12 | 1  | 13 | rw | Channel 4 Global interrupt clear
  *DMA1_IFCR_CTCIF4* | 13 | 1  | 14 | rw | Channel 4 Transfer Complete clear
  *DMA1_IFCR_CHTIF4* | 14 | 1  | 15 | rw | Channel 4 Half Transfer clear
  *DMA1_IFCR_CTEIF4* | 15 | 1  | 16 | rw | Channel 4 Transfer Error clear
   *DMA1_IFCR_CGIF5* | 16 | 1  | 17 | rw | Channel 5 Global interrupt clear
  *DMA1_IFCR_CTCIF5* | 17 | 1  | 18 | rw | Channel 5 Transfer Complete clear
  *DMA1_IFCR_CHTIF5* | 18 | 1  | 19 | rw | Channel 5 Half Transfer clear
  *DMA1_IFCR_CTEIF5* | 19 | 1  | 20 | rw | Channel 5 Transfer Error clear
   *DMA1_IFCR_CGIF6* | 20 | 1  | 21 | rw | Channel 6 Global interrupt clear
  *DMA1_IFCR_CTCIF6* | 21 | 1  | 22 | rw | Channel 6 Transfer Complete clear
  *DMA1_IFCR_CHTIF6* | 22 | 1  | 23 | rw | Channel 6 Half Transfer clear
  *DMA1_IFCR_CTEIF6* | 23 | 1  | 24 | rw | Channel 6 Transfer Error clear
   *DMA1_IFCR_CGIF7* | 24 | 1  | 25 | rw | Channel 7 Global interrupt clear
  *DMA1_IFCR_CTCIF7* | 25 | 1  | 26 | rw | Channel 7 Transfer Complete clear
  *DMA1_IFCR_CHTIF7* | 26 | 1  | 27 | rw | Channel 7 Half Transfer clear
  *DMA1_IFCR_CTEIF7* | 27 | 1  | 28 | rw | Channel 7 Transfer Error clear
 ------------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CCR1*
 Address:     $40020008
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=206
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA1_CCR1_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA1_CCR1_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA1_CCR1_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA1_CCR1_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA1_CCR1_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA1_CCR1_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA1_CCR1_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA1_CCR1_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA1_CCR1_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA1_CCR1_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA1_CCR1_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA1_CCR1_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CNDTR1*
 Address:     $4002000C
 Reset:       $00000000
 Description: DMA channel 1 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA1_CNDTR1_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CPAR1*
 Address:     $40020010
 Reset:       $00000000
 Description: DMA channel 1 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA1_CPAR1_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CMAR1*
 Address:     $40020014
 Reset:       $00000000
 Description: DMA channel 1 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA1_CMAR1_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CCR2*
 Address:     $4002001C
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA1_CCR2_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA1_CCR2_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA1_CCR2_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA1_CCR2_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA1_CCR2_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA1_CCR2_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA1_CCR2_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA1_CCR2_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA1_CCR2_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA1_CCR2_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA1_CCR2_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA1_CCR2_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CNDTR2*
 Address:     $40020020
 Reset:       $00000000
 Description: DMA channel 2 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA1_CNDTR2_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CPAR2*
 Address:     $40020024
 Reset:       $00000000
 Description: DMA channel 2 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA1_CPAR2_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CMAR2*
 Address:     $40020028
 Reset:       $00000000
 Description: DMA channel 2 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA1_CMAR2_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CCR3*
 Address:     $40020030
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA1_CCR3_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA1_CCR3_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA1_CCR3_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA1_CCR3_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA1_CCR3_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA1_CCR3_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA1_CCR3_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA1_CCR3_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA1_CCR3_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA1_CCR3_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA1_CCR3_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA1_CCR3_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CNDTR3*
 Address:     $40020034
 Reset:       $00000000
 Description: DMA channel 3 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA1_CNDTR3_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CPAR3*
 Address:     $40020038
 Reset:       $00000000
 Description: DMA channel 3 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA1_CPAR3_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CMAR3*
 Address:     $4002003C
 Reset:       $00000000
 Description: DMA channel 3 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA1_CMAR3_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CCR4*
 Address:     $40020044
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA1_CCR4_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA1_CCR4_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA1_CCR4_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA1_CCR4_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA1_CCR4_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA1_CCR4_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA1_CCR4_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA1_CCR4_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA1_CCR4_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA1_CCR4_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA1_CCR4_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA1_CCR4_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CNDTR4*
 Address:     $40020048
 Reset:       $00000000
 Description: DMA channel 4 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA1_CNDTR4_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CPAR4*
 Address:     $4002004C
 Reset:       $00000000
 Description: DMA channel 4 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA1_CPAR4_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CMAR4*
 Address:     $40020050
 Reset:       $00000000
 Description: DMA channel 4 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA1_CMAR4_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CCR5*
 Address:     $40020058
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA1_CCR5_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA1_CCR5_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA1_CCR5_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA1_CCR5_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA1_CCR5_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA1_CCR5_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA1_CCR5_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA1_CCR5_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA1_CCR5_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA1_CCR5_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA1_CCR5_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA1_CCR5_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CNDTR5*
 Address:     $4002005C
 Reset:       $00000000
 Description: DMA channel 5 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA1_CNDTR5_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CPAR5*
 Address:     $40020060
 Reset:       $00000000
 Description: DMA channel 5 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA1_CPAR5_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CMAR5*
 Address:     $40020064
 Reset:       $00000000
 Description: DMA channel 5 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA1_CMAR5_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CCR6*
 Address:     $4002006C
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA1_CCR6_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA1_CCR6_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA1_CCR6_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA1_CCR6_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA1_CCR6_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA1_CCR6_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA1_CCR6_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA1_CCR6_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA1_CCR6_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA1_CCR6_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA1_CCR6_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA1_CCR6_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CNDTR6*
 Address:     $40020070
 Reset:       $00000000
 Description: DMA channel 6 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA1_CNDTR6_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CPAR6*
 Address:     $40020074
 Reset:       $00000000
 Description: DMA channel 6 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA1_CPAR6_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CMAR6*
 Address:     $40020078
 Reset:       $00000000
 Description: DMA channel 6 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA1_CMAR6_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CCR7*
 Address:     $40020080
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA1_CCR7_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA1_CCR7_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA1_CCR7_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA1_CCR7_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA1_CCR7_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA1_CCR7_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA1_CCR7_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA1_CCR7_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA1_CCR7_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA1_CCR7_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA1_CCR7_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA1_CCR7_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CNDTR7*
 Address:     $40020084
 Reset:       $00000000
 Description: DMA channel 7 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA1_CNDTR7_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CPAR7*
 Address:     $40020088
 Reset:       $00000000
 Description: DMA channel 7 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA1_CPAR7_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA1|
 Register:    *DMA1_CMAR7*
 Address:     $4002008C
 Reset:       $00000000
 Description: DMA channel 7 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA1_CMAR7_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_ISR*
 Address:     $40020400
 Reset:       $00000000
 Description: DMA interrupt status register (DMA_ISR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=203
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------------------
   *DMA2_ISR_GIF1* | 0  | 1  | 1  | rw | Channel 1 Global interrupt flag
  *DMA2_ISR_TCIF1* | 1  | 1  | 2  | rw | Channel 1 Transfer Complete flag
  *DMA2_ISR_HTIF1* | 2  | 1  | 3  | rw | Channel 1 Half Transfer Complete flag
  *DMA2_ISR_TEIF1* | 3  | 1  | 4  | rw | Channel 1 Transfer Error flag
   *DMA2_ISR_GIF2* | 4  | 1  | 5  | rw | Channel 2 Global interrupt flag
  *DMA2_ISR_TCIF2* | 5  | 1  | 6  | rw | Channel 2 Transfer Complete flag
  *DMA2_ISR_HTIF2* | 6  | 1  | 7  | rw | Channel 2 Half Transfer Complete flag
  *DMA2_ISR_TEIF2* | 7  | 1  | 8  | rw | Channel 2 Transfer Error flag
   *DMA2_ISR_GIF3* | 8  | 1  | 9  | rw | Channel 3 Global interrupt flag
  *DMA2_ISR_TCIF3* | 9  | 1  | 10 | rw | Channel 3 Transfer Complete flag
  *DMA2_ISR_HTIF3* | 10 | 1  | 11 | rw | Channel 3 Half Transfer Complete flag
  *DMA2_ISR_TEIF3* | 11 | 1  | 12 | rw | Channel 3 Transfer Error flag
   *DMA2_ISR_GIF4* | 12 | 1  | 13 | rw | Channel 4 Global interrupt flag
  *DMA2_ISR_TCIF4* | 13 | 1  | 14 | rw | Channel 4 Transfer Complete flag
  *DMA2_ISR_HTIF4* | 14 | 1  | 15 | rw | Channel 4 Half Transfer Complete flag
  *DMA2_ISR_TEIF4* | 15 | 1  | 16 | rw | Channel 4 Transfer Error flag
   *DMA2_ISR_GIF5* | 16 | 1  | 17 | rw | Channel 5 Global interrupt flag
  *DMA2_ISR_TCIF5* | 17 | 1  | 18 | rw | Channel 5 Transfer Complete flag
  *DMA2_ISR_HTIF5* | 18 | 1  | 19 | rw | Channel 5 Half Transfer Complete flag
  *DMA2_ISR_TEIF5* | 19 | 1  | 20 | rw | Channel 5 Transfer Error flag
   *DMA2_ISR_GIF6* | 20 | 1  | 21 | rw | Channel 6 Global interrupt flag
  *DMA2_ISR_TCIF6* | 21 | 1  | 22 | rw | Channel 6 Transfer Complete flag
  *DMA2_ISR_HTIF6* | 22 | 1  | 23 | rw | Channel 6 Half Transfer Complete flag
  *DMA2_ISR_TEIF6* | 23 | 1  | 24 | rw | Channel 6 Transfer Error flag
   *DMA2_ISR_GIF7* | 24 | 1  | 25 | rw | Channel 7 Global interrupt flag
  *DMA2_ISR_TCIF7* | 25 | 1  | 26 | rw | Channel 7 Transfer Complete flag
  *DMA2_ISR_HTIF7* | 26 | 1  | 27 | rw | Channel 7 Half Transfer Complete flag
  *DMA2_ISR_TEIF7* | 27 | 1  | 28 | rw | Channel 7 Transfer Error flag
 ----------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_IFCR*
 Address:     $40020404
 Reset:       $00000000
 Description: DMA interrupt flag clear register (DMA_IFCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=205
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------
   *DMA2_IFCR_CGIF1* | 0  | 1  | 1  | rw | Channel 1 Global interrupt clear
  *DMA2_IFCR_CTCIF1* | 1  | 1  | 2  | rw | Channel 1 Transfer Complete clear
  *DMA2_IFCR_CHTIF1* | 2  | 1  | 3  | rw | Channel 1 Half Transfer clear
  *DMA2_IFCR_CTEIF1* | 3  | 1  | 4  | rw | Channel 1 Transfer Error clear
   *DMA2_IFCR_CGIF2* | 4  | 1  | 5  | rw | Channel 2 Global interrupt clear
  *DMA2_IFCR_CTCIF2* | 5  | 1  | 6  | rw | Channel 2 Transfer Complete clear
  *DMA2_IFCR_CHTIF2* | 6  | 1  | 7  | rw | Channel 2 Half Transfer clear
  *DMA2_IFCR_CTEIF2* | 7  | 1  | 8  | rw | Channel 2 Transfer Error clear
   *DMA2_IFCR_CGIF3* | 8  | 1  | 9  | rw | Channel 3 Global interrupt clear
  *DMA2_IFCR_CTCIF3* | 9  | 1  | 10 | rw | Channel 3 Transfer Complete clear
  *DMA2_IFCR_CHTIF3* | 10 | 1  | 11 | rw | Channel 3 Half Transfer clear
  *DMA2_IFCR_CTEIF3* | 11 | 1  | 12 | rw | Channel 3 Transfer Error clear
   *DMA2_IFCR_CGIF4* | 12 | 1  | 13 | rw | Channel 4 Global interrupt clear
  *DMA2_IFCR_CTCIF4* | 13 | 1  | 14 | rw | Channel 4 Transfer Complete clear
  *DMA2_IFCR_CHTIF4* | 14 | 1  | 15 | rw | Channel 4 Half Transfer clear
  *DMA2_IFCR_CTEIF4* | 15 | 1  | 16 | rw | Channel 4 Transfer Error clear
   *DMA2_IFCR_CGIF5* | 16 | 1  | 17 | rw | Channel 5 Global interrupt clear
  *DMA2_IFCR_CTCIF5* | 17 | 1  | 18 | rw | Channel 5 Transfer Complete clear
  *DMA2_IFCR_CHTIF5* | 18 | 1  | 19 | rw | Channel 5 Half Transfer clear
  *DMA2_IFCR_CTEIF5* | 19 | 1  | 20 | rw | Channel 5 Transfer Error clear
   *DMA2_IFCR_CGIF6* | 20 | 1  | 21 | rw | Channel 6 Global interrupt clear
  *DMA2_IFCR_CTCIF6* | 21 | 1  | 22 | rw | Channel 6 Transfer Complete clear
  *DMA2_IFCR_CHTIF6* | 22 | 1  | 23 | rw | Channel 6 Half Transfer clear
  *DMA2_IFCR_CTEIF6* | 23 | 1  | 24 | rw | Channel 6 Transfer Error clear
   *DMA2_IFCR_CGIF7* | 24 | 1  | 25 | rw | Channel 7 Global interrupt clear
  *DMA2_IFCR_CTCIF7* | 25 | 1  | 26 | rw | Channel 7 Transfer Complete clear
  *DMA2_IFCR_CHTIF7* | 26 | 1  | 27 | rw | Channel 7 Half Transfer clear
  *DMA2_IFCR_CTEIF7* | 27 | 1  | 28 | rw | Channel 7 Transfer Error clear
 ------------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CCR1*
 Address:     $40020408
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=206
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA2_CCR1_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA2_CCR1_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA2_CCR1_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA2_CCR1_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA2_CCR1_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA2_CCR1_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA2_CCR1_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA2_CCR1_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA2_CCR1_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA2_CCR1_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA2_CCR1_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA2_CCR1_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CNDTR1*
 Address:     $4002040C
 Reset:       $00000000
 Description: DMA channel 1 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA2_CNDTR1_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CPAR1*
 Address:     $40020410
 Reset:       $00000000
 Description: DMA channel 1 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA2_CPAR1_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CMAR1*
 Address:     $40020414
 Reset:       $00000000
 Description: DMA channel 1 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA2_CMAR1_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CCR2*
 Address:     $4002041C
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA2_CCR2_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA2_CCR2_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA2_CCR2_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA2_CCR2_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA2_CCR2_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA2_CCR2_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA2_CCR2_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA2_CCR2_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA2_CCR2_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA2_CCR2_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA2_CCR2_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA2_CCR2_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CNDTR2*
 Address:     $40020420
 Reset:       $00000000
 Description: DMA channel 2 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA2_CNDTR2_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CPAR2*
 Address:     $40020424
 Reset:       $00000000
 Description: DMA channel 2 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA2_CPAR2_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CMAR2*
 Address:     $40020428
 Reset:       $00000000
 Description: DMA channel 2 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA2_CMAR2_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CCR3*
 Address:     $40020430
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA2_CCR3_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA2_CCR3_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA2_CCR3_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA2_CCR3_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA2_CCR3_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA2_CCR3_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA2_CCR3_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA2_CCR3_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA2_CCR3_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA2_CCR3_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA2_CCR3_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA2_CCR3_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CNDTR3*
 Address:     $40020434
 Reset:       $00000000
 Description: DMA channel 3 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA2_CNDTR3_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CPAR3*
 Address:     $40020438
 Reset:       $00000000
 Description: DMA channel 3 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA2_CPAR3_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CMAR3*
 Address:     $4002043C
 Reset:       $00000000
 Description: DMA channel 3 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA2_CMAR3_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CCR4*
 Address:     $40020444
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA2_CCR4_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA2_CCR4_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA2_CCR4_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA2_CCR4_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA2_CCR4_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA2_CCR4_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA2_CCR4_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA2_CCR4_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA2_CCR4_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA2_CCR4_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA2_CCR4_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA2_CCR4_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CNDTR4*
 Address:     $40020448
 Reset:       $00000000
 Description: DMA channel 4 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA2_CNDTR4_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CPAR4*
 Address:     $4002044C
 Reset:       $00000000
 Description: DMA channel 4 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA2_CPAR4_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CMAR4*
 Address:     $40020450
 Reset:       $00000000
 Description: DMA channel 4 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA2_CMAR4_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CCR5*
 Address:     $40020458
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA2_CCR5_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA2_CCR5_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA2_CCR5_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA2_CCR5_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA2_CCR5_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA2_CCR5_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA2_CCR5_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA2_CCR5_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA2_CCR5_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA2_CCR5_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA2_CCR5_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA2_CCR5_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CNDTR5*
 Address:     $4002045C
 Reset:       $00000000
 Description: DMA channel 5 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA2_CNDTR5_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CPAR5*
 Address:     $40020460
 Reset:       $00000000
 Description: DMA channel 5 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA2_CPAR5_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CMAR5*
 Address:     $40020464
 Reset:       $00000000
 Description: DMA channel 5 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA2_CMAR5_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CCR6*
 Address:     $4002046C
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA2_CCR6_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA2_CCR6_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA2_CCR6_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA2_CCR6_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA2_CCR6_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA2_CCR6_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA2_CCR6_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA2_CCR6_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA2_CCR6_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA2_CCR6_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA2_CCR6_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA2_CCR6_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CNDTR6*
 Address:     $40020470
 Reset:       $00000000
 Description: DMA channel 6 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA2_CNDTR6_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CPAR6*
 Address:     $40020474
 Reset:       $00000000
 Description: DMA channel 6 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA2_CPAR6_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CMAR6*
 Address:     $40020478
 Reset:       $00000000
 Description: DMA channel 6 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA2_CMAR6_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CCR7*
 Address:     $40020480
 Reset:       $00000000
 Description: DMA channel configuration register (DMA_CCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
       *DMA2_CCR7_EN* | 0  | 1  | 1  | rw | Channel enable
     *DMA2_CCR7_TCIE* | 1  | 1  | 2  | rw | Transfer complete interrupt enable
     *DMA2_CCR7_HTIE* | 2  | 1  | 3  | rw | Half Transfer interrupt enable
     *DMA2_CCR7_TEIE* | 3  | 1  | 4  | rw | Transfer error interrupt enable
      *DMA2_CCR7_DIR* | 4  | 1  | 5  | rw | Data transfer direction
     *DMA2_CCR7_CIRC* | 5  | 1  | 6  | rw | Circular mode
     *DMA2_CCR7_PINC* | 6  | 1  | 7  | rw | Peripheral increment mode
     *DMA2_CCR7_MINC* | 7  | 1  | 8  | rw | Memory increment mode
    *DMA2_CCR7_PSIZE* | 8  | 2  | 10 | rw | Peripheral size
    *DMA2_CCR7_MSIZE* | 10 | 2  | 12 | rw | Memory size
       *DMA2_CCR7_PL* | 12 | 2  | 14 | rw | Channel Priority level
  *DMA2_CCR7_MEM2MEM* | 14 | 1  | 15 | rw | Memory to memory mode
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CNDTR7*
 Address:     $40020484
 Reset:       $00000000
 Description: DMA channel 7 number of data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=209
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+----------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+----------------------------
  *DMA2_CNDTR7_NDT* | 0  | 16 | 16 | rw | Number of data to transfer
 -----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CPAR7*
 Address:     $40020488
 Reset:       $00000000
 Description: DMA channel 7 peripheral address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------
  *DMA2_CPAR7_PA* | 0  | 32 | 32 | rw | Peripheral address
 ---------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DMA2|
 Register:    *DMA2_CMAR7*
 Address:     $4002048C
 Reset:       $00000000
 Description: DMA channel 7 memory address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=210
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------
  *DMA2_CMAR7_MA* | 0  | 32 | 32 | rw | Memory address
 ---------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_CR*
 Address:     $40021000
 Reset:       $00000083
 Description: Clock control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=110
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------------------
    *RCC_CR_HSION* | 0  | 1  | 1  | rw | Internal High Speed clock enable
   *RCC_CR_HSIRDY* | 1  | 1  | 2  | ro | Internal High Speed clock ready flag
  *RCC_CR_HSITRIM* | 3  | 5  | 8  | rw | Internal High Speed clock trimming
   *RCC_CR_HSICAL* | 8  | 8  | 16 | ro | Internal High Speed clock Calibration
    *RCC_CR_HSEON* | 16 | 1  | 17 | rw | External High Speed clock enable
   *RCC_CR_HSERDY* | 17 | 1  | 18 | ro | External High Speed clock ready flag
   *RCC_CR_HSEBYP* | 18 | 1  | 19 | rw | External High Speed clock Bypass
    *RCC_CR_CSSON* | 19 | 1  | 20 | rw | Clock Security System enable
    *RCC_CR_PLLON* | 24 | 1  | 25 | rw | PLL enable
   *RCC_CR_PLLRDY* | 25 | 1  | 26 | ro | PLL clock ready flag
 ----------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_CFGR*
 Address:     $40021004
 Reset:       $00000000
 Description: Clock configuration register (RCC_CFGR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=111
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
        *RCC_CFGR_SW* | 0  | 2  | 2  | rw | System clock Switch
       *RCC_CFGR_SWS* | 2  | 2  | 4  | ro | System Clock Switch Status
      *RCC_CFGR_HPRE* | 4  | 4  | 8  | rw | AHB prescaler
      *RCC_CFGR_PPRE* | 8  | 3  | 11 | rw | APB Low speed prescaler (APB1)
    *RCC_CFGR_ADCPRE* | 14 | 1  | 15 | rw | ADC prescaler
    *RCC_CFGR_PLLSRC* | 15 | 2  | 17 | rw | PLL input clock source
  *RCC_CFGR_PLLXTPRE* | 17 | 1  | 18 | rw | HSE divider for PLL entry
    *RCC_CFGR_PLLMUL* | 18 | 4  | 22 | rw | PLL Multiplication Factor
       *RCC_CFGR_MCO* | 24 | 3  | 27 | rw | Microcontroller clock output
    *RCC_CFGR_MCOPRE* | 28 | 3  | 31 | rw | Microcontroller Clock Output Prescaler
  *RCC_CFGR_PLLNODIV* | 31 | 1  | 32 | rw | PLL clock not divided for MCO
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_CIR*
 Address:     $40021008
 Reset:       $00000000
 Description: Clock interrupt register (RCC_CIR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=114
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+---------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+---------------------------------------
     *RCC_CIR_LSIRDYF* | 0  | 1  | 1  | ro | LSI Ready Interrupt flag
     *RCC_CIR_LSERDYF* | 1  | 1  | 2  | ro | LSE Ready Interrupt flag
     *RCC_CIR_HSIRDYF* | 2  | 1  | 3  | ro | HSI Ready Interrupt flag
     *RCC_CIR_HSERDYF* | 3  | 1  | 4  | ro | HSE Ready Interrupt flag
     *RCC_CIR_PLLRDYF* | 4  | 1  | 5  | ro | PLL Ready Interrupt flag
   *RCC_CIR_HSI14RDYF* | 5  | 1  | 6  | ro | HSI14 ready interrupt flag
   *RCC_CIR_HSI48RDYF* | 6  | 1  | 7  | ro | HSI48 ready interrupt flag
        *RCC_CIR_CSSF* | 7  | 1  | 8  | ro | Clock Security System Interrupt flag
    *RCC_CIR_LSIRDYIE* | 8  | 1  | 9  | rw | LSI Ready Interrupt Enable
    *RCC_CIR_LSERDYIE* | 9  | 1  | 10 | rw | LSE Ready Interrupt Enable
    *RCC_CIR_HSIRDYIE* | 10 | 1  | 11 | rw | HSI Ready Interrupt Enable
    *RCC_CIR_HSERDYIE* | 11 | 1  | 12 | rw | HSE Ready Interrupt Enable
    *RCC_CIR_PLLRDYIE* | 12 | 1  | 13 | rw | PLL Ready Interrupt Enable
   *RCC_CIR_HSI14RDYE* | 13 | 1  | 14 | rw | HSI14 ready interrupt enable
  *RCC_CIR_HSI48RDYIE* | 14 | 1  | 15 | rw | HSI48 ready interrupt enable
     *RCC_CIR_LSIRDYC* | 16 | 1  | 17 | wo | LSI Ready Interrupt Clear
     *RCC_CIR_LSERDYC* | 17 | 1  | 18 | wo | LSE Ready Interrupt Clear
     *RCC_CIR_HSIRDYC* | 18 | 1  | 19 | wo | HSI Ready Interrupt Clear
     *RCC_CIR_HSERDYC* | 19 | 1  | 20 | wo | HSE Ready Interrupt Clear
     *RCC_CIR_PLLRDYC* | 20 | 1  | 21 | wo | PLL Ready Interrupt Clear
   *RCC_CIR_HSI14RDYC* | 21 | 1  | 22 | wo | HSI 14 MHz Ready Interrupt Clear
   *RCC_CIR_HSI48RDYC* | 22 | 1  | 23 | wo | HSI48 Ready Interrupt Clear
        *RCC_CIR_CSSC* | 23 | 1  | 24 | wo | Clock security system interrupt clear
 --------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_APB2RSTR*
 Address:     $4002100C
 Reset:       $00000000
 Description: APB2 peripheral reset register (RCC_APB2RSTR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=117
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------------+----+----+----+----+-----------------------
                Bitfield | bo | bw | be | ac | Description
 ------------------------+----+----+----+----+-----------------------
  *RCC_APB2RSTR_SYSCFGRST* | 0  | 1  | 1  | rw | SYSCFG and COMP reset
     *RCC_APB2RSTR_ADCRST* | 9  | 1  | 10 | rw | ADC interface reset
    *RCC_APB2RSTR_TIM1RST* | 11 | 1  | 12 | rw | TIM1 timer reset
    *RCC_APB2RSTR_SPI1RST* | 12 | 1  | 13 | rw | SPI 1 reset
  *RCC_APB2RSTR_USART1RST* | 14 | 1  | 15 | rw | USART1 reset
   *RCC_APB2RSTR_TIM15RST* | 16 | 1  | 17 | rw | TIM15 timer reset
   *RCC_APB2RSTR_TIM16RST* | 17 | 1  | 18 | rw | TIM16 timer reset
   *RCC_APB2RSTR_TIM17RST* | 18 | 1  | 19 | rw | TIM17 timer reset
  *RCC_APB2RSTR_DBGMCURST* | 22 | 1  | 23 | rw | Debug MCU reset
 ------------------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_APB1RSTR*
 Address:     $40021010
 Reset:       $00000000
 Description: APB1 peripheral reset register (RCC_APB1RSTR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=119
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------------+----+----+----+----+---------------------------------------
                Bitfield | bo | bw | be | ac | Description
 ------------------------+----+----+----+----+---------------------------------------
    *RCC_APB1RSTR_TIM2RST* | 0  | 1  | 1  | rw | Timer 2 reset
    *RCC_APB1RSTR_TIM3RST* | 1  | 1  | 2  | rw | Timer 3 reset
    *RCC_APB1RSTR_TIM6RST* | 4  | 1  | 5  | rw | Timer 6 reset
    *RCC_APB1RSTR_TIM7RST* | 5  | 1  | 6  | rw | TIM7 timer reset
   *RCC_APB1RSTR_TIM14RST* | 8  | 1  | 9  | rw | Timer 14 reset
    *RCC_APB1RSTR_WWDGRST* | 11 | 1  | 12 | rw | Window watchdog reset
    *RCC_APB1RSTR_SPI2RST* | 14 | 1  | 15 | rw | SPI2 reset
  *RCC_APB1RSTR_USART2RST* | 17 | 1  | 18 | rw | USART 2 reset
  *RCC_APB1RSTR_USART3RST* | 18 | 1  | 19 | rw | USART3 reset
  *RCC_APB1RSTR_USART4RST* | 19 | 1  | 20 | rw | USART4 reset
  *RCC_APB1RSTR_USART5RST* | 20 | 1  | 21 | rw | USART5 reset
    *RCC_APB1RSTR_I2C1RST* | 21 | 1  | 22 | rw | I2C1 reset
    *RCC_APB1RSTR_I2C2RST* | 22 | 1  | 23 | rw | I2C2 reset
     *RCC_APB1RSTR_USBRST* | 23 | 1  | 24 | rw | USB interface reset
     *RCC_APB1RSTR_CANRST* | 25 | 1  | 26 | rw | CAN interface reset
     *RCC_APB1RSTR_CRSRST* | 27 | 1  | 28 | rw | Clock Recovery System interface reset
     *RCC_APB1RSTR_PWRRST* | 28 | 1  | 29 | rw | Power interface reset
     *RCC_APB1RSTR_DACRST* | 29 | 1  | 30 | rw | DAC interface reset
     *RCC_APB1RSTR_CECRST* | 30 | 1  | 31 | rw | HDMI CEC reset
 ------------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_AHBENR*
 Address:     $40021014
 Reset:       $00000014
 Description: AHB Peripheral Clock enable register (RCC_AHBENR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=121
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+---------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+---------------------------------------
   *RCC_AHBENR_DMA1EN* | 0  | 1  | 1  | rw | DMA1 clock enable
   *RCC_AHBENR_DMA2EN* | 1  | 1  | 2  | rw | DMA2 clock enable
   *RCC_AHBENR_SRAMEN* | 2  | 1  | 3  | rw | SRAM interface clock enable
  *RCC_AHBENR_FLITFEN* | 4  | 1  | 5  | rw | FLITF clock enable
    *RCC_AHBENR_CRCEN* | 6  | 1  | 7  | rw | CRC clock enable
   *RCC_AHBENR_IOPAEN* | 17 | 1  | 18 | rw | I/O port A clock enable
   *RCC_AHBENR_IOPBEN* | 18 | 1  | 19 | rw | I/O port B clock enable
   *RCC_AHBENR_IOPCEN* | 19 | 1  | 20 | rw | I/O port C clock enable
   *RCC_AHBENR_IOPDEN* | 20 | 1  | 21 | rw | I/O port D clock enable
   *RCC_AHBENR_IOPFEN* | 22 | 1  | 23 | rw | I/O port F clock enable
    *RCC_AHBENR_TSCEN* | 24 | 1  | 25 | rw | Touch sensing controller clock enable
 --------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_APB2ENR*
 Address:     $40021018
 Reset:       $00000000
 Description: APB2 peripheral clock enable register (RCC_APB2ENR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=123
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+-------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+-------------------------------
  *RCC_APB2ENR_SYSCFGEN* | 0  | 1  | 1  | rw | SYSCFG clock enable
     *RCC_APB2ENR_ADCEN* | 9  | 1  | 10 | rw | ADC 1 interface clock enable
    *RCC_APB2ENR_TIM1EN* | 11 | 1  | 12 | rw | TIM1 Timer clock enable
    *RCC_APB2ENR_SPI1EN* | 12 | 1  | 13 | rw | SPI 1 clock enable
  *RCC_APB2ENR_USART1EN* | 14 | 1  | 15 | rw | USART1 clock enable
   *RCC_APB2ENR_TIM15EN* | 16 | 1  | 17 | rw | TIM15 timer clock enable
   *RCC_APB2ENR_TIM16EN* | 17 | 1  | 18 | rw | TIM16 timer clock enable
   *RCC_APB2ENR_TIM17EN* | 18 | 1  | 19 | rw | TIM17 timer clock enable
  *RCC_APB2ENR_DBGMCUEN* | 22 | 1  | 23 | rw | MCU debug module clock enable
  *RCC_APB2ENR_USART8EN* | 7  | 1  | 8  | rw | USART8 clock enable
  *RCC_APB2ENR_USART7EN* | 6  | 1  | 7  | rw | USART7 clock enable
  *RCC_APB2ENR_USART6EN* | 5  | 1  | 6  | rw | USART6 clock enable
 ----------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_APB1ENR*
 Address:     $4002101C
 Reset:       $00000000
 Description: APB1 peripheral clock enable register (RCC_APB1ENR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=124
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+----------------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+----------------------------------------------
    *RCC_APB1ENR_TIM2EN* | 0  | 1  | 1  | rw | Timer 2 clock enable
    *RCC_APB1ENR_TIM3EN* | 1  | 1  | 2  | rw | Timer 3 clock enable
    *RCC_APB1ENR_TIM6EN* | 4  | 1  | 5  | rw | Timer 6 clock enable
    *RCC_APB1ENR_TIM7EN* | 5  | 1  | 6  | rw | TIM7 timer clock enable
   *RCC_APB1ENR_TIM14EN* | 8  | 1  | 9  | rw | Timer 14 clock enable
    *RCC_APB1ENR_WWDGEN* | 11 | 1  | 12 | rw | Window watchdog clock enable
    *RCC_APB1ENR_SPI2EN* | 14 | 1  | 15 | rw | SPI 2 clock enable
  *RCC_APB1ENR_USART2EN* | 17 | 1  | 18 | rw | USART 2 clock enable
  *RCC_APB1ENR_USART3EN* | 18 | 1  | 19 | rw | USART3 clock enable
  *RCC_APB1ENR_USART4EN* | 19 | 1  | 20 | rw | USART4 clock enable
  *RCC_APB1ENR_USART5EN* | 20 | 1  | 21 | rw | USART5 clock enable
    *RCC_APB1ENR_I2C1EN* | 21 | 1  | 22 | rw | I2C 1 clock enable
    *RCC_APB1ENR_I2C2EN* | 22 | 1  | 23 | rw | I2C 2 clock enable
    *RCC_APB1ENR_USBRST* | 23 | 1  | 24 | rw | USB interface clock enable
     *RCC_APB1ENR_CANEN* | 25 | 1  | 26 | rw | CAN interface clock enable
     *RCC_APB1ENR_CRSEN* | 27 | 1  | 28 | rw | Clock Recovery System interface clock enable
     *RCC_APB1ENR_PWREN* | 28 | 1  | 29 | rw | Power interface clock enable
     *RCC_APB1ENR_DACEN* | 29 | 1  | 30 | rw | DAC interface clock enable
     *RCC_APB1ENR_CECEN* | 30 | 1  | 31 | rw | HDMI CEC interface clock enable
 ----------------------+----+----+----+----+----------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_BDCR*
 Address:     $40021020
 Reset:       $00000000
 Description: Backup domain control register (RCC_BDCR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=127
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------------
   *RCC_BDCR_LSEON* | 0  | 1  | 1  | rw | External Low Speed oscillator enable
  *RCC_BDCR_LSERDY* | 1  | 1  | 2  | ro | External Low Speed oscillator ready
  *RCC_BDCR_LSEBYP* | 2  | 1  | 3  | rw | External Low Speed oscillator bypass
  *RCC_BDCR_LSEDRV* | 3  | 2  | 5  | rw | LSE oscillator drive capability
  *RCC_BDCR_RTCSEL* | 8  | 2  | 10 | rw | RTC clock source selection
   *RCC_BDCR_RTCEN* | 15 | 1  | 16 | rw | RTC clock enable
   *RCC_BDCR_BDRST* | 16 | 1  | 17 | rw | Backup domain software reset
 -----------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_CSR*
 Address:     $40021024
 Reset:       $0C000000
 Description: Control/status register (RCC_CSR)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=128
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+--------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+--------------------------------------
     *RCC_CSR_LSION* | 0  | 1  | 1  | rw | Internal low speed oscillator enable
    *RCC_CSR_LSIRDY* | 1  | 1  | 2  | ro | Internal low speed oscillator ready
      *RCC_CSR_RMVF* | 24 | 1  | 25 | rw | Remove reset flag
   *RCC_CSR_OBLRSTF* | 25 | 1  | 26 | rw | Option byte loader reset flag
   *RCC_CSR_PINRSTF* | 26 | 1  | 27 | rw | PIN reset flag
   *RCC_CSR_PORRSTF* | 27 | 1  | 28 | rw | POR/PDR reset flag
   *RCC_CSR_SFTRSTF* | 28 | 1  | 29 | rw | Software reset flag
  *RCC_CSR_IWDGRSTF* | 29 | 1  | 30 | rw | Independent watchdog reset flag
  *RCC_CSR_WWDGRSTF* | 30 | 1  | 31 | rw | Window watchdog reset flag
  *RCC_CSR_LPWRRSTF* | 31 | 1  | 32 | rw | Low-power reset flag
 ------------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_AHBRSTR*
 Address:     $40021028
 Reset:       $00000000
 Description: AHB peripheral reset register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=130
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+--------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+--------------------------------
  *RCC_AHBRSTR_IOPARST* | 17 | 1  | 18 | rw | I/O port A reset
  *RCC_AHBRSTR_IOPBRST* | 18 | 1  | 19 | rw | I/O port B reset
  *RCC_AHBRSTR_IOPCRST* | 19 | 1  | 20 | rw | I/O port C reset
  *RCC_AHBRSTR_IOPDRST* | 20 | 1  | 21 | rw | I/O port D reset
  *RCC_AHBRSTR_IOPFRST* | 22 | 1  | 23 | rw | I/O port F reset
   *RCC_AHBRSTR_TSCRST* | 24 | 1  | 25 | rw | Touch sensing controller reset
 ---------------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_CFGR2*
 Address:     $4002102C
 Reset:       $00000000
 Description: Clock configuration register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=131
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *RCC_CFGR2_PREDIV* | 0  | 4  | 4  | rw | PREDIV division factor
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_CFGR3*
 Address:     $40021030
 Reset:       $00000000
 Description: Clock configuration register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=132
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+---------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+---------------------------------
  *RCC_CFGR3_USART1SW* | 0  | 2  | 2  | rw | USART1 clock source selection
    *RCC_CFGR3_I2C1SW* | 4  | 1  | 5  | rw | I2C1 clock source selection
     *RCC_CFGR3_CECSW* | 6  | 1  | 7  | rw | HDMI CEC clock source selection
     *RCC_CFGR3_USBSW* | 7  | 1  | 8  | rw | USB clock source selection
     *RCC_CFGR3_ADCSW* | 8  | 1  | 9  | rw | ADC clock source selection
  *RCC_CFGR3_USART2SW* | 16 | 2  | 18 | rw | USART2 clock source selection
 --------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RCC|
 Register:    *RCC_CR2*
 Address:     $40021034
 Reset:       $00000080
 Description: Clock control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=133
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+--------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+--------------------------------------
    *RCC_CR2_HSI14ON* | 0  | 1  | 1  | rw | HSI14 clock enable
   *RCC_CR2_HSI14RDY* | 1  | 1  | 2  | ro | HR14 clock ready flag
   *RCC_CR2_HSI14DIS* | 2  | 1  | 3  | rw | HSI14 clock request from ADC disable
  *RCC_CR2_HSI14TRIM* | 3  | 5  | 8  | rw | HSI14 clock trimming
   *RCC_CR2_HSI14CAL* | 8  | 8  | 16 | ro | HSI14 clock calibration
    *RCC_CR2_HSI48ON* | 16 | 1  | 17 | rw | HSI48 clock enable
   *RCC_CR2_HSI48RDY* | 17 | 1  | 18 | ro | HSI48 clock ready flag
   *RCC_CR2_HSI48CAL* | 24 | 1  | 25 | ro | HSI48 factory clock calibration
 -------------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SYSCFG_COMP|
 Register:    *SYSCFG_COMP_SYSCFG_CFGR1*
 Address:     $40010000
 Reset:       $00000000
 Description: configuration register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=166
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------------------------+----+----+----+----+--------------------------------------------------------------
                                    Bitfield | bo | bw | be | ac | Description
 --------------------------------------------+----+----+----+----+--------------------------------------------------------------
           *SYSCFG_COMP_SYSCFG_CFGR1_MEM_MODE* | 0  | 2  | 2  | rw | Memory mapping selection bits
        *SYSCFG_COMP_SYSCFG_CFGR1_ADC_DMA_RMP* | 8  | 1  | 9  | rw | ADC DMA remapping bit
  *SYSCFG_COMP_SYSCFG_CFGR1_USART1_TX_DMA_RMP* | 9  | 1  | 10 | rw | USART1_TX DMA remapping bit
  *SYSCFG_COMP_SYSCFG_CFGR1_USART1_RX_DMA_RMP* | 10 | 1  | 11 | rw | USART1_RX DMA request remapping bit
      *SYSCFG_COMP_SYSCFG_CFGR1_TIM16_DMA_RMP* | 11 | 1  | 12 | rw | TIM16 DMA request remapping bit
      *SYSCFG_COMP_SYSCFG_CFGR1_TIM17_DMA_RMP* | 12 | 1  | 13 | rw | TIM17 DMA request remapping bit
         *SYSCFG_COMP_SYSCFG_CFGR1_I2C_PB6_FM* | 16 | 1  | 17 | rw | Fast Mode Plus (FM plus) driving capability activation bits.
         *SYSCFG_COMP_SYSCFG_CFGR1_I2C_PB7_FM* | 17 | 1  | 18 | rw | Fast Mode Plus (FM+) driving capability activation bits.
         *SYSCFG_COMP_SYSCFG_CFGR1_I2C_PB8_FM* | 18 | 1  | 19 | rw | Fast Mode Plus (FM+) driving capability activation bits.
         *SYSCFG_COMP_SYSCFG_CFGR1_I2C_PB9_FM* | 19 | 1  | 20 | rw | Fast Mode Plus (FM+) driving capability activation bits.
       *SYSCFG_COMP_SYSCFG_CFGR1_I2C1_FM_plus* | 20 | 1  | 21 | rw | FM+ driving capability activation for I2C1
       *SYSCFG_COMP_SYSCFG_CFGR1_I2C2_FM_plus* | 21 | 1  | 22 | rw | FM+ driving capability activation for I2C2
       *SYSCFG_COMP_SYSCFG_CFGR1_SPI2_DMA_RMP* | 24 | 1  | 25 | rw | SPI2 DMA request remapping bit
     *SYSCFG_COMP_SYSCFG_CFGR1_USART2_DMA_RMP* | 25 | 1  | 26 | rw | USART2 DMA request remapping bit
     *SYSCFG_COMP_SYSCFG_CFGR1_USART3_DMA_RMP* | 26 | 1  | 27 | rw | USART3 DMA request remapping bit
       *SYSCFG_COMP_SYSCFG_CFGR1_I2C1_DMA_RMP* | 27 | 1  | 28 | rw | I2C1 DMA request remapping bit
       *SYSCFG_COMP_SYSCFG_CFGR1_TIM1_DMA_RMP* | 28 | 1  | 29 | rw | TIM1 DMA request remapping bit
       *SYSCFG_COMP_SYSCFG_CFGR1_TIM2_DMA_RMP* | 29 | 1  | 30 | rw | TIM2 DMA request remapping bit
       *SYSCFG_COMP_SYSCFG_CFGR1_TIM3_DMA_RMP* | 30 | 1  | 31 | rw | TIM3 DMA request remapping bit
 --------------------------------------------+----+----+----+----+--------------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SYSCFG_COMP|
 Register:    *SYSCFG_COMP_SYSCFG_EXTICR1*
 Address:     $40010008
 Reset:       $0000
 Description: external interrupt configuration register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=169
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------------------+----+----+----+----+---------------------------
                          Bitfield | bo | bw | be | ac | Description
 ----------------------------------+----+----+----+----+---------------------------
  *SYSCFG_COMP_SYSCFG_EXTICR1_EXTI3* | 12 | 4  | 16 | rw | EXTI 3 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR1_EXTI2* | 8  | 4  | 12 | rw | EXTI 2 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR1_EXTI1* | 4  | 4  | 8  | rw | EXTI 1 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR1_EXTI0* | 0  | 4  | 4  | rw | EXTI 0 configuration bits
 ----------------------------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SYSCFG_COMP|
 Register:    *SYSCFG_COMP_SYSCFG_EXTICR2*
 Address:     $4001000C
 Reset:       $0000
 Description: external interrupt configuration register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=170
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------------------+----+----+----+----+---------------------------
                          Bitfield | bo | bw | be | ac | Description
 ----------------------------------+----+----+----+----+---------------------------
  *SYSCFG_COMP_SYSCFG_EXTICR2_EXTI7* | 12 | 4  | 16 | rw | EXTI 7 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR2_EXTI6* | 8  | 4  | 12 | rw | EXTI 6 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR2_EXTI5* | 4  | 4  | 8  | rw | EXTI 5 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR2_EXTI4* | 0  | 4  | 4  | rw | EXTI 4 configuration bits
 ----------------------------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SYSCFG_COMP|
 Register:    *SYSCFG_COMP_SYSCFG_EXTICR3*
 Address:     $40010010
 Reset:       $0000
 Description: external interrupt configuration register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=170
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------------------------+----+----+----+----+----------------------------
                           Bitfield | bo | bw | be | ac | Description
 -----------------------------------+----+----+----+----+----------------------------
  *SYSCFG_COMP_SYSCFG_EXTICR3_EXTI11* | 12 | 4  | 16 | rw | EXTI 11 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR3_EXTI10* | 8  | 4  | 12 | rw | EXTI 10 configuration bits
   *SYSCFG_COMP_SYSCFG_EXTICR3_EXTI9* | 4  | 4  | 8  | rw | EXTI 9 configuration bits
   *SYSCFG_COMP_SYSCFG_EXTICR3_EXTI8* | 0  | 4  | 4  | rw | EXTI 8 configuration bits
 -----------------------------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SYSCFG_COMP|
 Register:    *SYSCFG_COMP_SYSCFG_EXTICR4*
 Address:     $40010014
 Reset:       $0000
 Description: external interrupt configuration register 4
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=171
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------------------------+----+----+----+----+----------------------------
                           Bitfield | bo | bw | be | ac | Description
 -----------------------------------+----+----+----+----+----------------------------
  *SYSCFG_COMP_SYSCFG_EXTICR4_EXTI15* | 12 | 4  | 16 | rw | EXTI 15 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR4_EXTI14* | 8  | 4  | 12 | rw | EXTI 14 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR4_EXTI13* | 4  | 4  | 8  | rw | EXTI 13 configuration bits
  *SYSCFG_COMP_SYSCFG_EXTICR4_EXTI12* | 0  | 4  | 4  | rw | EXTI 12 configuration bits
 -----------------------------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SYSCFG_COMP|
 Register:    *SYSCFG_COMP_SYSCFG_CFGR2*
 Address:     $40010018
 Reset:       $0000
 Description: configuration register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=172
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------------------------+----+----+----+----+---------------------------------
                                   Bitfield | bo | bw | be | ac | Description
 -------------------------------------------+----+----+----+----+---------------------------------
          *SYSCFG_COMP_SYSCFG_CFGR2_SRAM_PEF* | 8  | 1  | 9  | rw | SRAM parity flag
          *SYSCFG_COMP_SYSCFG_CFGR2_PVD_LOCK* | 2  | 1  | 3  | rw | PVD lock enable bit
  *SYSCFG_COMP_SYSCFG_CFGR2_SRAM_PARITY_LOCK* | 1  | 1  | 2  | rw | SRAM parity lock bit
        *SYSCFG_COMP_SYSCFG_CFGR2_LOCUP_LOCK* | 0  | 1  | 1  | rw | Cortex-M0 LOCKUP bit enable bit
 -------------------------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SYSCFG_COMP|
 Register:    *SYSCFG_COMP_COMP_CSR*
 Address:     $4001001C
 Reset:       $00000000
 Description: control and status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=304
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------------------------+----+----+----+----+----------------------------------------
                            Bitfield | bo | bw | be | ac | Description
 ------------------------------------+----+----+----+----+----------------------------------------
        *SYSCFG_COMP_COMP_CSR_COMP1EN* | 0  | 1  | 1  | rw | Comparator 1 enable
  *SYSCFG_COMP_COMP_CSR_COMP1_INP_DAC* | 1  | 1  | 2  | rw | COMP1_INP_DAC
      *SYSCFG_COMP_COMP_CSR_COMP1MODE* | 2  | 2  | 4  | rw | Comparator 1 mode
     *SYSCFG_COMP_COMP_CSR_COMP1INSEL* | 4  | 3  | 7  | rw | Comparator 1 inverting input selection
    *SYSCFG_COMP_COMP_CSR_COMP1OUTSEL* | 8  | 3  | 11 | rw | Comparator 1 output selection
       *SYSCFG_COMP_COMP_CSR_COMP1POL* | 11 | 1  | 12 | rw | Comparator 1 output polarity
      *SYSCFG_COMP_COMP_CSR_COMP1HYST* | 12 | 2  | 14 | rw | Comparator 1 hysteresis
       *SYSCFG_COMP_COMP_CSR_COMP1OUT* | 14 | 1  | 15 | ro | Comparator 1 output
      *SYSCFG_COMP_COMP_CSR_COMP1LOCK* | 15 | 1  | 16 | rw | Comparator 1 lock
        *SYSCFG_COMP_COMP_CSR_COMP2EN* | 16 | 1  | 17 | rw | Comparator 2 enable
      *SYSCFG_COMP_COMP_CSR_COMP2MODE* | 18 | 2  | 20 | rw | Comparator 2 mode
     *SYSCFG_COMP_COMP_CSR_COMP2INSEL* | 20 | 3  | 23 | rw | Comparator 2 inverting input selection
         *SYSCFG_COMP_COMP_CSR_WNDWEN* | 23 | 1  | 24 | rw | Window mode enable
    *SYSCFG_COMP_COMP_CSR_COMP2OUTSEL* | 24 | 3  | 27 | rw | Comparator 2 output selection
       *SYSCFG_COMP_COMP_CSR_COMP2POL* | 27 | 1  | 28 | rw | Comparator 2 output polarity
      *SYSCFG_COMP_COMP_CSR_COMP2HYST* | 28 | 2  | 30 | rw | Comparator 2 hysteresis
       *SYSCFG_COMP_COMP_CSR_COMP2OUT* | 30 | 1  | 31 | ro | Comparator 2 output
      *SYSCFG_COMP_COMP_CSR_COMP2LOCK* | 31 | 1  | 32 | rw | Comparator 2 lock
 ------------------------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_ISR*
 Address:     $40012400
 Reset:       $00000000
 Description: interrupt and status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=262
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------------
    *ADC_ISR_AWD* | 7  | 1  | 8  | rw | Analog watchdog flag
    *ADC_ISR_OVR* | 4  | 1  | 5  | rw | ADC overrun
    *ADC_ISR_EOS* | 3  | 1  | 4  | rw | End of sequence flag
    *ADC_ISR_EOC* | 2  | 1  | 3  | rw | End of conversion flag
  *ADC_ISR_EOSMP* | 1  | 1  | 2  | rw | End of sampling flag
  *ADC_ISR_ADRDY* | 0  | 1  | 1  | rw | ADC ready
 ---------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_IER*
 Address:     $40012404
 Reset:       $00000000
 Description: interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=263
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+---------------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+---------------------------------------------
    *ADC_IER_AWDIE* | 7  | 1  | 8  | rw | Analog watchdog interrupt enable
    *ADC_IER_OVRIE* | 4  | 1  | 5  | rw | Overrun interrupt enable
    *ADC_IER_EOSIE* | 3  | 1  | 4  | rw | End of conversion sequence interrupt enable
    *ADC_IER_EOCIE* | 2  | 1  | 3  | rw | End of conversion interrupt enable
  *ADC_IER_EOSMPIE* | 1  | 1  | 2  | rw | End of sampling flag interrupt enable
  *ADC_IER_ADRDYIE* | 0  | 1  | 1  | rw | ADC ready interrupt enable
 -----------------+----+----+----+----+---------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_CR*
 Address:     $40012408
 Reset:       $00000000
 Description: control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=265
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------
    *ADC_CR_ADCAL* | 31 | 1  | 32 | rw | ADC calibration
    *ADC_CR_ADSTP* | 4  | 1  | 5  | rw | ADC stop conversion command
  *ADC_CR_ADSTART* | 2  | 1  | 3  | rw | ADC start conversion command
    *ADC_CR_ADDIS* | 1  | 1  | 2  | rw | ADC disable command
     *ADC_CR_ADEN* | 0  | 1  | 1  | rw | ADC enable command
 ----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_CFGR1*
 Address:     $4001240C
 Reset:       $00000000
 Description: configuration register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=267
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------------------------------
    *ADC_CFGR1_AWDCH* | 26 | 5  | 31 | rw | Analog watchdog channel selection
    *ADC_CFGR1_AWDEN* | 23 | 1  | 24 | rw | Analog watchdog enable
   *ADC_CFGR1_AWDSGL* | 22 | 1  | 23 | rw | Enable the watchdog on a single channel or on all channels
   *ADC_CFGR1_DISCEN* | 16 | 1  | 17 | rw | Discontinuous mode
   *ADC_CFGR1_AUTOFF* | 15 | 1  | 16 | rw | Auto-off mode
   *ADC_CFGR1_AUTDLY* | 14 | 1  | 15 | rw | Auto-delayed conversion mode
     *ADC_CFGR1_CONT* | 13 | 1  | 14 | rw | Single / continuous conversion mode
   *ADC_CFGR1_OVRMOD* | 12 | 1  | 13 | rw | Overrun management mode
    *ADC_CFGR1_EXTEN* | 10 | 2  | 12 | rw | External trigger enable and polarity selection
   *ADC_CFGR1_EXTSEL* | 6  | 3  | 9  | rw | External trigger selection
    *ADC_CFGR1_ALIGN* | 5  | 1  | 6  | rw | Data alignment
      *ADC_CFGR1_RES* | 3  | 2  | 5  | rw | Data resolution
  *ADC_CFGR1_SCANDIR* | 2  | 1  | 3  | rw | Scan sequence direction
   *ADC_CFGR1_DMACFG* | 1  | 1  | 2  | rw | Direct memery access configuration
    *ADC_CFGR1_DMAEN* | 0  | 1  | 1  | rw | Direct memory access enable
 -------------------+----+----+----+----+------------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_CFGR2*
 Address:     $40012410
 Reset:       $00008000
 Description: configuration register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=271
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *ADC_CFGR2_JITOFF_D4* | 31 | 1  | 32 | rw | JITOFF_D4
  *ADC_CFGR2_JITOFF_D2* | 30 | 1  | 31 | rw | JITOFF_D2
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_SMPR*
 Address:     $40012414
 Reset:       $00000000
 Description: sampling time register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=271
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------
  *ADC_SMPR_SMPR* | 0  | 3  | 3  | rw | Sampling time selection
 ---------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_TR*
 Address:     $40012420
 Reset:       $00000FFF
 Description: watchdog threshold register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=272
              (place cursor on hyperlink, type 'gx' to follow)

 -----------+----+----+----+----+----------------------------------
   Bitfield | bo | bw | be | ac | Description
 -----------+----+----+----+----+----------------------------------
  *ADC_TR_HT* | 16 | 12 | 28 | rw | Analog watchdog higher threshold
  *ADC_TR_LT* | 0  | 12 | 12 | rw | Analog watchdog lower threshold
 -----------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_CHSELR*
 Address:     $40012428
 Reset:       $00000000
 Description: channel selection register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=272
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+---------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+---------------------
  *ADC_CHSELR_CHSEL18* | 18 | 1  | 19 | rw | Channel-x selection
  *ADC_CHSELR_CHSEL17* | 17 | 1  | 18 | rw | Channel-x selection
  *ADC_CHSELR_CHSEL16* | 16 | 1  | 17 | rw | Channel-x selection
  *ADC_CHSELR_CHSEL15* | 15 | 1  | 16 | rw | Channel-x selection
  *ADC_CHSELR_CHSEL14* | 14 | 1  | 15 | rw | Channel-x selection
  *ADC_CHSELR_CHSEL13* | 13 | 1  | 14 | rw | Channel-x selection
  *ADC_CHSELR_CHSEL12* | 12 | 1  | 13 | rw | Channel-x selection
  *ADC_CHSELR_CHSEL11* | 11 | 1  | 12 | rw | Channel-x selection
  *ADC_CHSELR_CHSEL10* | 10 | 1  | 11 | rw | Channel-x selection
   *ADC_CHSELR_CHSEL9* | 9  | 1  | 10 | rw | Channel-x selection
   *ADC_CHSELR_CHSEL8* | 8  | 1  | 9  | rw | Channel-x selection
   *ADC_CHSELR_CHSEL7* | 7  | 1  | 8  | rw | Channel-x selection
   *ADC_CHSELR_CHSEL6* | 6  | 1  | 7  | rw | Channel-x selection
   *ADC_CHSELR_CHSEL5* | 5  | 1  | 6  | rw | Channel-x selection
   *ADC_CHSELR_CHSEL4* | 4  | 1  | 5  | rw | Channel-x selection
   *ADC_CHSELR_CHSEL3* | 3  | 1  | 4  | rw | Channel-x selection
   *ADC_CHSELR_CHSEL2* | 2  | 1  | 3  | rw | Channel-x selection
   *ADC_CHSELR_CHSEL1* | 1  | 1  | 2  | rw | Channel-x selection
   *ADC_CHSELR_CHSEL0* | 0  | 1  | 1  | rw | Channel-x selection
 --------------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_DR*
 Address:     $40012440
 Reset:       $00000000
 Description: data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=273
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+----------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+----------------
  *ADC_DR_DATA* | 0  | 16 | 16 | rw | Converted data
 -------------+----+----+----+----+----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |ADC|
 Register:    *ADC_CCR*
 Address:     $40012708
 Reset:       $00000000
 Description: common configuration register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=274
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------------------
  *ADC_CCR_VBATEN* | 24 | 1  | 25 | rw | VBAT enable
    *ADC_CCR_TSEN* | 23 | 1  | 24 | rw | Temperature sensor enable
  *ADC_CCR_VREFEN* | 22 | 1  | 23 | rw | Temperature sensor and VREFINT enable
 ----------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_CR1*
 Address:     $40013800
 Reset:       $0000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=744
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
      *USART1_CR1_UE* | 0  | 1  | 1  | rw | USART enable
    *USART1_CR1_UESM* | 1  | 1  | 2  | rw | USART enable in Stop mode
      *USART1_CR1_RE* | 2  | 1  | 3  | rw | Receiver enable
      *USART1_CR1_TE* | 3  | 1  | 4  | rw | Transmitter enable
  *USART1_CR1_IDLEIE* | 4  | 1  | 5  | rw | IDLE interrupt enable
  *USART1_CR1_RXNEIE* | 5  | 1  | 6  | rw | RXNE interrupt enable
    *USART1_CR1_TCIE* | 6  | 1  | 7  | rw | Transmission complete interrupt enable
   *USART1_CR1_TXEIE* | 7  | 1  | 8  | rw | interrupt enable
    *USART1_CR1_PEIE* | 8  | 1  | 9  | rw | PE interrupt enable
      *USART1_CR1_PS* | 9  | 1  | 10 | rw | Parity selection
     *USART1_CR1_PCE* | 10 | 1  | 11 | rw | Parity control enable
    *USART1_CR1_WAKE* | 11 | 1  | 12 | rw | Receiver wakeup method
       *USART1_CR1_M* | 12 | 1  | 13 | rw | Word length
     *USART1_CR1_MME* | 13 | 1  | 14 | rw | Mute mode enable
    *USART1_CR1_CMIE* | 14 | 1  | 15 | rw | Character match interrupt enable
   *USART1_CR1_OVER8* | 15 | 1  | 16 | rw | Oversampling mode
    *USART1_CR1_DEDT* | 16 | 5  | 21 | rw | Driver Enable deassertion time
    *USART1_CR1_DEAT* | 21 | 5  | 26 | rw | Driver Enable assertion time
   *USART1_CR1_RTOIE* | 26 | 1  | 27 | rw | Receiver timeout interrupt enable
   *USART1_CR1_EOBIE* | 27 | 1  | 28 | rw | End of Block interrupt enable
      *USART1_CR1_M1* | 28 | 1  | 29 | rw | Word length
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_CR2*
 Address:     $40013804
 Reset:       $0000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=747
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------------------------
      *USART1_CR2_ADD4* | 28 | 4  | 32 | rw | Address of the USART node
      *USART1_CR2_ADD0* | 24 | 4  | 28 | rw | Address of the USART node
     *USART1_CR2_RTOEN* | 23 | 1  | 24 | rw | Receiver timeout enable
    *USART1_CR2_ABRMOD* | 21 | 2  | 23 | rw | Auto baud rate mode
     *USART1_CR2_ABREN* | 20 | 1  | 21 | rw | Auto baud rate enable
  *USART1_CR2_MSBFIRST* | 19 | 1  | 20 | rw | Most significant bit first
   *USART1_CR2_DATAINV* | 18 | 1  | 19 | rw | Binary data inversion
     *USART1_CR2_TXINV* | 17 | 1  | 18 | rw | TX pin active level inversion
     *USART1_CR2_RXINV* | 16 | 1  | 17 | rw | RX pin active level inversion
      *USART1_CR2_SWAP* | 15 | 1  | 16 | rw | Swap TX/RX pins
     *USART1_CR2_LINEN* | 14 | 1  | 15 | rw | LIN mode enable
      *USART1_CR2_STOP* | 12 | 2  | 14 | rw | STOP bits
     *USART1_CR2_CLKEN* | 11 | 1  | 12 | rw | Clock enable
      *USART1_CR2_CPOL* | 10 | 1  | 11 | rw | Clock polarity
      *USART1_CR2_CPHA* | 9  | 1  | 10 | rw | Clock phase
      *USART1_CR2_LBCL* | 8  | 1  | 9  | rw | Last bit clock pulse
     *USART1_CR2_LBDIE* | 6  | 1  | 7  | rw | LIN break detection interrupt enable
      *USART1_CR2_LBDL* | 5  | 1  | 6  | rw | LIN break detection length
     *USART1_CR2_ADDM7* | 4  | 1  | 5  | rw | 7-bit Address Detection/4-bit Address Detection
 ---------------------+----+----+----+----+-------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_CR3*
 Address:     $40013808
 Reset:       $0000
 Description: Control register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=751
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------------------------
    *USART1_CR3_WUFIE* | 22 | 1  | 23 | rw | Wakeup from Stop mode interrupt enable
      *USART1_CR3_WUS* | 20 | 2  | 22 | rw | Wakeup from Stop mode interrupt flag selection
  *USART1_CR3_SCARCNT* | 17 | 3  | 20 | rw | Smartcard auto-retry count
      *USART1_CR3_DEP* | 15 | 1  | 16 | rw | Driver enable polarity selection
      *USART1_CR3_DEM* | 14 | 1  | 15 | rw | Driver enable mode
     *USART1_CR3_DDRE* | 13 | 1  | 14 | rw | DMA Disable on Reception Error
   *USART1_CR3_OVRDIS* | 12 | 1  | 13 | rw | Overrun Disable
   *USART1_CR3_ONEBIT* | 11 | 1  | 12 | rw | One sample bit method enable
    *USART1_CR3_CTSIE* | 10 | 1  | 11 | rw | CTS interrupt enable
     *USART1_CR3_CTSE* | 9  | 1  | 10 | rw | CTS enable
     *USART1_CR3_RTSE* | 8  | 1  | 9  | rw | RTS enable
     *USART1_CR3_DMAT* | 7  | 1  | 8  | rw | DMA enable transmitter
     *USART1_CR3_DMAR* | 6  | 1  | 7  | rw | DMA enable receiver
     *USART1_CR3_SCEN* | 5  | 1  | 6  | rw | Smartcard mode enable
     *USART1_CR3_NACK* | 4  | 1  | 5  | rw | Smartcard NACK enable
    *USART1_CR3_HDSEL* | 3  | 1  | 4  | rw | Half-duplex selection
     *USART1_CR3_IRLP* | 2  | 1  | 3  | rw | IrDA low-power
     *USART1_CR3_IREN* | 1  | 1  | 2  | rw | IrDA mode enable
      *USART1_CR3_EIE* | 0  | 1  | 1  | rw | Error interrupt enable
 --------------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_BRR*
 Address:     $4001380C
 Reset:       $0000
 Description: Baud rate register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+----------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+----------------------
  *USART1_BRR_DIV_Mantissa* | 4  | 12 | 16 | rw | mantissa of USARTDIV
  *USART1_BRR_DIV_Fraction* | 0  | 4  | 4  | rw | fraction of USARTDIV
 -------------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_GTPR*
 Address:     $40013810
 Reset:       $0000
 Description: Guard time and prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------
   *USART1_GTPR_GT* | 8  | 8  | 16 | rw | Guard time value
  *USART1_GTPR_PSC* | 0  | 8  | 8  | rw | Prescaler value
 -----------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_RTOR*
 Address:     $40013814
 Reset:       $0000
 Description: Receiver timeout register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=756
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *USART1_RTOR_BLEN* | 24 | 8  | 32 | rw | Block Length
   *USART1_RTOR_RTO* | 0  | 24 | 24 | rw | Receiver timeout value
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_RQR*
 Address:     $40013818
 Reset:       $0000
 Description: Request register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=757
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------
  *USART1_RQR_TXFRQ* | 4  | 1  | 5  | rw | Transmit data flush request
  *USART1_RQR_RXFRQ* | 3  | 1  | 4  | rw | Receive data flush request
   *USART1_RQR_MMRQ* | 2  | 1  | 3  | rw | Mute mode request
  *USART1_RQR_SBKRQ* | 1  | 1  | 2  | rw | Send break request
  *USART1_RQR_ABRRQ* | 0  | 1  | 1  | rw | Auto baud rate request
 ------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_ISR*
 Address:     $4001381C
 Reset:       $00C0
 Description: Interrupt &amp; status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=758
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
  *USART1_ISR_REACK* | 22 | 1  | 23 | rw | Receive enable acknowledge flag
  *USART1_ISR_TEACK* | 21 | 1  | 22 | rw | Transmit enable acknowledge flag
    *USART1_ISR_WUF* | 20 | 1  | 21 | rw | Wakeup from Stop mode flag
    *USART1_ISR_RWU* | 19 | 1  | 20 | rw | Receiver wakeup from Mute mode
   *USART1_ISR_SBKF* | 18 | 1  | 19 | rw | Send break flag
    *USART1_ISR_CMF* | 17 | 1  | 18 | rw | character match flag
   *USART1_ISR_BUSY* | 16 | 1  | 17 | rw | Busy flag
   *USART1_ISR_ABRF* | 15 | 1  | 16 | rw | Auto baud rate flag
   *USART1_ISR_ABRE* | 14 | 1  | 15 | rw | Auto baud rate error
   *USART1_ISR_EOBF* | 12 | 1  | 13 | rw | End of block flag
   *USART1_ISR_RTOF* | 11 | 1  | 12 | rw | Receiver timeout
    *USART1_ISR_CTS* | 10 | 1  | 11 | rw | CTS flag
  *USART1_ISR_CTSIF* | 9  | 1  | 10 | rw | CTS interrupt flag
   *USART1_ISR_LBDF* | 8  | 1  | 9  | rw | LIN break detection flag
    *USART1_ISR_TXE* | 7  | 1  | 8  | rw | Transmit data register empty
     *USART1_ISR_TC* | 6  | 1  | 7  | rw | Transmission complete
   *USART1_ISR_RXNE* | 5  | 1  | 6  | rw | Read data register not empty
   *USART1_ISR_IDLE* | 4  | 1  | 5  | rw | Idle line detected
    *USART1_ISR_ORE* | 3  | 1  | 4  | rw | Overrun error
     *USART1_ISR_NF* | 2  | 1  | 3  | rw | Noise detected flag
     *USART1_ISR_FE* | 1  | 1  | 2  | rw | Framing error
     *USART1_ISR_PE* | 0  | 1  | 1  | rw | Parity error
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_ICR*
 Address:     $40013820
 Reset:       $0000
 Description: Interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=763
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
    *USART1_ICR_WUCF* | 20 | 1  | 21 | rw | Wakeup from Stop mode clear flag
    *USART1_ICR_CMCF* | 17 | 1  | 18 | rw | Character match clear flag
   *USART1_ICR_EOBCF* | 12 | 1  | 13 | rw | End of timeout clear flag
   *USART1_ICR_RTOCF* | 11 | 1  | 12 | rw | Receiver timeout clear flag
   *USART1_ICR_CTSCF* | 9  | 1  | 10 | rw | CTS clear flag
   *USART1_ICR_LBDCF* | 8  | 1  | 9  | rw | LIN break detection clear flag
    *USART1_ICR_TCCF* | 6  | 1  | 7  | rw | Transmission complete clear flag
  *USART1_ICR_IDLECF* | 4  | 1  | 5  | rw | Idle line detected clear flag
   *USART1_ICR_ORECF* | 3  | 1  | 4  | rw | Overrun error clear flag
     *USART1_ICR_NCF* | 2  | 1  | 3  | rw | Noise detected clear flag
    *USART1_ICR_FECF* | 1  | 1  | 2  | rw | Framing error clear flag
    *USART1_ICR_PECF* | 0  | 1  | 1  | rw | Parity error clear flag
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_RDR*
 Address:     $40013824
 Reset:       $0000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
  *USART1_RDR_RDR* | 0  | 9  | 9  | rw | Receive data value
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART1|
 Register:    *USART1_TDR*
 Address:     $40013828
 Reset:       $0000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------
  *USART1_TDR_TDR* | 0  | 9  | 9  | rw | Transmit data value
 ----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_CR1*
 Address:     $40004400
 Reset:       $0000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=744
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
      *USART2_CR1_UE* | 0  | 1  | 1  | rw | USART enable
    *USART2_CR1_UESM* | 1  | 1  | 2  | rw | USART enable in Stop mode
      *USART2_CR1_RE* | 2  | 1  | 3  | rw | Receiver enable
      *USART2_CR1_TE* | 3  | 1  | 4  | rw | Transmitter enable
  *USART2_CR1_IDLEIE* | 4  | 1  | 5  | rw | IDLE interrupt enable
  *USART2_CR1_RXNEIE* | 5  | 1  | 6  | rw | RXNE interrupt enable
    *USART2_CR1_TCIE* | 6  | 1  | 7  | rw | Transmission complete interrupt enable
   *USART2_CR1_TXEIE* | 7  | 1  | 8  | rw | interrupt enable
    *USART2_CR1_PEIE* | 8  | 1  | 9  | rw | PE interrupt enable
      *USART2_CR1_PS* | 9  | 1  | 10 | rw | Parity selection
     *USART2_CR1_PCE* | 10 | 1  | 11 | rw | Parity control enable
    *USART2_CR1_WAKE* | 11 | 1  | 12 | rw | Receiver wakeup method
       *USART2_CR1_M* | 12 | 1  | 13 | rw | Word length
     *USART2_CR1_MME* | 13 | 1  | 14 | rw | Mute mode enable
    *USART2_CR1_CMIE* | 14 | 1  | 15 | rw | Character match interrupt enable
   *USART2_CR1_OVER8* | 15 | 1  | 16 | rw | Oversampling mode
    *USART2_CR1_DEDT* | 16 | 5  | 21 | rw | Driver Enable deassertion time
    *USART2_CR1_DEAT* | 21 | 5  | 26 | rw | Driver Enable assertion time
   *USART2_CR1_RTOIE* | 26 | 1  | 27 | rw | Receiver timeout interrupt enable
   *USART2_CR1_EOBIE* | 27 | 1  | 28 | rw | End of Block interrupt enable
      *USART2_CR1_M1* | 28 | 1  | 29 | rw | Word length
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_CR2*
 Address:     $40004404
 Reset:       $0000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=747
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------------------------
      *USART2_CR2_ADD4* | 28 | 4  | 32 | rw | Address of the USART node
      *USART2_CR2_ADD0* | 24 | 4  | 28 | rw | Address of the USART node
     *USART2_CR2_RTOEN* | 23 | 1  | 24 | rw | Receiver timeout enable
    *USART2_CR2_ABRMOD* | 21 | 2  | 23 | rw | Auto baud rate mode
     *USART2_CR2_ABREN* | 20 | 1  | 21 | rw | Auto baud rate enable
  *USART2_CR2_MSBFIRST* | 19 | 1  | 20 | rw | Most significant bit first
   *USART2_CR2_DATAINV* | 18 | 1  | 19 | rw | Binary data inversion
     *USART2_CR2_TXINV* | 17 | 1  | 18 | rw | TX pin active level inversion
     *USART2_CR2_RXINV* | 16 | 1  | 17 | rw | RX pin active level inversion
      *USART2_CR2_SWAP* | 15 | 1  | 16 | rw | Swap TX/RX pins
     *USART2_CR2_LINEN* | 14 | 1  | 15 | rw | LIN mode enable
      *USART2_CR2_STOP* | 12 | 2  | 14 | rw | STOP bits
     *USART2_CR2_CLKEN* | 11 | 1  | 12 | rw | Clock enable
      *USART2_CR2_CPOL* | 10 | 1  | 11 | rw | Clock polarity
      *USART2_CR2_CPHA* | 9  | 1  | 10 | rw | Clock phase
      *USART2_CR2_LBCL* | 8  | 1  | 9  | rw | Last bit clock pulse
     *USART2_CR2_LBDIE* | 6  | 1  | 7  | rw | LIN break detection interrupt enable
      *USART2_CR2_LBDL* | 5  | 1  | 6  | rw | LIN break detection length
     *USART2_CR2_ADDM7* | 4  | 1  | 5  | rw | 7-bit Address Detection/4-bit Address Detection
 ---------------------+----+----+----+----+-------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_CR3*
 Address:     $40004408
 Reset:       $0000
 Description: Control register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=751
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------------------------
    *USART2_CR3_WUFIE* | 22 | 1  | 23 | rw | Wakeup from Stop mode interrupt enable
      *USART2_CR3_WUS* | 20 | 2  | 22 | rw | Wakeup from Stop mode interrupt flag selection
  *USART2_CR3_SCARCNT* | 17 | 3  | 20 | rw | Smartcard auto-retry count
      *USART2_CR3_DEP* | 15 | 1  | 16 | rw | Driver enable polarity selection
      *USART2_CR3_DEM* | 14 | 1  | 15 | rw | Driver enable mode
     *USART2_CR3_DDRE* | 13 | 1  | 14 | rw | DMA Disable on Reception Error
   *USART2_CR3_OVRDIS* | 12 | 1  | 13 | rw | Overrun Disable
   *USART2_CR3_ONEBIT* | 11 | 1  | 12 | rw | One sample bit method enable
    *USART2_CR3_CTSIE* | 10 | 1  | 11 | rw | CTS interrupt enable
     *USART2_CR3_CTSE* | 9  | 1  | 10 | rw | CTS enable
     *USART2_CR3_RTSE* | 8  | 1  | 9  | rw | RTS enable
     *USART2_CR3_DMAT* | 7  | 1  | 8  | rw | DMA enable transmitter
     *USART2_CR3_DMAR* | 6  | 1  | 7  | rw | DMA enable receiver
     *USART2_CR3_SCEN* | 5  | 1  | 6  | rw | Smartcard mode enable
     *USART2_CR3_NACK* | 4  | 1  | 5  | rw | Smartcard NACK enable
    *USART2_CR3_HDSEL* | 3  | 1  | 4  | rw | Half-duplex selection
     *USART2_CR3_IRLP* | 2  | 1  | 3  | rw | IrDA low-power
     *USART2_CR3_IREN* | 1  | 1  | 2  | rw | IrDA mode enable
      *USART2_CR3_EIE* | 0  | 1  | 1  | rw | Error interrupt enable
 --------------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_BRR*
 Address:     $4000440C
 Reset:       $0000
 Description: Baud rate register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+----------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+----------------------
  *USART2_BRR_DIV_Mantissa* | 4  | 12 | 16 | rw | mantissa of USARTDIV
  *USART2_BRR_DIV_Fraction* | 0  | 4  | 4  | rw | fraction of USARTDIV
 -------------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_GTPR*
 Address:     $40004410
 Reset:       $0000
 Description: Guard time and prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------
   *USART2_GTPR_GT* | 8  | 8  | 16 | rw | Guard time value
  *USART2_GTPR_PSC* | 0  | 8  | 8  | rw | Prescaler value
 -----------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_RTOR*
 Address:     $40004414
 Reset:       $0000
 Description: Receiver timeout register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=756
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *USART2_RTOR_BLEN* | 24 | 8  | 32 | rw | Block Length
   *USART2_RTOR_RTO* | 0  | 24 | 24 | rw | Receiver timeout value
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_RQR*
 Address:     $40004418
 Reset:       $0000
 Description: Request register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=757
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------
  *USART2_RQR_TXFRQ* | 4  | 1  | 5  | rw | Transmit data flush request
  *USART2_RQR_RXFRQ* | 3  | 1  | 4  | rw | Receive data flush request
   *USART2_RQR_MMRQ* | 2  | 1  | 3  | rw | Mute mode request
  *USART2_RQR_SBKRQ* | 1  | 1  | 2  | rw | Send break request
  *USART2_RQR_ABRRQ* | 0  | 1  | 1  | rw | Auto baud rate request
 ------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_ISR*
 Address:     $4000441C
 Reset:       $00C0
 Description: Interrupt &amp; status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=758
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
  *USART2_ISR_REACK* | 22 | 1  | 23 | rw | Receive enable acknowledge flag
  *USART2_ISR_TEACK* | 21 | 1  | 22 | rw | Transmit enable acknowledge flag
    *USART2_ISR_WUF* | 20 | 1  | 21 | rw | Wakeup from Stop mode flag
    *USART2_ISR_RWU* | 19 | 1  | 20 | rw | Receiver wakeup from Mute mode
   *USART2_ISR_SBKF* | 18 | 1  | 19 | rw | Send break flag
    *USART2_ISR_CMF* | 17 | 1  | 18 | rw | character match flag
   *USART2_ISR_BUSY* | 16 | 1  | 17 | rw | Busy flag
   *USART2_ISR_ABRF* | 15 | 1  | 16 | rw | Auto baud rate flag
   *USART2_ISR_ABRE* | 14 | 1  | 15 | rw | Auto baud rate error
   *USART2_ISR_EOBF* | 12 | 1  | 13 | rw | End of block flag
   *USART2_ISR_RTOF* | 11 | 1  | 12 | rw | Receiver timeout
    *USART2_ISR_CTS* | 10 | 1  | 11 | rw | CTS flag
  *USART2_ISR_CTSIF* | 9  | 1  | 10 | rw | CTS interrupt flag
   *USART2_ISR_LBDF* | 8  | 1  | 9  | rw | LIN break detection flag
    *USART2_ISR_TXE* | 7  | 1  | 8  | rw | Transmit data register empty
     *USART2_ISR_TC* | 6  | 1  | 7  | rw | Transmission complete
   *USART2_ISR_RXNE* | 5  | 1  | 6  | rw | Read data register not empty
   *USART2_ISR_IDLE* | 4  | 1  | 5  | rw | Idle line detected
    *USART2_ISR_ORE* | 3  | 1  | 4  | rw | Overrun error
     *USART2_ISR_NF* | 2  | 1  | 3  | rw | Noise detected flag
     *USART2_ISR_FE* | 1  | 1  | 2  | rw | Framing error
     *USART2_ISR_PE* | 0  | 1  | 1  | rw | Parity error
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_ICR*
 Address:     $40004420
 Reset:       $0000
 Description: Interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=763
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
    *USART2_ICR_WUCF* | 20 | 1  | 21 | rw | Wakeup from Stop mode clear flag
    *USART2_ICR_CMCF* | 17 | 1  | 18 | rw | Character match clear flag
   *USART2_ICR_EOBCF* | 12 | 1  | 13 | rw | End of timeout clear flag
   *USART2_ICR_RTOCF* | 11 | 1  | 12 | rw | Receiver timeout clear flag
   *USART2_ICR_CTSCF* | 9  | 1  | 10 | rw | CTS clear flag
   *USART2_ICR_LBDCF* | 8  | 1  | 9  | rw | LIN break detection clear flag
    *USART2_ICR_TCCF* | 6  | 1  | 7  | rw | Transmission complete clear flag
  *USART2_ICR_IDLECF* | 4  | 1  | 5  | rw | Idle line detected clear flag
   *USART2_ICR_ORECF* | 3  | 1  | 4  | rw | Overrun error clear flag
     *USART2_ICR_NCF* | 2  | 1  | 3  | rw | Noise detected clear flag
    *USART2_ICR_FECF* | 1  | 1  | 2  | rw | Framing error clear flag
    *USART2_ICR_PECF* | 0  | 1  | 1  | rw | Parity error clear flag
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_RDR*
 Address:     $40004424
 Reset:       $0000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
  *USART2_RDR_RDR* | 0  | 9  | 9  | rw | Receive data value
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART2|
 Register:    *USART2_TDR*
 Address:     $40004428
 Reset:       $0000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------
  *USART2_TDR_TDR* | 0  | 9  | 9  | rw | Transmit data value
 ----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_CR1*
 Address:     $40004800
 Reset:       $0000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=744
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
      *USART3_CR1_UE* | 0  | 1  | 1  | rw | USART enable
    *USART3_CR1_UESM* | 1  | 1  | 2  | rw | USART enable in Stop mode
      *USART3_CR1_RE* | 2  | 1  | 3  | rw | Receiver enable
      *USART3_CR1_TE* | 3  | 1  | 4  | rw | Transmitter enable
  *USART3_CR1_IDLEIE* | 4  | 1  | 5  | rw | IDLE interrupt enable
  *USART3_CR1_RXNEIE* | 5  | 1  | 6  | rw | RXNE interrupt enable
    *USART3_CR1_TCIE* | 6  | 1  | 7  | rw | Transmission complete interrupt enable
   *USART3_CR1_TXEIE* | 7  | 1  | 8  | rw | interrupt enable
    *USART3_CR1_PEIE* | 8  | 1  | 9  | rw | PE interrupt enable
      *USART3_CR1_PS* | 9  | 1  | 10 | rw | Parity selection
     *USART3_CR1_PCE* | 10 | 1  | 11 | rw | Parity control enable
    *USART3_CR1_WAKE* | 11 | 1  | 12 | rw | Receiver wakeup method
       *USART3_CR1_M* | 12 | 1  | 13 | rw | Word length
     *USART3_CR1_MME* | 13 | 1  | 14 | rw | Mute mode enable
    *USART3_CR1_CMIE* | 14 | 1  | 15 | rw | Character match interrupt enable
   *USART3_CR1_OVER8* | 15 | 1  | 16 | rw | Oversampling mode
    *USART3_CR1_DEDT* | 16 | 5  | 21 | rw | Driver Enable deassertion time
    *USART3_CR1_DEAT* | 21 | 5  | 26 | rw | Driver Enable assertion time
   *USART3_CR1_RTOIE* | 26 | 1  | 27 | rw | Receiver timeout interrupt enable
   *USART3_CR1_EOBIE* | 27 | 1  | 28 | rw | End of Block interrupt enable
      *USART3_CR1_M1* | 28 | 1  | 29 | rw | Word length
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_CR2*
 Address:     $40004804
 Reset:       $0000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=747
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------------------------
      *USART3_CR2_ADD4* | 28 | 4  | 32 | rw | Address of the USART node
      *USART3_CR2_ADD0* | 24 | 4  | 28 | rw | Address of the USART node
     *USART3_CR2_RTOEN* | 23 | 1  | 24 | rw | Receiver timeout enable
    *USART3_CR2_ABRMOD* | 21 | 2  | 23 | rw | Auto baud rate mode
     *USART3_CR2_ABREN* | 20 | 1  | 21 | rw | Auto baud rate enable
  *USART3_CR2_MSBFIRST* | 19 | 1  | 20 | rw | Most significant bit first
   *USART3_CR2_DATAINV* | 18 | 1  | 19 | rw | Binary data inversion
     *USART3_CR2_TXINV* | 17 | 1  | 18 | rw | TX pin active level inversion
     *USART3_CR2_RXINV* | 16 | 1  | 17 | rw | RX pin active level inversion
      *USART3_CR2_SWAP* | 15 | 1  | 16 | rw | Swap TX/RX pins
     *USART3_CR2_LINEN* | 14 | 1  | 15 | rw | LIN mode enable
      *USART3_CR2_STOP* | 12 | 2  | 14 | rw | STOP bits
     *USART3_CR2_CLKEN* | 11 | 1  | 12 | rw | Clock enable
      *USART3_CR2_CPOL* | 10 | 1  | 11 | rw | Clock polarity
      *USART3_CR2_CPHA* | 9  | 1  | 10 | rw | Clock phase
      *USART3_CR2_LBCL* | 8  | 1  | 9  | rw | Last bit clock pulse
     *USART3_CR2_LBDIE* | 6  | 1  | 7  | rw | LIN break detection interrupt enable
      *USART3_CR2_LBDL* | 5  | 1  | 6  | rw | LIN break detection length
     *USART3_CR2_ADDM7* | 4  | 1  | 5  | rw | 7-bit Address Detection/4-bit Address Detection
 ---------------------+----+----+----+----+-------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_CR3*
 Address:     $40004808
 Reset:       $0000
 Description: Control register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=751
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------------------------
    *USART3_CR3_WUFIE* | 22 | 1  | 23 | rw | Wakeup from Stop mode interrupt enable
      *USART3_CR3_WUS* | 20 | 2  | 22 | rw | Wakeup from Stop mode interrupt flag selection
  *USART3_CR3_SCARCNT* | 17 | 3  | 20 | rw | Smartcard auto-retry count
      *USART3_CR3_DEP* | 15 | 1  | 16 | rw | Driver enable polarity selection
      *USART3_CR3_DEM* | 14 | 1  | 15 | rw | Driver enable mode
     *USART3_CR3_DDRE* | 13 | 1  | 14 | rw | DMA Disable on Reception Error
   *USART3_CR3_OVRDIS* | 12 | 1  | 13 | rw | Overrun Disable
   *USART3_CR3_ONEBIT* | 11 | 1  | 12 | rw | One sample bit method enable
    *USART3_CR3_CTSIE* | 10 | 1  | 11 | rw | CTS interrupt enable
     *USART3_CR3_CTSE* | 9  | 1  | 10 | rw | CTS enable
     *USART3_CR3_RTSE* | 8  | 1  | 9  | rw | RTS enable
     *USART3_CR3_DMAT* | 7  | 1  | 8  | rw | DMA enable transmitter
     *USART3_CR3_DMAR* | 6  | 1  | 7  | rw | DMA enable receiver
     *USART3_CR3_SCEN* | 5  | 1  | 6  | rw | Smartcard mode enable
     *USART3_CR3_NACK* | 4  | 1  | 5  | rw | Smartcard NACK enable
    *USART3_CR3_HDSEL* | 3  | 1  | 4  | rw | Half-duplex selection
     *USART3_CR3_IRLP* | 2  | 1  | 3  | rw | IrDA low-power
     *USART3_CR3_IREN* | 1  | 1  | 2  | rw | IrDA mode enable
      *USART3_CR3_EIE* | 0  | 1  | 1  | rw | Error interrupt enable
 --------------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_BRR*
 Address:     $4000480C
 Reset:       $0000
 Description: Baud rate register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+----------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+----------------------
  *USART3_BRR_DIV_Mantissa* | 4  | 12 | 16 | rw | mantissa of USARTDIV
  *USART3_BRR_DIV_Fraction* | 0  | 4  | 4  | rw | fraction of USARTDIV
 -------------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_GTPR*
 Address:     $40004810
 Reset:       $0000
 Description: Guard time and prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------
   *USART3_GTPR_GT* | 8  | 8  | 16 | rw | Guard time value
  *USART3_GTPR_PSC* | 0  | 8  | 8  | rw | Prescaler value
 -----------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_RTOR*
 Address:     $40004814
 Reset:       $0000
 Description: Receiver timeout register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=756
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *USART3_RTOR_BLEN* | 24 | 8  | 32 | rw | Block Length
   *USART3_RTOR_RTO* | 0  | 24 | 24 | rw | Receiver timeout value
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_RQR*
 Address:     $40004818
 Reset:       $0000
 Description: Request register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=757
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------
  *USART3_RQR_TXFRQ* | 4  | 1  | 5  | rw | Transmit data flush request
  *USART3_RQR_RXFRQ* | 3  | 1  | 4  | rw | Receive data flush request
   *USART3_RQR_MMRQ* | 2  | 1  | 3  | rw | Mute mode request
  *USART3_RQR_SBKRQ* | 1  | 1  | 2  | rw | Send break request
  *USART3_RQR_ABRRQ* | 0  | 1  | 1  | rw | Auto baud rate request
 ------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_ISR*
 Address:     $4000481C
 Reset:       $00C0
 Description: Interrupt &amp; status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=758
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
  *USART3_ISR_REACK* | 22 | 1  | 23 | rw | Receive enable acknowledge flag
  *USART3_ISR_TEACK* | 21 | 1  | 22 | rw | Transmit enable acknowledge flag
    *USART3_ISR_WUF* | 20 | 1  | 21 | rw | Wakeup from Stop mode flag
    *USART3_ISR_RWU* | 19 | 1  | 20 | rw | Receiver wakeup from Mute mode
   *USART3_ISR_SBKF* | 18 | 1  | 19 | rw | Send break flag
    *USART3_ISR_CMF* | 17 | 1  | 18 | rw | character match flag
   *USART3_ISR_BUSY* | 16 | 1  | 17 | rw | Busy flag
   *USART3_ISR_ABRF* | 15 | 1  | 16 | rw | Auto baud rate flag
   *USART3_ISR_ABRE* | 14 | 1  | 15 | rw | Auto baud rate error
   *USART3_ISR_EOBF* | 12 | 1  | 13 | rw | End of block flag
   *USART3_ISR_RTOF* | 11 | 1  | 12 | rw | Receiver timeout
    *USART3_ISR_CTS* | 10 | 1  | 11 | rw | CTS flag
  *USART3_ISR_CTSIF* | 9  | 1  | 10 | rw | CTS interrupt flag
   *USART3_ISR_LBDF* | 8  | 1  | 9  | rw | LIN break detection flag
    *USART3_ISR_TXE* | 7  | 1  | 8  | rw | Transmit data register empty
     *USART3_ISR_TC* | 6  | 1  | 7  | rw | Transmission complete
   *USART3_ISR_RXNE* | 5  | 1  | 6  | rw | Read data register not empty
   *USART3_ISR_IDLE* | 4  | 1  | 5  | rw | Idle line detected
    *USART3_ISR_ORE* | 3  | 1  | 4  | rw | Overrun error
     *USART3_ISR_NF* | 2  | 1  | 3  | rw | Noise detected flag
     *USART3_ISR_FE* | 1  | 1  | 2  | rw | Framing error
     *USART3_ISR_PE* | 0  | 1  | 1  | rw | Parity error
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_ICR*
 Address:     $40004820
 Reset:       $0000
 Description: Interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=763
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
    *USART3_ICR_WUCF* | 20 | 1  | 21 | rw | Wakeup from Stop mode clear flag
    *USART3_ICR_CMCF* | 17 | 1  | 18 | rw | Character match clear flag
   *USART3_ICR_EOBCF* | 12 | 1  | 13 | rw | End of timeout clear flag
   *USART3_ICR_RTOCF* | 11 | 1  | 12 | rw | Receiver timeout clear flag
   *USART3_ICR_CTSCF* | 9  | 1  | 10 | rw | CTS clear flag
   *USART3_ICR_LBDCF* | 8  | 1  | 9  | rw | LIN break detection clear flag
    *USART3_ICR_TCCF* | 6  | 1  | 7  | rw | Transmission complete clear flag
  *USART3_ICR_IDLECF* | 4  | 1  | 5  | rw | Idle line detected clear flag
   *USART3_ICR_ORECF* | 3  | 1  | 4  | rw | Overrun error clear flag
     *USART3_ICR_NCF* | 2  | 1  | 3  | rw | Noise detected clear flag
    *USART3_ICR_FECF* | 1  | 1  | 2  | rw | Framing error clear flag
    *USART3_ICR_PECF* | 0  | 1  | 1  | rw | Parity error clear flag
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_RDR*
 Address:     $40004824
 Reset:       $0000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
  *USART3_RDR_RDR* | 0  | 9  | 9  | rw | Receive data value
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART3|
 Register:    *USART3_TDR*
 Address:     $40004828
 Reset:       $0000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------
  *USART3_TDR_TDR* | 0  | 9  | 9  | rw | Transmit data value
 ----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_CR1*
 Address:     $40004C00
 Reset:       $0000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=744
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
      *USART4_CR1_UE* | 0  | 1  | 1  | rw | USART enable
    *USART4_CR1_UESM* | 1  | 1  | 2  | rw | USART enable in Stop mode
      *USART4_CR1_RE* | 2  | 1  | 3  | rw | Receiver enable
      *USART4_CR1_TE* | 3  | 1  | 4  | rw | Transmitter enable
  *USART4_CR1_IDLEIE* | 4  | 1  | 5  | rw | IDLE interrupt enable
  *USART4_CR1_RXNEIE* | 5  | 1  | 6  | rw | RXNE interrupt enable
    *USART4_CR1_TCIE* | 6  | 1  | 7  | rw | Transmission complete interrupt enable
   *USART4_CR1_TXEIE* | 7  | 1  | 8  | rw | interrupt enable
    *USART4_CR1_PEIE* | 8  | 1  | 9  | rw | PE interrupt enable
      *USART4_CR1_PS* | 9  | 1  | 10 | rw | Parity selection
     *USART4_CR1_PCE* | 10 | 1  | 11 | rw | Parity control enable
    *USART4_CR1_WAKE* | 11 | 1  | 12 | rw | Receiver wakeup method
       *USART4_CR1_M* | 12 | 1  | 13 | rw | Word length
     *USART4_CR1_MME* | 13 | 1  | 14 | rw | Mute mode enable
    *USART4_CR1_CMIE* | 14 | 1  | 15 | rw | Character match interrupt enable
   *USART4_CR1_OVER8* | 15 | 1  | 16 | rw | Oversampling mode
    *USART4_CR1_DEDT* | 16 | 5  | 21 | rw | Driver Enable deassertion time
    *USART4_CR1_DEAT* | 21 | 5  | 26 | rw | Driver Enable assertion time
   *USART4_CR1_RTOIE* | 26 | 1  | 27 | rw | Receiver timeout interrupt enable
   *USART4_CR1_EOBIE* | 27 | 1  | 28 | rw | End of Block interrupt enable
      *USART4_CR1_M1* | 28 | 1  | 29 | rw | Word length
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_CR2*
 Address:     $40004C04
 Reset:       $0000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=747
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------------------------
      *USART4_CR2_ADD4* | 28 | 4  | 32 | rw | Address of the USART node
      *USART4_CR2_ADD0* | 24 | 4  | 28 | rw | Address of the USART node
     *USART4_CR2_RTOEN* | 23 | 1  | 24 | rw | Receiver timeout enable
    *USART4_CR2_ABRMOD* | 21 | 2  | 23 | rw | Auto baud rate mode
     *USART4_CR2_ABREN* | 20 | 1  | 21 | rw | Auto baud rate enable
  *USART4_CR2_MSBFIRST* | 19 | 1  | 20 | rw | Most significant bit first
   *USART4_CR2_DATAINV* | 18 | 1  | 19 | rw | Binary data inversion
     *USART4_CR2_TXINV* | 17 | 1  | 18 | rw | TX pin active level inversion
     *USART4_CR2_RXINV* | 16 | 1  | 17 | rw | RX pin active level inversion
      *USART4_CR2_SWAP* | 15 | 1  | 16 | rw | Swap TX/RX pins
     *USART4_CR2_LINEN* | 14 | 1  | 15 | rw | LIN mode enable
      *USART4_CR2_STOP* | 12 | 2  | 14 | rw | STOP bits
     *USART4_CR2_CLKEN* | 11 | 1  | 12 | rw | Clock enable
      *USART4_CR2_CPOL* | 10 | 1  | 11 | rw | Clock polarity
      *USART4_CR2_CPHA* | 9  | 1  | 10 | rw | Clock phase
      *USART4_CR2_LBCL* | 8  | 1  | 9  | rw | Last bit clock pulse
     *USART4_CR2_LBDIE* | 6  | 1  | 7  | rw | LIN break detection interrupt enable
      *USART4_CR2_LBDL* | 5  | 1  | 6  | rw | LIN break detection length
     *USART4_CR2_ADDM7* | 4  | 1  | 5  | rw | 7-bit Address Detection/4-bit Address Detection
 ---------------------+----+----+----+----+-------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_CR3*
 Address:     $40004C08
 Reset:       $0000
 Description: Control register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=751
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------------------------
    *USART4_CR3_WUFIE* | 22 | 1  | 23 | rw | Wakeup from Stop mode interrupt enable
      *USART4_CR3_WUS* | 20 | 2  | 22 | rw | Wakeup from Stop mode interrupt flag selection
  *USART4_CR3_SCARCNT* | 17 | 3  | 20 | rw | Smartcard auto-retry count
      *USART4_CR3_DEP* | 15 | 1  | 16 | rw | Driver enable polarity selection
      *USART4_CR3_DEM* | 14 | 1  | 15 | rw | Driver enable mode
     *USART4_CR3_DDRE* | 13 | 1  | 14 | rw | DMA Disable on Reception Error
   *USART4_CR3_OVRDIS* | 12 | 1  | 13 | rw | Overrun Disable
   *USART4_CR3_ONEBIT* | 11 | 1  | 12 | rw | One sample bit method enable
    *USART4_CR3_CTSIE* | 10 | 1  | 11 | rw | CTS interrupt enable
     *USART4_CR3_CTSE* | 9  | 1  | 10 | rw | CTS enable
     *USART4_CR3_RTSE* | 8  | 1  | 9  | rw | RTS enable
     *USART4_CR3_DMAT* | 7  | 1  | 8  | rw | DMA enable transmitter
     *USART4_CR3_DMAR* | 6  | 1  | 7  | rw | DMA enable receiver
     *USART4_CR3_SCEN* | 5  | 1  | 6  | rw | Smartcard mode enable
     *USART4_CR3_NACK* | 4  | 1  | 5  | rw | Smartcard NACK enable
    *USART4_CR3_HDSEL* | 3  | 1  | 4  | rw | Half-duplex selection
     *USART4_CR3_IRLP* | 2  | 1  | 3  | rw | IrDA low-power
     *USART4_CR3_IREN* | 1  | 1  | 2  | rw | IrDA mode enable
      *USART4_CR3_EIE* | 0  | 1  | 1  | rw | Error interrupt enable
 --------------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_BRR*
 Address:     $40004C0C
 Reset:       $0000
 Description: Baud rate register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+----------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+----------------------
  *USART4_BRR_DIV_Mantissa* | 4  | 12 | 16 | rw | mantissa of USARTDIV
  *USART4_BRR_DIV_Fraction* | 0  | 4  | 4  | rw | fraction of USARTDIV
 -------------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_GTPR*
 Address:     $40004C10
 Reset:       $0000
 Description: Guard time and prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------
   *USART4_GTPR_GT* | 8  | 8  | 16 | rw | Guard time value
  *USART4_GTPR_PSC* | 0  | 8  | 8  | rw | Prescaler value
 -----------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_RTOR*
 Address:     $40004C14
 Reset:       $0000
 Description: Receiver timeout register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=756
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *USART4_RTOR_BLEN* | 24 | 8  | 32 | rw | Block Length
   *USART4_RTOR_RTO* | 0  | 24 | 24 | rw | Receiver timeout value
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_RQR*
 Address:     $40004C18
 Reset:       $0000
 Description: Request register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=757
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------
  *USART4_RQR_TXFRQ* | 4  | 1  | 5  | rw | Transmit data flush request
  *USART4_RQR_RXFRQ* | 3  | 1  | 4  | rw | Receive data flush request
   *USART4_RQR_MMRQ* | 2  | 1  | 3  | rw | Mute mode request
  *USART4_RQR_SBKRQ* | 1  | 1  | 2  | rw | Send break request
  *USART4_RQR_ABRRQ* | 0  | 1  | 1  | rw | Auto baud rate request
 ------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_ISR*
 Address:     $40004C1C
 Reset:       $00C0
 Description: Interrupt &amp; status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=758
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
  *USART4_ISR_REACK* | 22 | 1  | 23 | rw | Receive enable acknowledge flag
  *USART4_ISR_TEACK* | 21 | 1  | 22 | rw | Transmit enable acknowledge flag
    *USART4_ISR_WUF* | 20 | 1  | 21 | rw | Wakeup from Stop mode flag
    *USART4_ISR_RWU* | 19 | 1  | 20 | rw | Receiver wakeup from Mute mode
   *USART4_ISR_SBKF* | 18 | 1  | 19 | rw | Send break flag
    *USART4_ISR_CMF* | 17 | 1  | 18 | rw | character match flag
   *USART4_ISR_BUSY* | 16 | 1  | 17 | rw | Busy flag
   *USART4_ISR_ABRF* | 15 | 1  | 16 | rw | Auto baud rate flag
   *USART4_ISR_ABRE* | 14 | 1  | 15 | rw | Auto baud rate error
   *USART4_ISR_EOBF* | 12 | 1  | 13 | rw | End of block flag
   *USART4_ISR_RTOF* | 11 | 1  | 12 | rw | Receiver timeout
    *USART4_ISR_CTS* | 10 | 1  | 11 | rw | CTS flag
  *USART4_ISR_CTSIF* | 9  | 1  | 10 | rw | CTS interrupt flag
   *USART4_ISR_LBDF* | 8  | 1  | 9  | rw | LIN break detection flag
    *USART4_ISR_TXE* | 7  | 1  | 8  | rw | Transmit data register empty
     *USART4_ISR_TC* | 6  | 1  | 7  | rw | Transmission complete
   *USART4_ISR_RXNE* | 5  | 1  | 6  | rw | Read data register not empty
   *USART4_ISR_IDLE* | 4  | 1  | 5  | rw | Idle line detected
    *USART4_ISR_ORE* | 3  | 1  | 4  | rw | Overrun error
     *USART4_ISR_NF* | 2  | 1  | 3  | rw | Noise detected flag
     *USART4_ISR_FE* | 1  | 1  | 2  | rw | Framing error
     *USART4_ISR_PE* | 0  | 1  | 1  | rw | Parity error
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_ICR*
 Address:     $40004C20
 Reset:       $0000
 Description: Interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=763
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
    *USART4_ICR_WUCF* | 20 | 1  | 21 | rw | Wakeup from Stop mode clear flag
    *USART4_ICR_CMCF* | 17 | 1  | 18 | rw | Character match clear flag
   *USART4_ICR_EOBCF* | 12 | 1  | 13 | rw | End of timeout clear flag
   *USART4_ICR_RTOCF* | 11 | 1  | 12 | rw | Receiver timeout clear flag
   *USART4_ICR_CTSCF* | 9  | 1  | 10 | rw | CTS clear flag
   *USART4_ICR_LBDCF* | 8  | 1  | 9  | rw | LIN break detection clear flag
    *USART4_ICR_TCCF* | 6  | 1  | 7  | rw | Transmission complete clear flag
  *USART4_ICR_IDLECF* | 4  | 1  | 5  | rw | Idle line detected clear flag
   *USART4_ICR_ORECF* | 3  | 1  | 4  | rw | Overrun error clear flag
     *USART4_ICR_NCF* | 2  | 1  | 3  | rw | Noise detected clear flag
    *USART4_ICR_FECF* | 1  | 1  | 2  | rw | Framing error clear flag
    *USART4_ICR_PECF* | 0  | 1  | 1  | rw | Parity error clear flag
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_RDR*
 Address:     $40004C24
 Reset:       $0000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
  *USART4_RDR_RDR* | 0  | 9  | 9  | rw | Receive data value
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART4|
 Register:    *USART4_TDR*
 Address:     $40004C28
 Reset:       $0000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------
  *USART4_TDR_TDR* | 0  | 9  | 9  | rw | Transmit data value
 ----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_CR1*
 Address:     $40011400
 Reset:       $0000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=744
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
      *USART6_CR1_UE* | 0  | 1  | 1  | rw | USART enable
    *USART6_CR1_UESM* | 1  | 1  | 2  | rw | USART enable in Stop mode
      *USART6_CR1_RE* | 2  | 1  | 3  | rw | Receiver enable
      *USART6_CR1_TE* | 3  | 1  | 4  | rw | Transmitter enable
  *USART6_CR1_IDLEIE* | 4  | 1  | 5  | rw | IDLE interrupt enable
  *USART6_CR1_RXNEIE* | 5  | 1  | 6  | rw | RXNE interrupt enable
    *USART6_CR1_TCIE* | 6  | 1  | 7  | rw | Transmission complete interrupt enable
   *USART6_CR1_TXEIE* | 7  | 1  | 8  | rw | interrupt enable
    *USART6_CR1_PEIE* | 8  | 1  | 9  | rw | PE interrupt enable
      *USART6_CR1_PS* | 9  | 1  | 10 | rw | Parity selection
     *USART6_CR1_PCE* | 10 | 1  | 11 | rw | Parity control enable
    *USART6_CR1_WAKE* | 11 | 1  | 12 | rw | Receiver wakeup method
       *USART6_CR1_M* | 12 | 1  | 13 | rw | Word length
     *USART6_CR1_MME* | 13 | 1  | 14 | rw | Mute mode enable
    *USART6_CR1_CMIE* | 14 | 1  | 15 | rw | Character match interrupt enable
   *USART6_CR1_OVER8* | 15 | 1  | 16 | rw | Oversampling mode
    *USART6_CR1_DEDT* | 16 | 5  | 21 | rw | Driver Enable deassertion time
    *USART6_CR1_DEAT* | 21 | 5  | 26 | rw | Driver Enable assertion time
   *USART6_CR1_RTOIE* | 26 | 1  | 27 | rw | Receiver timeout interrupt enable
   *USART6_CR1_EOBIE* | 27 | 1  | 28 | rw | End of Block interrupt enable
      *USART6_CR1_M1* | 28 | 1  | 29 | rw | Word length
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_CR2*
 Address:     $40011404
 Reset:       $0000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=747
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------------------------
      *USART6_CR2_ADD4* | 28 | 4  | 32 | rw | Address of the USART node
      *USART6_CR2_ADD0* | 24 | 4  | 28 | rw | Address of the USART node
     *USART6_CR2_RTOEN* | 23 | 1  | 24 | rw | Receiver timeout enable
    *USART6_CR2_ABRMOD* | 21 | 2  | 23 | rw | Auto baud rate mode
     *USART6_CR2_ABREN* | 20 | 1  | 21 | rw | Auto baud rate enable
  *USART6_CR2_MSBFIRST* | 19 | 1  | 20 | rw | Most significant bit first
   *USART6_CR2_DATAINV* | 18 | 1  | 19 | rw | Binary data inversion
     *USART6_CR2_TXINV* | 17 | 1  | 18 | rw | TX pin active level inversion
     *USART6_CR2_RXINV* | 16 | 1  | 17 | rw | RX pin active level inversion
      *USART6_CR2_SWAP* | 15 | 1  | 16 | rw | Swap TX/RX pins
     *USART6_CR2_LINEN* | 14 | 1  | 15 | rw | LIN mode enable
      *USART6_CR2_STOP* | 12 | 2  | 14 | rw | STOP bits
     *USART6_CR2_CLKEN* | 11 | 1  | 12 | rw | Clock enable
      *USART6_CR2_CPOL* | 10 | 1  | 11 | rw | Clock polarity
      *USART6_CR2_CPHA* | 9  | 1  | 10 | rw | Clock phase
      *USART6_CR2_LBCL* | 8  | 1  | 9  | rw | Last bit clock pulse
     *USART6_CR2_LBDIE* | 6  | 1  | 7  | rw | LIN break detection interrupt enable
      *USART6_CR2_LBDL* | 5  | 1  | 6  | rw | LIN break detection length
     *USART6_CR2_ADDM7* | 4  | 1  | 5  | rw | 7-bit Address Detection/4-bit Address Detection
 ---------------------+----+----+----+----+-------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_CR3*
 Address:     $40011408
 Reset:       $0000
 Description: Control register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=751
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------------------------
    *USART6_CR3_WUFIE* | 22 | 1  | 23 | rw | Wakeup from Stop mode interrupt enable
      *USART6_CR3_WUS* | 20 | 2  | 22 | rw | Wakeup from Stop mode interrupt flag selection
  *USART6_CR3_SCARCNT* | 17 | 3  | 20 | rw | Smartcard auto-retry count
      *USART6_CR3_DEP* | 15 | 1  | 16 | rw | Driver enable polarity selection
      *USART6_CR3_DEM* | 14 | 1  | 15 | rw | Driver enable mode
     *USART6_CR3_DDRE* | 13 | 1  | 14 | rw | DMA Disable on Reception Error
   *USART6_CR3_OVRDIS* | 12 | 1  | 13 | rw | Overrun Disable
   *USART6_CR3_ONEBIT* | 11 | 1  | 12 | rw | One sample bit method enable
    *USART6_CR3_CTSIE* | 10 | 1  | 11 | rw | CTS interrupt enable
     *USART6_CR3_CTSE* | 9  | 1  | 10 | rw | CTS enable
     *USART6_CR3_RTSE* | 8  | 1  | 9  | rw | RTS enable
     *USART6_CR3_DMAT* | 7  | 1  | 8  | rw | DMA enable transmitter
     *USART6_CR3_DMAR* | 6  | 1  | 7  | rw | DMA enable receiver
     *USART6_CR3_SCEN* | 5  | 1  | 6  | rw | Smartcard mode enable
     *USART6_CR3_NACK* | 4  | 1  | 5  | rw | Smartcard NACK enable
    *USART6_CR3_HDSEL* | 3  | 1  | 4  | rw | Half-duplex selection
     *USART6_CR3_IRLP* | 2  | 1  | 3  | rw | IrDA low-power
     *USART6_CR3_IREN* | 1  | 1  | 2  | rw | IrDA mode enable
      *USART6_CR3_EIE* | 0  | 1  | 1  | rw | Error interrupt enable
 --------------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_BRR*
 Address:     $4001140C
 Reset:       $0000
 Description: Baud rate register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+----------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+----------------------
  *USART6_BRR_DIV_Mantissa* | 4  | 12 | 16 | rw | mantissa of USARTDIV
  *USART6_BRR_DIV_Fraction* | 0  | 4  | 4  | rw | fraction of USARTDIV
 -------------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_GTPR*
 Address:     $40011410
 Reset:       $0000
 Description: Guard time and prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------
   *USART6_GTPR_GT* | 8  | 8  | 16 | rw | Guard time value
  *USART6_GTPR_PSC* | 0  | 8  | 8  | rw | Prescaler value
 -----------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_RTOR*
 Address:     $40011414
 Reset:       $0000
 Description: Receiver timeout register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=756
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *USART6_RTOR_BLEN* | 24 | 8  | 32 | rw | Block Length
   *USART6_RTOR_RTO* | 0  | 24 | 24 | rw | Receiver timeout value
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_RQR*
 Address:     $40011418
 Reset:       $0000
 Description: Request register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=757
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------
  *USART6_RQR_TXFRQ* | 4  | 1  | 5  | rw | Transmit data flush request
  *USART6_RQR_RXFRQ* | 3  | 1  | 4  | rw | Receive data flush request
   *USART6_RQR_MMRQ* | 2  | 1  | 3  | rw | Mute mode request
  *USART6_RQR_SBKRQ* | 1  | 1  | 2  | rw | Send break request
  *USART6_RQR_ABRRQ* | 0  | 1  | 1  | rw | Auto baud rate request
 ------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_ISR*
 Address:     $4001141C
 Reset:       $00C0
 Description: Interrupt &amp; status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=758
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
  *USART6_ISR_REACK* | 22 | 1  | 23 | rw | Receive enable acknowledge flag
  *USART6_ISR_TEACK* | 21 | 1  | 22 | rw | Transmit enable acknowledge flag
    *USART6_ISR_WUF* | 20 | 1  | 21 | rw | Wakeup from Stop mode flag
    *USART6_ISR_RWU* | 19 | 1  | 20 | rw | Receiver wakeup from Mute mode
   *USART6_ISR_SBKF* | 18 | 1  | 19 | rw | Send break flag
    *USART6_ISR_CMF* | 17 | 1  | 18 | rw | character match flag
   *USART6_ISR_BUSY* | 16 | 1  | 17 | rw | Busy flag
   *USART6_ISR_ABRF* | 15 | 1  | 16 | rw | Auto baud rate flag
   *USART6_ISR_ABRE* | 14 | 1  | 15 | rw | Auto baud rate error
   *USART6_ISR_EOBF* | 12 | 1  | 13 | rw | End of block flag
   *USART6_ISR_RTOF* | 11 | 1  | 12 | rw | Receiver timeout
    *USART6_ISR_CTS* | 10 | 1  | 11 | rw | CTS flag
  *USART6_ISR_CTSIF* | 9  | 1  | 10 | rw | CTS interrupt flag
   *USART6_ISR_LBDF* | 8  | 1  | 9  | rw | LIN break detection flag
    *USART6_ISR_TXE* | 7  | 1  | 8  | rw | Transmit data register empty
     *USART6_ISR_TC* | 6  | 1  | 7  | rw | Transmission complete
   *USART6_ISR_RXNE* | 5  | 1  | 6  | rw | Read data register not empty
   *USART6_ISR_IDLE* | 4  | 1  | 5  | rw | Idle line detected
    *USART6_ISR_ORE* | 3  | 1  | 4  | rw | Overrun error
     *USART6_ISR_NF* | 2  | 1  | 3  | rw | Noise detected flag
     *USART6_ISR_FE* | 1  | 1  | 2  | rw | Framing error
     *USART6_ISR_PE* | 0  | 1  | 1  | rw | Parity error
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_ICR*
 Address:     $40011420
 Reset:       $0000
 Description: Interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=763
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
    *USART6_ICR_WUCF* | 20 | 1  | 21 | rw | Wakeup from Stop mode clear flag
    *USART6_ICR_CMCF* | 17 | 1  | 18 | rw | Character match clear flag
   *USART6_ICR_EOBCF* | 12 | 1  | 13 | rw | End of timeout clear flag
   *USART6_ICR_RTOCF* | 11 | 1  | 12 | rw | Receiver timeout clear flag
   *USART6_ICR_CTSCF* | 9  | 1  | 10 | rw | CTS clear flag
   *USART6_ICR_LBDCF* | 8  | 1  | 9  | rw | LIN break detection clear flag
    *USART6_ICR_TCCF* | 6  | 1  | 7  | rw | Transmission complete clear flag
  *USART6_ICR_IDLECF* | 4  | 1  | 5  | rw | Idle line detected clear flag
   *USART6_ICR_ORECF* | 3  | 1  | 4  | rw | Overrun error clear flag
     *USART6_ICR_NCF* | 2  | 1  | 3  | rw | Noise detected clear flag
    *USART6_ICR_FECF* | 1  | 1  | 2  | rw | Framing error clear flag
    *USART6_ICR_PECF* | 0  | 1  | 1  | rw | Parity error clear flag
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_RDR*
 Address:     $40011424
 Reset:       $0000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
  *USART6_RDR_RDR* | 0  | 9  | 9  | rw | Receive data value
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART6|
 Register:    *USART6_TDR*
 Address:     $40011428
 Reset:       $0000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------
  *USART6_TDR_TDR* | 0  | 9  | 9  | rw | Transmit data value
 ----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_CR1*
 Address:     $40011800
 Reset:       $0000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=744
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
      *USART7_CR1_UE* | 0  | 1  | 1  | rw | USART enable
    *USART7_CR1_UESM* | 1  | 1  | 2  | rw | USART enable in Stop mode
      *USART7_CR1_RE* | 2  | 1  | 3  | rw | Receiver enable
      *USART7_CR1_TE* | 3  | 1  | 4  | rw | Transmitter enable
  *USART7_CR1_IDLEIE* | 4  | 1  | 5  | rw | IDLE interrupt enable
  *USART7_CR1_RXNEIE* | 5  | 1  | 6  | rw | RXNE interrupt enable
    *USART7_CR1_TCIE* | 6  | 1  | 7  | rw | Transmission complete interrupt enable
   *USART7_CR1_TXEIE* | 7  | 1  | 8  | rw | interrupt enable
    *USART7_CR1_PEIE* | 8  | 1  | 9  | rw | PE interrupt enable
      *USART7_CR1_PS* | 9  | 1  | 10 | rw | Parity selection
     *USART7_CR1_PCE* | 10 | 1  | 11 | rw | Parity control enable
    *USART7_CR1_WAKE* | 11 | 1  | 12 | rw | Receiver wakeup method
       *USART7_CR1_M* | 12 | 1  | 13 | rw | Word length
     *USART7_CR1_MME* | 13 | 1  | 14 | rw | Mute mode enable
    *USART7_CR1_CMIE* | 14 | 1  | 15 | rw | Character match interrupt enable
   *USART7_CR1_OVER8* | 15 | 1  | 16 | rw | Oversampling mode
    *USART7_CR1_DEDT* | 16 | 5  | 21 | rw | Driver Enable deassertion time
    *USART7_CR1_DEAT* | 21 | 5  | 26 | rw | Driver Enable assertion time
   *USART7_CR1_RTOIE* | 26 | 1  | 27 | rw | Receiver timeout interrupt enable
   *USART7_CR1_EOBIE* | 27 | 1  | 28 | rw | End of Block interrupt enable
      *USART7_CR1_M1* | 28 | 1  | 29 | rw | Word length
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_CR2*
 Address:     $40011804
 Reset:       $0000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=747
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------------------------
      *USART7_CR2_ADD4* | 28 | 4  | 32 | rw | Address of the USART node
      *USART7_CR2_ADD0* | 24 | 4  | 28 | rw | Address of the USART node
     *USART7_CR2_RTOEN* | 23 | 1  | 24 | rw | Receiver timeout enable
    *USART7_CR2_ABRMOD* | 21 | 2  | 23 | rw | Auto baud rate mode
     *USART7_CR2_ABREN* | 20 | 1  | 21 | rw | Auto baud rate enable
  *USART7_CR2_MSBFIRST* | 19 | 1  | 20 | rw | Most significant bit first
   *USART7_CR2_DATAINV* | 18 | 1  | 19 | rw | Binary data inversion
     *USART7_CR2_TXINV* | 17 | 1  | 18 | rw | TX pin active level inversion
     *USART7_CR2_RXINV* | 16 | 1  | 17 | rw | RX pin active level inversion
      *USART7_CR2_SWAP* | 15 | 1  | 16 | rw | Swap TX/RX pins
     *USART7_CR2_LINEN* | 14 | 1  | 15 | rw | LIN mode enable
      *USART7_CR2_STOP* | 12 | 2  | 14 | rw | STOP bits
     *USART7_CR2_CLKEN* | 11 | 1  | 12 | rw | Clock enable
      *USART7_CR2_CPOL* | 10 | 1  | 11 | rw | Clock polarity
      *USART7_CR2_CPHA* | 9  | 1  | 10 | rw | Clock phase
      *USART7_CR2_LBCL* | 8  | 1  | 9  | rw | Last bit clock pulse
     *USART7_CR2_LBDIE* | 6  | 1  | 7  | rw | LIN break detection interrupt enable
      *USART7_CR2_LBDL* | 5  | 1  | 6  | rw | LIN break detection length
     *USART7_CR2_ADDM7* | 4  | 1  | 5  | rw | 7-bit Address Detection/4-bit Address Detection
 ---------------------+----+----+----+----+-------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_CR3*
 Address:     $40011808
 Reset:       $0000
 Description: Control register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=751
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------------------------
    *USART7_CR3_WUFIE* | 22 | 1  | 23 | rw | Wakeup from Stop mode interrupt enable
      *USART7_CR3_WUS* | 20 | 2  | 22 | rw | Wakeup from Stop mode interrupt flag selection
  *USART7_CR3_SCARCNT* | 17 | 3  | 20 | rw | Smartcard auto-retry count
      *USART7_CR3_DEP* | 15 | 1  | 16 | rw | Driver enable polarity selection
      *USART7_CR3_DEM* | 14 | 1  | 15 | rw | Driver enable mode
     *USART7_CR3_DDRE* | 13 | 1  | 14 | rw | DMA Disable on Reception Error
   *USART7_CR3_OVRDIS* | 12 | 1  | 13 | rw | Overrun Disable
   *USART7_CR3_ONEBIT* | 11 | 1  | 12 | rw | One sample bit method enable
    *USART7_CR3_CTSIE* | 10 | 1  | 11 | rw | CTS interrupt enable
     *USART7_CR3_CTSE* | 9  | 1  | 10 | rw | CTS enable
     *USART7_CR3_RTSE* | 8  | 1  | 9  | rw | RTS enable
     *USART7_CR3_DMAT* | 7  | 1  | 8  | rw | DMA enable transmitter
     *USART7_CR3_DMAR* | 6  | 1  | 7  | rw | DMA enable receiver
     *USART7_CR3_SCEN* | 5  | 1  | 6  | rw | Smartcard mode enable
     *USART7_CR3_NACK* | 4  | 1  | 5  | rw | Smartcard NACK enable
    *USART7_CR3_HDSEL* | 3  | 1  | 4  | rw | Half-duplex selection
     *USART7_CR3_IRLP* | 2  | 1  | 3  | rw | IrDA low-power
     *USART7_CR3_IREN* | 1  | 1  | 2  | rw | IrDA mode enable
      *USART7_CR3_EIE* | 0  | 1  | 1  | rw | Error interrupt enable
 --------------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_BRR*
 Address:     $4001180C
 Reset:       $0000
 Description: Baud rate register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+----------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+----------------------
  *USART7_BRR_DIV_Mantissa* | 4  | 12 | 16 | rw | mantissa of USARTDIV
  *USART7_BRR_DIV_Fraction* | 0  | 4  | 4  | rw | fraction of USARTDIV
 -------------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_GTPR*
 Address:     $40011810
 Reset:       $0000
 Description: Guard time and prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------
   *USART7_GTPR_GT* | 8  | 8  | 16 | rw | Guard time value
  *USART7_GTPR_PSC* | 0  | 8  | 8  | rw | Prescaler value
 -----------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_RTOR*
 Address:     $40011814
 Reset:       $0000
 Description: Receiver timeout register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=756
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *USART7_RTOR_BLEN* | 24 | 8  | 32 | rw | Block Length
   *USART7_RTOR_RTO* | 0  | 24 | 24 | rw | Receiver timeout value
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_RQR*
 Address:     $40011818
 Reset:       $0000
 Description: Request register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=757
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------
  *USART7_RQR_TXFRQ* | 4  | 1  | 5  | rw | Transmit data flush request
  *USART7_RQR_RXFRQ* | 3  | 1  | 4  | rw | Receive data flush request
   *USART7_RQR_MMRQ* | 2  | 1  | 3  | rw | Mute mode request
  *USART7_RQR_SBKRQ* | 1  | 1  | 2  | rw | Send break request
  *USART7_RQR_ABRRQ* | 0  | 1  | 1  | rw | Auto baud rate request
 ------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_ISR*
 Address:     $4001181C
 Reset:       $00C0
 Description: Interrupt &amp; status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=758
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
  *USART7_ISR_REACK* | 22 | 1  | 23 | rw | Receive enable acknowledge flag
  *USART7_ISR_TEACK* | 21 | 1  | 22 | rw | Transmit enable acknowledge flag
    *USART7_ISR_WUF* | 20 | 1  | 21 | rw | Wakeup from Stop mode flag
    *USART7_ISR_RWU* | 19 | 1  | 20 | rw | Receiver wakeup from Mute mode
   *USART7_ISR_SBKF* | 18 | 1  | 19 | rw | Send break flag
    *USART7_ISR_CMF* | 17 | 1  | 18 | rw | character match flag
   *USART7_ISR_BUSY* | 16 | 1  | 17 | rw | Busy flag
   *USART7_ISR_ABRF* | 15 | 1  | 16 | rw | Auto baud rate flag
   *USART7_ISR_ABRE* | 14 | 1  | 15 | rw | Auto baud rate error
   *USART7_ISR_EOBF* | 12 | 1  | 13 | rw | End of block flag
   *USART7_ISR_RTOF* | 11 | 1  | 12 | rw | Receiver timeout
    *USART7_ISR_CTS* | 10 | 1  | 11 | rw | CTS flag
  *USART7_ISR_CTSIF* | 9  | 1  | 10 | rw | CTS interrupt flag
   *USART7_ISR_LBDF* | 8  | 1  | 9  | rw | LIN break detection flag
    *USART7_ISR_TXE* | 7  | 1  | 8  | rw | Transmit data register empty
     *USART7_ISR_TC* | 6  | 1  | 7  | rw | Transmission complete
   *USART7_ISR_RXNE* | 5  | 1  | 6  | rw | Read data register not empty
   *USART7_ISR_IDLE* | 4  | 1  | 5  | rw | Idle line detected
    *USART7_ISR_ORE* | 3  | 1  | 4  | rw | Overrun error
     *USART7_ISR_NF* | 2  | 1  | 3  | rw | Noise detected flag
     *USART7_ISR_FE* | 1  | 1  | 2  | rw | Framing error
     *USART7_ISR_PE* | 0  | 1  | 1  | rw | Parity error
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_ICR*
 Address:     $40011820
 Reset:       $0000
 Description: Interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=763
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
    *USART7_ICR_WUCF* | 20 | 1  | 21 | rw | Wakeup from Stop mode clear flag
    *USART7_ICR_CMCF* | 17 | 1  | 18 | rw | Character match clear flag
   *USART7_ICR_EOBCF* | 12 | 1  | 13 | rw | End of timeout clear flag
   *USART7_ICR_RTOCF* | 11 | 1  | 12 | rw | Receiver timeout clear flag
   *USART7_ICR_CTSCF* | 9  | 1  | 10 | rw | CTS clear flag
   *USART7_ICR_LBDCF* | 8  | 1  | 9  | rw | LIN break detection clear flag
    *USART7_ICR_TCCF* | 6  | 1  | 7  | rw | Transmission complete clear flag
  *USART7_ICR_IDLECF* | 4  | 1  | 5  | rw | Idle line detected clear flag
   *USART7_ICR_ORECF* | 3  | 1  | 4  | rw | Overrun error clear flag
     *USART7_ICR_NCF* | 2  | 1  | 3  | rw | Noise detected clear flag
    *USART7_ICR_FECF* | 1  | 1  | 2  | rw | Framing error clear flag
    *USART7_ICR_PECF* | 0  | 1  | 1  | rw | Parity error clear flag
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_RDR*
 Address:     $40011824
 Reset:       $0000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
  *USART7_RDR_RDR* | 0  | 9  | 9  | rw | Receive data value
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART7|
 Register:    *USART7_TDR*
 Address:     $40011828
 Reset:       $0000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------
  *USART7_TDR_TDR* | 0  | 9  | 9  | rw | Transmit data value
 ----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_CR1*
 Address:     $40011C00
 Reset:       $0000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=744
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
      *USART8_CR1_UE* | 0  | 1  | 1  | rw | USART enable
    *USART8_CR1_UESM* | 1  | 1  | 2  | rw | USART enable in Stop mode
      *USART8_CR1_RE* | 2  | 1  | 3  | rw | Receiver enable
      *USART8_CR1_TE* | 3  | 1  | 4  | rw | Transmitter enable
  *USART8_CR1_IDLEIE* | 4  | 1  | 5  | rw | IDLE interrupt enable
  *USART8_CR1_RXNEIE* | 5  | 1  | 6  | rw | RXNE interrupt enable
    *USART8_CR1_TCIE* | 6  | 1  | 7  | rw | Transmission complete interrupt enable
   *USART8_CR1_TXEIE* | 7  | 1  | 8  | rw | interrupt enable
    *USART8_CR1_PEIE* | 8  | 1  | 9  | rw | PE interrupt enable
      *USART8_CR1_PS* | 9  | 1  | 10 | rw | Parity selection
     *USART8_CR1_PCE* | 10 | 1  | 11 | rw | Parity control enable
    *USART8_CR1_WAKE* | 11 | 1  | 12 | rw | Receiver wakeup method
       *USART8_CR1_M* | 12 | 1  | 13 | rw | Word length
     *USART8_CR1_MME* | 13 | 1  | 14 | rw | Mute mode enable
    *USART8_CR1_CMIE* | 14 | 1  | 15 | rw | Character match interrupt enable
   *USART8_CR1_OVER8* | 15 | 1  | 16 | rw | Oversampling mode
    *USART8_CR1_DEDT* | 16 | 5  | 21 | rw | Driver Enable deassertion time
    *USART8_CR1_DEAT* | 21 | 5  | 26 | rw | Driver Enable assertion time
   *USART8_CR1_RTOIE* | 26 | 1  | 27 | rw | Receiver timeout interrupt enable
   *USART8_CR1_EOBIE* | 27 | 1  | 28 | rw | End of Block interrupt enable
      *USART8_CR1_M1* | 28 | 1  | 29 | rw | Word length
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_CR2*
 Address:     $40011C04
 Reset:       $0000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=747
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------------------------
      *USART8_CR2_ADD4* | 28 | 4  | 32 | rw | Address of the USART node
      *USART8_CR2_ADD0* | 24 | 4  | 28 | rw | Address of the USART node
     *USART8_CR2_RTOEN* | 23 | 1  | 24 | rw | Receiver timeout enable
    *USART8_CR2_ABRMOD* | 21 | 2  | 23 | rw | Auto baud rate mode
     *USART8_CR2_ABREN* | 20 | 1  | 21 | rw | Auto baud rate enable
  *USART8_CR2_MSBFIRST* | 19 | 1  | 20 | rw | Most significant bit first
   *USART8_CR2_DATAINV* | 18 | 1  | 19 | rw | Binary data inversion
     *USART8_CR2_TXINV* | 17 | 1  | 18 | rw | TX pin active level inversion
     *USART8_CR2_RXINV* | 16 | 1  | 17 | rw | RX pin active level inversion
      *USART8_CR2_SWAP* | 15 | 1  | 16 | rw | Swap TX/RX pins
     *USART8_CR2_LINEN* | 14 | 1  | 15 | rw | LIN mode enable
      *USART8_CR2_STOP* | 12 | 2  | 14 | rw | STOP bits
     *USART8_CR2_CLKEN* | 11 | 1  | 12 | rw | Clock enable
      *USART8_CR2_CPOL* | 10 | 1  | 11 | rw | Clock polarity
      *USART8_CR2_CPHA* | 9  | 1  | 10 | rw | Clock phase
      *USART8_CR2_LBCL* | 8  | 1  | 9  | rw | Last bit clock pulse
     *USART8_CR2_LBDIE* | 6  | 1  | 7  | rw | LIN break detection interrupt enable
      *USART8_CR2_LBDL* | 5  | 1  | 6  | rw | LIN break detection length
     *USART8_CR2_ADDM7* | 4  | 1  | 5  | rw | 7-bit Address Detection/4-bit Address Detection
 ---------------------+----+----+----+----+-------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_CR3*
 Address:     $40011C08
 Reset:       $0000
 Description: Control register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=751
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------------------------
    *USART8_CR3_WUFIE* | 22 | 1  | 23 | rw | Wakeup from Stop mode interrupt enable
      *USART8_CR3_WUS* | 20 | 2  | 22 | rw | Wakeup from Stop mode interrupt flag selection
  *USART8_CR3_SCARCNT* | 17 | 3  | 20 | rw | Smartcard auto-retry count
      *USART8_CR3_DEP* | 15 | 1  | 16 | rw | Driver enable polarity selection
      *USART8_CR3_DEM* | 14 | 1  | 15 | rw | Driver enable mode
     *USART8_CR3_DDRE* | 13 | 1  | 14 | rw | DMA Disable on Reception Error
   *USART8_CR3_OVRDIS* | 12 | 1  | 13 | rw | Overrun Disable
   *USART8_CR3_ONEBIT* | 11 | 1  | 12 | rw | One sample bit method enable
    *USART8_CR3_CTSIE* | 10 | 1  | 11 | rw | CTS interrupt enable
     *USART8_CR3_CTSE* | 9  | 1  | 10 | rw | CTS enable
     *USART8_CR3_RTSE* | 8  | 1  | 9  | rw | RTS enable
     *USART8_CR3_DMAT* | 7  | 1  | 8  | rw | DMA enable transmitter
     *USART8_CR3_DMAR* | 6  | 1  | 7  | rw | DMA enable receiver
     *USART8_CR3_SCEN* | 5  | 1  | 6  | rw | Smartcard mode enable
     *USART8_CR3_NACK* | 4  | 1  | 5  | rw | Smartcard NACK enable
    *USART8_CR3_HDSEL* | 3  | 1  | 4  | rw | Half-duplex selection
     *USART8_CR3_IRLP* | 2  | 1  | 3  | rw | IrDA low-power
     *USART8_CR3_IREN* | 1  | 1  | 2  | rw | IrDA mode enable
      *USART8_CR3_EIE* | 0  | 1  | 1  | rw | Error interrupt enable
 --------------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_BRR*
 Address:     $40011C0C
 Reset:       $0000
 Description: Baud rate register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+----------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+----------------------
  *USART8_BRR_DIV_Mantissa* | 4  | 12 | 16 | rw | mantissa of USARTDIV
  *USART8_BRR_DIV_Fraction* | 0  | 4  | 4  | rw | fraction of USARTDIV
 -------------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_GTPR*
 Address:     $40011C10
 Reset:       $0000
 Description: Guard time and prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------
   *USART8_GTPR_GT* | 8  | 8  | 16 | rw | Guard time value
  *USART8_GTPR_PSC* | 0  | 8  | 8  | rw | Prescaler value
 -----------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_RTOR*
 Address:     $40011C14
 Reset:       $0000
 Description: Receiver timeout register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=756
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *USART8_RTOR_BLEN* | 24 | 8  | 32 | rw | Block Length
   *USART8_RTOR_RTO* | 0  | 24 | 24 | rw | Receiver timeout value
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_RQR*
 Address:     $40011C18
 Reset:       $0000
 Description: Request register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=757
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------
  *USART8_RQR_TXFRQ* | 4  | 1  | 5  | rw | Transmit data flush request
  *USART8_RQR_RXFRQ* | 3  | 1  | 4  | rw | Receive data flush request
   *USART8_RQR_MMRQ* | 2  | 1  | 3  | rw | Mute mode request
  *USART8_RQR_SBKRQ* | 1  | 1  | 2  | rw | Send break request
  *USART8_RQR_ABRRQ* | 0  | 1  | 1  | rw | Auto baud rate request
 ------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_ISR*
 Address:     $40011C1C
 Reset:       $00C0
 Description: Interrupt &amp; status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=758
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
  *USART8_ISR_REACK* | 22 | 1  | 23 | rw | Receive enable acknowledge flag
  *USART8_ISR_TEACK* | 21 | 1  | 22 | rw | Transmit enable acknowledge flag
    *USART8_ISR_WUF* | 20 | 1  | 21 | rw | Wakeup from Stop mode flag
    *USART8_ISR_RWU* | 19 | 1  | 20 | rw | Receiver wakeup from Mute mode
   *USART8_ISR_SBKF* | 18 | 1  | 19 | rw | Send break flag
    *USART8_ISR_CMF* | 17 | 1  | 18 | rw | character match flag
   *USART8_ISR_BUSY* | 16 | 1  | 17 | rw | Busy flag
   *USART8_ISR_ABRF* | 15 | 1  | 16 | rw | Auto baud rate flag
   *USART8_ISR_ABRE* | 14 | 1  | 15 | rw | Auto baud rate error
   *USART8_ISR_EOBF* | 12 | 1  | 13 | rw | End of block flag
   *USART8_ISR_RTOF* | 11 | 1  | 12 | rw | Receiver timeout
    *USART8_ISR_CTS* | 10 | 1  | 11 | rw | CTS flag
  *USART8_ISR_CTSIF* | 9  | 1  | 10 | rw | CTS interrupt flag
   *USART8_ISR_LBDF* | 8  | 1  | 9  | rw | LIN break detection flag
    *USART8_ISR_TXE* | 7  | 1  | 8  | rw | Transmit data register empty
     *USART8_ISR_TC* | 6  | 1  | 7  | rw | Transmission complete
   *USART8_ISR_RXNE* | 5  | 1  | 6  | rw | Read data register not empty
   *USART8_ISR_IDLE* | 4  | 1  | 5  | rw | Idle line detected
    *USART8_ISR_ORE* | 3  | 1  | 4  | rw | Overrun error
     *USART8_ISR_NF* | 2  | 1  | 3  | rw | Noise detected flag
     *USART8_ISR_FE* | 1  | 1  | 2  | rw | Framing error
     *USART8_ISR_PE* | 0  | 1  | 1  | rw | Parity error
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_ICR*
 Address:     $40011C20
 Reset:       $0000
 Description: Interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=763
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
    *USART8_ICR_WUCF* | 20 | 1  | 21 | rw | Wakeup from Stop mode clear flag
    *USART8_ICR_CMCF* | 17 | 1  | 18 | rw | Character match clear flag
   *USART8_ICR_EOBCF* | 12 | 1  | 13 | rw | End of timeout clear flag
   *USART8_ICR_RTOCF* | 11 | 1  | 12 | rw | Receiver timeout clear flag
   *USART8_ICR_CTSCF* | 9  | 1  | 10 | rw | CTS clear flag
   *USART8_ICR_LBDCF* | 8  | 1  | 9  | rw | LIN break detection clear flag
    *USART8_ICR_TCCF* | 6  | 1  | 7  | rw | Transmission complete clear flag
  *USART8_ICR_IDLECF* | 4  | 1  | 5  | rw | Idle line detected clear flag
   *USART8_ICR_ORECF* | 3  | 1  | 4  | rw | Overrun error clear flag
     *USART8_ICR_NCF* | 2  | 1  | 3  | rw | Noise detected clear flag
    *USART8_ICR_FECF* | 1  | 1  | 2  | rw | Framing error clear flag
    *USART8_ICR_PECF* | 0  | 1  | 1  | rw | Parity error clear flag
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_RDR*
 Address:     $40011C24
 Reset:       $0000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
  *USART8_RDR_RDR* | 0  | 9  | 9  | rw | Receive data value
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART8|
 Register:    *USART8_TDR*
 Address:     $40011C28
 Reset:       $0000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------
  *USART8_TDR_TDR* | 0  | 9  | 9  | rw | Transmit data value
 ----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_CR1*
 Address:     $40005000
 Reset:       $0000
 Description: Control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=744
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------
      *USART5_CR1_UE* | 0  | 1  | 1  | rw | USART enable
    *USART5_CR1_UESM* | 1  | 1  | 2  | rw | USART enable in Stop mode
      *USART5_CR1_RE* | 2  | 1  | 3  | rw | Receiver enable
      *USART5_CR1_TE* | 3  | 1  | 4  | rw | Transmitter enable
  *USART5_CR1_IDLEIE* | 4  | 1  | 5  | rw | IDLE interrupt enable
  *USART5_CR1_RXNEIE* | 5  | 1  | 6  | rw | RXNE interrupt enable
    *USART5_CR1_TCIE* | 6  | 1  | 7  | rw | Transmission complete interrupt enable
   *USART5_CR1_TXEIE* | 7  | 1  | 8  | rw | interrupt enable
    *USART5_CR1_PEIE* | 8  | 1  | 9  | rw | PE interrupt enable
      *USART5_CR1_PS* | 9  | 1  | 10 | rw | Parity selection
     *USART5_CR1_PCE* | 10 | 1  | 11 | rw | Parity control enable
    *USART5_CR1_WAKE* | 11 | 1  | 12 | rw | Receiver wakeup method
       *USART5_CR1_M* | 12 | 1  | 13 | rw | Word length
     *USART5_CR1_MME* | 13 | 1  | 14 | rw | Mute mode enable
    *USART5_CR1_CMIE* | 14 | 1  | 15 | rw | Character match interrupt enable
   *USART5_CR1_OVER8* | 15 | 1  | 16 | rw | Oversampling mode
    *USART5_CR1_DEDT* | 16 | 5  | 21 | rw | Driver Enable deassertion time
    *USART5_CR1_DEAT* | 21 | 5  | 26 | rw | Driver Enable assertion time
   *USART5_CR1_RTOIE* | 26 | 1  | 27 | rw | Receiver timeout interrupt enable
   *USART5_CR1_EOBIE* | 27 | 1  | 28 | rw | End of Block interrupt enable
      *USART5_CR1_M1* | 28 | 1  | 29 | rw | Word length
 -------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_CR2*
 Address:     $40005004
 Reset:       $0000
 Description: Control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=747
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------------------------
      *USART5_CR2_ADD4* | 28 | 4  | 32 | rw | Address of the USART node
      *USART5_CR2_ADD0* | 24 | 4  | 28 | rw | Address of the USART node
     *USART5_CR2_RTOEN* | 23 | 1  | 24 | rw | Receiver timeout enable
    *USART5_CR2_ABRMOD* | 21 | 2  | 23 | rw | Auto baud rate mode
     *USART5_CR2_ABREN* | 20 | 1  | 21 | rw | Auto baud rate enable
  *USART5_CR2_MSBFIRST* | 19 | 1  | 20 | rw | Most significant bit first
   *USART5_CR2_DATAINV* | 18 | 1  | 19 | rw | Binary data inversion
     *USART5_CR2_TXINV* | 17 | 1  | 18 | rw | TX pin active level inversion
     *USART5_CR2_RXINV* | 16 | 1  | 17 | rw | RX pin active level inversion
      *USART5_CR2_SWAP* | 15 | 1  | 16 | rw | Swap TX/RX pins
     *USART5_CR2_LINEN* | 14 | 1  | 15 | rw | LIN mode enable
      *USART5_CR2_STOP* | 12 | 2  | 14 | rw | STOP bits
     *USART5_CR2_CLKEN* | 11 | 1  | 12 | rw | Clock enable
      *USART5_CR2_CPOL* | 10 | 1  | 11 | rw | Clock polarity
      *USART5_CR2_CPHA* | 9  | 1  | 10 | rw | Clock phase
      *USART5_CR2_LBCL* | 8  | 1  | 9  | rw | Last bit clock pulse
     *USART5_CR2_LBDIE* | 6  | 1  | 7  | rw | LIN break detection interrupt enable
      *USART5_CR2_LBDL* | 5  | 1  | 6  | rw | LIN break detection length
     *USART5_CR2_ADDM7* | 4  | 1  | 5  | rw | 7-bit Address Detection/4-bit Address Detection
 ---------------------+----+----+----+----+-------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_CR3*
 Address:     $40005008
 Reset:       $0000
 Description: Control register 3
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=751
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------------------------
    *USART5_CR3_WUFIE* | 22 | 1  | 23 | rw | Wakeup from Stop mode interrupt enable
      *USART5_CR3_WUS* | 20 | 2  | 22 | rw | Wakeup from Stop mode interrupt flag selection
  *USART5_CR3_SCARCNT* | 17 | 3  | 20 | rw | Smartcard auto-retry count
      *USART5_CR3_DEP* | 15 | 1  | 16 | rw | Driver enable polarity selection
      *USART5_CR3_DEM* | 14 | 1  | 15 | rw | Driver enable mode
     *USART5_CR3_DDRE* | 13 | 1  | 14 | rw | DMA Disable on Reception Error
   *USART5_CR3_OVRDIS* | 12 | 1  | 13 | rw | Overrun Disable
   *USART5_CR3_ONEBIT* | 11 | 1  | 12 | rw | One sample bit method enable
    *USART5_CR3_CTSIE* | 10 | 1  | 11 | rw | CTS interrupt enable
     *USART5_CR3_CTSE* | 9  | 1  | 10 | rw | CTS enable
     *USART5_CR3_RTSE* | 8  | 1  | 9  | rw | RTS enable
     *USART5_CR3_DMAT* | 7  | 1  | 8  | rw | DMA enable transmitter
     *USART5_CR3_DMAR* | 6  | 1  | 7  | rw | DMA enable receiver
     *USART5_CR3_SCEN* | 5  | 1  | 6  | rw | Smartcard mode enable
     *USART5_CR3_NACK* | 4  | 1  | 5  | rw | Smartcard NACK enable
    *USART5_CR3_HDSEL* | 3  | 1  | 4  | rw | Half-duplex selection
     *USART5_CR3_IRLP* | 2  | 1  | 3  | rw | IrDA low-power
     *USART5_CR3_IREN* | 1  | 1  | 2  | rw | IrDA mode enable
      *USART5_CR3_EIE* | 0  | 1  | 1  | rw | Error interrupt enable
 --------------------+----+----+----+----+------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_BRR*
 Address:     $4000500C
 Reset:       $0000
 Description: Baud rate register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+----------------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+----------------------
  *USART5_BRR_DIV_Mantissa* | 4  | 12 | 16 | rw | mantissa of USARTDIV
  *USART5_BRR_DIV_Fraction* | 0  | 4  | 4  | rw | fraction of USARTDIV
 -------------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_GTPR*
 Address:     $40005010
 Reset:       $0000
 Description: Guard time and prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=755
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------
   *USART5_GTPR_GT* | 8  | 8  | 16 | rw | Guard time value
  *USART5_GTPR_PSC* | 0  | 8  | 8  | rw | Prescaler value
 -----------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_RTOR*
 Address:     $40005014
 Reset:       $0000
 Description: Receiver timeout register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=756
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------
  *USART5_RTOR_BLEN* | 24 | 8  | 32 | rw | Block Length
   *USART5_RTOR_RTO* | 0  | 24 | 24 | rw | Receiver timeout value
 ------------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_RQR*
 Address:     $40005018
 Reset:       $0000
 Description: Request register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=757
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------
  *USART5_RQR_TXFRQ* | 4  | 1  | 5  | rw | Transmit data flush request
  *USART5_RQR_RXFRQ* | 3  | 1  | 4  | rw | Receive data flush request
   *USART5_RQR_MMRQ* | 2  | 1  | 3  | rw | Mute mode request
  *USART5_RQR_SBKRQ* | 1  | 1  | 2  | rw | Send break request
  *USART5_RQR_ABRRQ* | 0  | 1  | 1  | rw | Auto baud rate request
 ------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_ISR*
 Address:     $4000501C
 Reset:       $00C0
 Description: Interrupt &amp; status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=758
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
  *USART5_ISR_REACK* | 22 | 1  | 23 | rw | Receive enable acknowledge flag
  *USART5_ISR_TEACK* | 21 | 1  | 22 | rw | Transmit enable acknowledge flag
    *USART5_ISR_WUF* | 20 | 1  | 21 | rw | Wakeup from Stop mode flag
    *USART5_ISR_RWU* | 19 | 1  | 20 | rw | Receiver wakeup from Mute mode
   *USART5_ISR_SBKF* | 18 | 1  | 19 | rw | Send break flag
    *USART5_ISR_CMF* | 17 | 1  | 18 | rw | character match flag
   *USART5_ISR_BUSY* | 16 | 1  | 17 | rw | Busy flag
   *USART5_ISR_ABRF* | 15 | 1  | 16 | rw | Auto baud rate flag
   *USART5_ISR_ABRE* | 14 | 1  | 15 | rw | Auto baud rate error
   *USART5_ISR_EOBF* | 12 | 1  | 13 | rw | End of block flag
   *USART5_ISR_RTOF* | 11 | 1  | 12 | rw | Receiver timeout
    *USART5_ISR_CTS* | 10 | 1  | 11 | rw | CTS flag
  *USART5_ISR_CTSIF* | 9  | 1  | 10 | rw | CTS interrupt flag
   *USART5_ISR_LBDF* | 8  | 1  | 9  | rw | LIN break detection flag
    *USART5_ISR_TXE* | 7  | 1  | 8  | rw | Transmit data register empty
     *USART5_ISR_TC* | 6  | 1  | 7  | rw | Transmission complete
   *USART5_ISR_RXNE* | 5  | 1  | 6  | rw | Read data register not empty
   *USART5_ISR_IDLE* | 4  | 1  | 5  | rw | Idle line detected
    *USART5_ISR_ORE* | 3  | 1  | 4  | rw | Overrun error
     *USART5_ISR_NF* | 2  | 1  | 3  | rw | Noise detected flag
     *USART5_ISR_FE* | 1  | 1  | 2  | rw | Framing error
     *USART5_ISR_PE* | 0  | 1  | 1  | rw | Parity error
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_ICR*
 Address:     $40005020
 Reset:       $0000
 Description: Interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=763
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
    *USART5_ICR_WUCF* | 20 | 1  | 21 | rw | Wakeup from Stop mode clear flag
    *USART5_ICR_CMCF* | 17 | 1  | 18 | rw | Character match clear flag
   *USART5_ICR_EOBCF* | 12 | 1  | 13 | rw | End of timeout clear flag
   *USART5_ICR_RTOCF* | 11 | 1  | 12 | rw | Receiver timeout clear flag
   *USART5_ICR_CTSCF* | 9  | 1  | 10 | rw | CTS clear flag
   *USART5_ICR_LBDCF* | 8  | 1  | 9  | rw | LIN break detection clear flag
    *USART5_ICR_TCCF* | 6  | 1  | 7  | rw | Transmission complete clear flag
  *USART5_ICR_IDLECF* | 4  | 1  | 5  | rw | Idle line detected clear flag
   *USART5_ICR_ORECF* | 3  | 1  | 4  | rw | Overrun error clear flag
     *USART5_ICR_NCF* | 2  | 1  | 3  | rw | Noise detected clear flag
    *USART5_ICR_FECF* | 1  | 1  | 2  | rw | Framing error clear flag
    *USART5_ICR_PECF* | 0  | 1  | 1  | rw | Parity error clear flag
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_RDR*
 Address:     $40005024
 Reset:       $0000
 Description: Receive data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------
  *USART5_RDR_RDR* | 0  | 9  | 9  | rw | Receive data value
 ----------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USART5|
 Register:    *USART5_TDR*
 Address:     $40005028
 Reset:       $0000
 Description: Transmit data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=764
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------
  *USART5_TDR_TDR* | 0  | 9  | 9  | rw | Transmit data value
 ----------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_TR*
 Address:     $40002800
 Reset:       $00000000
 Description: time register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=607
              (place cursor on hyperlink, type 'gx' to follow)

 ------------+----+----+----+----+----------------------------
    Bitfield | bo | bw | be | ac | Description
 ------------+----+----+----+----+----------------------------
   *RTC_TR_PM* | 22 | 1  | 23 | rw | AM/PM notation
   *RTC_TR_HT* | 20 | 2  | 22 | rw | Hour tens in BCD format
   *RTC_TR_HU* | 16 | 4  | 20 | rw | Hour units in BCD format
  *RTC_TR_MNT* | 12 | 3  | 15 | rw | Minute tens in BCD format
  *RTC_TR_MNU* | 8  | 4  | 12 | rw | Minute units in BCD format
   *RTC_TR_ST* | 4  | 3  | 7  | rw | Second tens in BCD format
   *RTC_TR_SU* | 0  | 4  | 4  | rw | Second units in BCD format
 ------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_DR*
 Address:     $40002804
 Reset:       $00002101
 Description: date register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=608
              (place cursor on hyperlink, type 'gx' to follow)

 ------------+----+----+----+----+---------------------------
    Bitfield | bo | bw | be | ac | Description
 ------------+----+----+----+----+---------------------------
   *RTC_DR_YT* | 20 | 4  | 24 | rw | Year tens in BCD format
   *RTC_DR_YU* | 16 | 4  | 20 | rw | Year units in BCD format
  *RTC_DR_WDU* | 13 | 3  | 16 | rw | Week day units
   *RTC_DR_MT* | 12 | 1  | 13 | rw | Month tens in BCD format
   *RTC_DR_MU* | 8  | 4  | 12 | rw | Month units in BCD format
   *RTC_DR_DT* | 4  | 2  | 6  | rw | Date tens in BCD format
   *RTC_DR_DU* | 0  | 4  | 4  | rw | Date units in BCD format
 ------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_CR*
 Address:     $40002808
 Reset:       $00000000
 Description: control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=610
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------------------------------------------
   *RTC_CR_TSEDGE* | 3  | 1  | 4  | rw | Time-stamp event active edge
  *RTC_CR_REFCKON* | 4  | 1  | 5  | rw | RTC_REFIN reference clock detection enable (50 or 60 Hz)
  *RTC_CR_BYPSHAD* | 5  | 1  | 6  | rw | Bypass the shadow registers
      *RTC_CR_FMT* | 6  | 1  | 7  | rw | Hour format
    *RTC_CR_ALRAE* | 8  | 1  | 9  | rw | Alarm A enable
      *RTC_CR_TSE* | 11 | 1  | 12 | rw | timestamp enable
   *RTC_CR_ALRAIE* | 12 | 1  | 13 | rw | Alarm A interrupt enable
     *RTC_CR_TSIE* | 15 | 1  | 16 | rw | Time-stamp interrupt enable
    *RTC_CR_ADD1H* | 16 | 1  | 17 | wo | Add 1 hour (summer time change)
    *RTC_CR_SUB1H* | 17 | 1  | 18 | wo | Subtract 1 hour (winter time change)
      *RTC_CR_BKP* | 18 | 1  | 19 | rw | Backup
    *RTC_CR_COSEL* | 19 | 1  | 20 | rw | Calibration output selection
      *RTC_CR_POL* | 20 | 1  | 21 | rw | Output polarity
     *RTC_CR_OSEL* | 21 | 2  | 23 | rw | Output selection
      *RTC_CR_COE* | 23 | 1  | 24 | rw | Calibration output enable
 ----------------+----+----+----+----+----------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_ISR*
 Address:     $4000280C
 Reset:       $00000007
 Description: initialization and status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=613
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+--------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+--------------------------------
   *RTC_ISR_ALRAWF* | 0  | 1  | 1  | ro | Alarm A write flag
     *RTC_ISR_SHPF* | 3  | 1  | 4  | rw | Shift operation pending
    *RTC_ISR_INITS* | 4  | 1  | 5  | ro | Initialization status flag
      *RTC_ISR_RSF* | 5  | 1  | 6  | rw | Registers synchronization flag
    *RTC_ISR_INITF* | 6  | 1  | 7  | ro | Initialization flag
     *RTC_ISR_INIT* | 7  | 1  | 8  | rw | Initialization mode
    *RTC_ISR_ALRAF* | 8  | 1  | 9  | rw | Alarm A flag
      *RTC_ISR_TSF* | 11 | 1  | 12 | rw | Time-stamp flag
    *RTC_ISR_TSOVF* | 12 | 1  | 13 | rw | Time-stamp overflow flag
   *RTC_ISR_TAMP1F* | 13 | 1  | 14 | rw | RTC_TAMP1 detection flag
   *RTC_ISR_TAMP2F* | 14 | 1  | 15 | rw | RTC_TAMP2 detection flag
  *RTC_ISR_RECALPF* | 16 | 1  | 17 | ro | Recalibration pending Flag
 -----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_PRER*
 Address:     $40002810
 Reset:       $007F00FF
 Description: prescaler register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=615
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-------------------------------
  *RTC_PRER_PREDIV_A* | 16 | 7  | 23 | rw | Asynchronous prescaler factor
  *RTC_PRER_PREDIV_S* | 0  | 15 | 15 | rw | Synchronous prescaler factor
 -------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_ALRMAR*
 Address:     $4000281C
 Reset:       $00000000
 Description: alarm A register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=617
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------
   *RTC_ALRMAR_MSK4* | 31 | 1  | 32 | rw | Alarm A date mask
  *RTC_ALRMAR_WDSEL* | 30 | 1  | 31 | rw | Week day selection
     *RTC_ALRMAR_DT* | 28 | 2  | 30 | rw | Date tens in BCD format.
     *RTC_ALRMAR_DU* | 24 | 4  | 28 | rw | Date units or day in BCD format.
   *RTC_ALRMAR_MSK3* | 23 | 1  | 24 | rw | Alarm A hours mask
     *RTC_ALRMAR_PM* | 22 | 1  | 23 | rw | AM/PM notation
     *RTC_ALRMAR_HT* | 20 | 2  | 22 | rw | Hour tens in BCD format.
     *RTC_ALRMAR_HU* | 16 | 4  | 20 | rw | Hour units in BCD format.
   *RTC_ALRMAR_MSK2* | 15 | 1  | 16 | rw | Alarm A minutes mask
    *RTC_ALRMAR_MNT* | 12 | 3  | 15 | rw | Minute tens in BCD format.
    *RTC_ALRMAR_MNU* | 8  | 4  | 12 | rw | Minute units in BCD format.
   *RTC_ALRMAR_MSK1* | 7  | 1  | 8  | rw | Alarm A seconds mask
     *RTC_ALRMAR_ST* | 4  | 3  | 7  | rw | Second tens in BCD format.
     *RTC_ALRMAR_SU* | 0  | 4  | 4  | rw | Second units in BCD format.
 ------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_WPR*
 Address:     $40002824
 Reset:       $00000000
 Description: write protection register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=618
              (place cursor on hyperlink, type 'gx' to follow)

 -------------+----+----+----+----+----------------------
     Bitfield | bo | bw | be | ac | Description
 -------------+----+----+----+----+----------------------
  *RTC_WPR_KEY* | 0  | 8  | 8  | rw | Write protection key
 -------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_SSR*
 Address:     $40002828
 Reset:       $00000000
 Description: sub second register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=618
              (place cursor on hyperlink, type 'gx' to follow)

 ------------+----+----+----+----+------------------
    Bitfield | bo | bw | be | ac | Description
 ------------+----+----+----+----+------------------
  *RTC_SSR_SS* | 0  | 16 | 16 | rw | Sub second value
 ------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_SHIFTR*
 Address:     $4000282C
 Reset:       $00000000
 Description: shift control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=619
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+---------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+---------------------------------
  *RTC_SHIFTR_ADD1S* | 31 | 1  | 32 | rw | Add one second
  *RTC_SHIFTR_SUBFS* | 0  | 15 | 15 | rw | Subtract a fraction of a second
 ------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_TSTR*
 Address:     $40002830
 Reset:       $00000000
 Description: timestamp time register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=620
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-----------------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-----------------------------
   *RTC_TSTR_PM* | 22 | 1  | 23 | rw | AM/PM notation
   *RTC_TSTR_HT* | 20 | 2  | 22 | rw | Hour tens in BCD format.
   *RTC_TSTR_HU* | 16 | 4  | 20 | rw | Hour units in BCD format.
  *RTC_TSTR_MNT* | 12 | 3  | 15 | rw | Minute tens in BCD format.
  *RTC_TSTR_MNU* | 8  | 4  | 12 | rw | Minute units in BCD format.
   *RTC_TSTR_ST* | 4  | 3  | 7  | rw | Second tens in BCD format.
   *RTC_TSTR_SU* | 0  | 4  | 4  | rw | Second units in BCD format.
 --------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_TSDR*
 Address:     $40002834
 Reset:       $00000000
 Description: timestamp date register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=621
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+---------------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+---------------------------
  *RTC_TSDR_WDU* | 13 | 3  | 16 | rw | Week day units
   *RTC_TSDR_MT* | 12 | 1  | 13 | rw | Month tens in BCD format
   *RTC_TSDR_MU* | 8  | 4  | 12 | rw | Month units in BCD format
   *RTC_TSDR_DT* | 4  | 2  | 6  | rw | Date tens in BCD format
   *RTC_TSDR_DU* | 0  | 4  | 4  | rw | Date units in BCD format
 --------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_TSSSR*
 Address:     $40002838
 Reset:       $00000000
 Description: time-stamp sub second register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=622
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+------------------
  *RTC_TSSSR_SS* | 0  | 16 | 16 | rw | Sub second value
 --------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_CALR*
 Address:     $4000283C
 Reset:       $00000000
 Description: calibration register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=623
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------------------
    *RTC_CALR_CALP* | 15 | 1  | 16 | rw | Increase frequency of RTC by 488.5 ppm
   *RTC_CALR_CALW8* | 14 | 1  | 15 | rw | Use an 8-second calibration cycle period
  *RTC_CALR_CALW16* | 13 | 1  | 14 | rw | Use a 16-second calibration cycle period
    *RTC_CALR_CALM* | 0  | 9  | 9  | rw | Calibration minus
 -----------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_TAFCR*
 Address:     $40002840
 Reset:       $00000000
 Description: tamper and alternate function configuration register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=624
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+----------------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+----------------------------------------------
    *RTC_TAFCR_PC15MODE* | 23 | 1  | 24 | rw | PC15 mode
   *RTC_TAFCR_PC15VALUE* | 22 | 1  | 23 | rw | PC15 value
    *RTC_TAFCR_PC14MODE* | 21 | 1  | 22 | rw | PC14 mode
   *RTC_TAFCR_PC14VALUE* | 20 | 1  | 21 | rw | PC14 value
    *RTC_TAFCR_PC13MODE* | 19 | 1  | 20 | rw | PC13 mode
   *RTC_TAFCR_PC13VALUE* | 18 | 1  | 19 | rw | RTC_ALARM output type/PC13 value
  *RTC_TAFCR_TAMP_PUDIS* | 15 | 1  | 16 | rw | RTC_TAMPx pull-up disable
   *RTC_TAFCR_TAMP_PRCH* | 13 | 2  | 15 | rw | RTC_TAMPx precharge duration
     *RTC_TAFCR_TAMPFLT* | 11 | 2  | 13 | rw | RTC_TAMPx filter count
    *RTC_TAFCR_TAMPFREQ* | 8  | 3  | 11 | rw | Tamper sampling frequency
      *RTC_TAFCR_TAMPTS* | 7  | 1  | 8  | rw | Activate timestamp on tamper detection event
   *RTC_TAFCR_TAMP2_TRG* | 4  | 1  | 5  | rw | Active level for RTC_TAMP2 input
      *RTC_TAFCR_TAMP2E* | 3  | 1  | 4  | rw | RTC_TAMP2 input detection enable
      *RTC_TAFCR_TAMPIE* | 2  | 1  | 3  | rw | Tamper interrupt enable
    *RTC_TAFCR_TAMP1TRG* | 1  | 1  | 2  | rw | Active level for RTC_TAMP1 input
      *RTC_TAFCR_TAMP1E* | 0  | 1  | 1  | rw | RTC_TAMP1 input detection enable
 ----------------------+----+----+----+----+----------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_ALRMASSR*
 Address:     $40002844
 Reset:       $00000000
 Description: alarm A sub second register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=627
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-----------------------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-----------------------------------------------------
  *RTC_ALRMASSR_MASKSS* | 24 | 4  | 28 | rw | Mask the most-significant bits starting at this bit
      *RTC_ALRMASSR_SS* | 0  | 15 | 15 | rw | Sub seconds value
 ---------------------+----+----+----+----+-----------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_BKP0R*
 Address:     $40002850
 Reset:       $00000000
 Description: backup register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=628
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------
  *RTC_BKP0R_BKP* | 0  | 32 | 32 | rw | BKP
 ---------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_BKP1R*
 Address:     $40002854
 Reset:       $00000000
 Description: backup register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=628
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------
  *RTC_BKP1R_BKP* | 0  | 32 | 32 | rw | BKP
 ---------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_BKP2R*
 Address:     $40002858
 Reset:       $00000000
 Description: backup register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=628
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------
  *RTC_BKP2R_BKP* | 0  | 32 | 32 | rw | BKP
 ---------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_BKP3R*
 Address:     $4000285C
 Reset:       $00000000
 Description: backup register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=628
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------
  *RTC_BKP3R_BKP* | 0  | 32 | 32 | rw | BKP
 ---------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |RTC|
 Register:    *RTC_BKP4R*
 Address:     $40002860
 Reset:       $00000000
 Description: backup register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=628
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------
  *RTC_BKP4R_BKP* | 0  | 32 | 32 | rw | BKP
 ---------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_CR1*
 Address:     $40014000
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=522
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------------
   *TIM15_CR1_CKD* | 8  | 2  | 10 | rw | Clock division
  *TIM15_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM15_CR1_OPM* | 3  | 1  | 4  | rw | One-pulse mode
   *TIM15_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM15_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM15_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_CR2*
 Address:     $40014004
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=523
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------------------
   *TIM15_CR2_OIS2* | 10 | 1  | 11 | rw | Output Idle state 2
  *TIM15_CR2_OIS1N* | 9  | 1  | 10 | rw | Output Idle state 1
   *TIM15_CR2_OIS1* | 8  | 1  | 9  | rw | Output Idle state 1
    *TIM15_CR2_MMS* | 4  | 3  | 7  | rw | Master mode selection
   *TIM15_CR2_CCDS* | 3  | 1  | 4  | rw | Capture/compare DMA selection
   *TIM15_CR2_CCUS* | 2  | 1  | 3  | rw | Capture/compare control update selection
   *TIM15_CR2_CCPC* | 0  | 1  | 1  | rw | Capture/compare preloaded control
 -----------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_SMCR*
 Address:     $40014008
 Reset:       $0000
 Description: slave mode control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=524
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------
  *TIM15_SMCR_MSM* | 7  | 1  | 8  | rw | Master/Slave mode
   *TIM15_SMCR_TS* | 4  | 3  | 7  | rw | Trigger selection
  *TIM15_SMCR_SMS* | 0  | 3  | 3  | rw | Slave mode selection
 ----------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_DIER*
 Address:     $4001400C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=526
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+--------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+--------------------------------------
    *TIM15_DIER_TDE* | 14 | 1  | 15 | rw | Trigger DMA request enable
  *TIM15_DIER_CC2DE* | 10 | 1  | 11 | rw | Capture/Compare 2 DMA request enable
  *TIM15_DIER_CC1DE* | 9  | 1  | 10 | rw | Capture/Compare 1 DMA request enable
    *TIM15_DIER_UDE* | 8  | 1  | 9  | rw | Update DMA request enable
    *TIM15_DIER_BIE* | 7  | 1  | 8  | rw | Break interrupt enable
    *TIM15_DIER_TIE* | 6  | 1  | 7  | rw | Trigger interrupt enable
  *TIM15_DIER_COMIE* | 5  | 1  | 6  | rw | COM interrupt enable
  *TIM15_DIER_CC2IE* | 2  | 1  | 3  | rw | Capture/Compare 2 interrupt enable
  *TIM15_DIER_CC1IE* | 1  | 1  | 2  | rw | Capture/Compare 1 interrupt enable
    *TIM15_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 ------------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_SR*
 Address:     $40014010
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=527
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------------
  *TIM15_SR_CC2OF* | 10 | 1  | 11 | rw | Capture/compare 2 overcapture flag
  *TIM15_SR_CC1OF* | 9  | 1  | 10 | rw | Capture/Compare 1 overcapture flag
    *TIM15_SR_BIF* | 7  | 1  | 8  | rw | Break interrupt flag
    *TIM15_SR_TIF* | 6  | 1  | 7  | rw | Trigger interrupt flag
  *TIM15_SR_COMIF* | 5  | 1  | 6  | rw | COM interrupt flag
  *TIM15_SR_CC2IF* | 2  | 1  | 3  | rw | Capture/Compare 2 interrupt flag
  *TIM15_SR_CC1IF* | 1  | 1  | 2  | rw | Capture/compare 1 interrupt flag
    *TIM15_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 ----------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_EGR*
 Address:     $40014014
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=529
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------------------------------------
    *TIM15_EGR_BG* | 7  | 1  | 8  | rw | Break generation
    *TIM15_EGR_TG* | 6  | 1  | 7  | rw | Trigger generation
  *TIM15_EGR_COMG* | 5  | 1  | 6  | rw | Capture/Compare control update generation
  *TIM15_EGR_CC2G* | 2  | 1  | 3  | rw | Capture/compare 2 generation
  *TIM15_EGR_CC1G* | 1  | 1  | 2  | rw | Capture/compare 1 generation
    *TIM15_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 ----------------+----+----+----+----+-------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_CCMR1_Output*
 Address:     $40014018
 Reset:       $00000000
 Description: capture/compare mode register (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=530
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------+----+----+----+----+---------------------------------
                  Bitfield | bo | bw | be | ac | Description
 --------------------------+----+----+----+----+---------------------------------
   *TIM15_CCMR1_Output_OC2M* | 12 | 3  | 15 | rw | Output Compare 2 mode
  *TIM15_CCMR1_Output_OC2PE* | 11 | 1  | 12 | rw | Output Compare 2 preload enable
  *TIM15_CCMR1_Output_OC2FE* | 10 | 1  | 11 | rw | Output Compare 2 fast enable
   *TIM15_CCMR1_Output_CC2S* | 8  | 2  | 10 | rw | Capture/Compare 2 selection
   *TIM15_CCMR1_Output_OC1M* | 4  | 3  | 7  | rw | Output Compare 1 mode
  *TIM15_CCMR1_Output_OC1PE* | 3  | 1  | 4  | rw | Output Compare 1 preload enable
  *TIM15_CCMR1_Output_OC1FE* | 2  | 1  | 3  | rw | Output Compare 1 fast enable
   *TIM15_CCMR1_Output_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 --------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_CCMR1_Input*
 Address:     $40014018
 Reset:       $00000000
 Description: capture/compare mode register 1 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=531
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------+----+----+----+----+-----------------------------
                  Bitfield | bo | bw | be | ac | Description
 --------------------------+----+----+----+----+-----------------------------
    *TIM15_CCMR1_Input_IC2F* | 12 | 4  | 16 | rw | Input capture 2 filter
  *TIM15_CCMR1_Input_IC2PSC* | 10 | 2  | 12 | rw | Input capture 2 prescaler
    *TIM15_CCMR1_Input_CC2S* | 8  | 2  | 10 | rw | Capture/Compare 2 selection
    *TIM15_CCMR1_Input_IC1F* | 4  | 4  | 8  | rw | Input capture 1 filter
  *TIM15_CCMR1_Input_IC1PSC* | 2  | 2  | 4  | rw | Input capture 1 prescaler
    *TIM15_CCMR1_Input_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 --------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_CCER*
 Address:     $40014020
 Reset:       $0000
 Description: capture/compare enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=533
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------------
  *TIM15_CCER_CC2NP* | 7  | 1  | 8  | rw | Capture/Compare 2 output Polarity
   *TIM15_CCER_CC2P* | 5  | 1  | 6  | rw | Capture/Compare 2 output Polarity
   *TIM15_CCER_CC2E* | 4  | 1  | 5  | rw | Capture/Compare 2 output enable
  *TIM15_CCER_CC1NP* | 3  | 1  | 4  | rw | Capture/Compare 1 output Polarity
  *TIM15_CCER_CC1NE* | 2  | 1  | 3  | rw | Capture/Compare 1 complementary output enable
   *TIM15_CCER_CC1P* | 1  | 1  | 2  | rw | Capture/Compare 1 output Polarity
   *TIM15_CCER_CC1E* | 0  | 1  | 1  | rw | Capture/Compare 1 output enable
 ------------------+----+----+----+----+-----------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_CNT*
 Address:     $40014024
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=536
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+---------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+---------------
  *TIM15_CNT_CNT* | 0  | 16 | 16 | rw | counter value
 ---------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_PSC*
 Address:     $40014028
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=536
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-----------------
  *TIM15_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 ---------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_ARR*
 Address:     $4001402C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=536
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------
  *TIM15_ARR_ARR* | 0  | 16 | 16 | rw | Auto-reload value
 ---------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_RCR*
 Address:     $40014030
 Reset:       $0000
 Description: repetition counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=537
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------------
  *TIM15_RCR_REP* | 0  | 8  | 8  | rw | Repetition counter value
 ---------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_CCR1*
 Address:     $40014034
 Reset:       $00000000
 Description: capture/compare register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=537
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-------------------------
  *TIM15_CCR1_CCR1* | 0  | 16 | 16 | rw | Capture/Compare 1 value
 -----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_CCR2*
 Address:     $40014038
 Reset:       $00000000
 Description: capture/compare register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=537
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-------------------------
  *TIM15_CCR2_CCR2* | 0  | 16 | 16 | rw | Capture/Compare 2 value
 -----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_BDTR*
 Address:     $40014044
 Reset:       $0000
 Description: break and dead-time register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=538
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------------
   *TIM15_BDTR_MOE* | 15 | 1  | 16 | rw | Main output enable
   *TIM15_BDTR_AOE* | 14 | 1  | 15 | rw | Automatic output enable
   *TIM15_BDTR_BKP* | 13 | 1  | 14 | rw | Break polarity
   *TIM15_BDTR_BKE* | 12 | 1  | 13 | rw | Break enable
  *TIM15_BDTR_OSSR* | 11 | 1  | 12 | rw | Off-state selection for Run mode
  *TIM15_BDTR_OSSI* | 10 | 1  | 11 | rw | Off-state selection for Idle mode
  *TIM15_BDTR_LOCK* | 8  | 2  | 10 | rw | Lock configuration
   *TIM15_BDTR_DTG* | 0  | 8  | 8  | rw | Dead-time generator setup
 -----------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_DCR*
 Address:     $40014048
 Reset:       $0000
 Description: DMA control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=540
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------
  *TIM15_DCR_DBL* | 8  | 5  | 13 | rw | DMA burst length
  *TIM15_DCR_DBA* | 0  | 5  | 5  | rw | DMA base address
 ---------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM15|
 Register:    *TIM15_DMAR*
 Address:     $4001404C
 Reset:       $0000
 Description: DMA address for full transfer
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=541
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+---------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+---------------------------------
  *TIM15_DMAR_DMAB* | 0  | 16 | 16 | rw | DMA register for burst accesses
 -----------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_CR1*
 Address:     $40014400
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=542
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------------
   *TIM16_CR1_CKD* | 8  | 2  | 10 | rw | Clock division
  *TIM16_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM16_CR1_OPM* | 3  | 1  | 4  | rw | One-pulse mode
   *TIM16_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM16_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM16_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_CR2*
 Address:     $40014404
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=544
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------------------
  *TIM16_CR2_OIS1N* | 9  | 1  | 10 | rw | Output Idle state 1
   *TIM16_CR2_OIS1* | 8  | 1  | 9  | rw | Output Idle state 1
   *TIM16_CR2_CCDS* | 3  | 1  | 4  | rw | Capture/compare DMA selection
   *TIM16_CR2_CCUS* | 2  | 1  | 3  | rw | Capture/compare control update selection
   *TIM16_CR2_CCPC* | 0  | 1  | 1  | rw | Capture/compare preloaded control
 -----------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_DIER*
 Address:     $4001440C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=544
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+--------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+--------------------------------------
    *TIM16_DIER_TDE* | 14 | 1  | 15 | rw | Trigger DMA request enable
  *TIM16_DIER_CC1DE* | 9  | 1  | 10 | rw | Capture/Compare 1 DMA request enable
    *TIM16_DIER_UDE* | 8  | 1  | 9  | rw | Update DMA request enable
    *TIM16_DIER_BIE* | 7  | 1  | 8  | rw | Break interrupt enable
    *TIM16_DIER_TIE* | 6  | 1  | 7  | rw | Trigger interrupt enable
  *TIM16_DIER_COMIE* | 5  | 1  | 6  | rw | COM interrupt enable
  *TIM16_DIER_CC1IE* | 1  | 1  | 2  | rw | Capture/Compare 1 interrupt enable
    *TIM16_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 ------------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_SR*
 Address:     $40014410
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=545
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------------
  *TIM16_SR_CC1OF* | 9  | 1  | 10 | rw | Capture/Compare 1 overcapture flag
    *TIM16_SR_BIF* | 7  | 1  | 8  | rw | Break interrupt flag
    *TIM16_SR_TIF* | 6  | 1  | 7  | rw | Trigger interrupt flag
  *TIM16_SR_COMIF* | 5  | 1  | 6  | rw | COM interrupt flag
  *TIM16_SR_CC1IF* | 1  | 1  | 2  | rw | Capture/compare 1 interrupt flag
    *TIM16_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 ----------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_EGR*
 Address:     $40014414
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=546
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------------------------------------
    *TIM16_EGR_BG* | 7  | 1  | 8  | rw | Break generation
    *TIM16_EGR_TG* | 6  | 1  | 7  | rw | Trigger generation
  *TIM16_EGR_COMG* | 5  | 1  | 6  | rw | Capture/Compare control update generation
  *TIM16_EGR_CC1G* | 1  | 1  | 2  | rw | Capture/compare 1 generation
    *TIM16_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 ----------------+----+----+----+----+-------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_CCMR1_Output*
 Address:     $40014418
 Reset:       $00000000
 Description: capture/compare mode register (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=547
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------+----+----+----+----+---------------------------------
                  Bitfield | bo | bw | be | ac | Description
 --------------------------+----+----+----+----+---------------------------------
   *TIM16_CCMR1_Output_OC1M* | 4  | 3  | 7  | rw | Output Compare 1 mode
  *TIM16_CCMR1_Output_OC1PE* | 3  | 1  | 4  | rw | Output Compare 1 preload enable
  *TIM16_CCMR1_Output_OC1FE* | 2  | 1  | 3  | rw | Output Compare 1 fast enable
   *TIM16_CCMR1_Output_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 --------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_CCMR1_Input*
 Address:     $40014418
 Reset:       $00000000
 Description: capture/compare mode register 1 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=548
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------+----+----+----+----+-----------------------------
                  Bitfield | bo | bw | be | ac | Description
 --------------------------+----+----+----+----+-----------------------------
    *TIM16_CCMR1_Input_IC1F* | 4  | 4  | 8  | rw | Input capture 1 filter
  *TIM16_CCMR1_Input_IC1PSC* | 2  | 2  | 4  | rw | Input capture 1 prescaler
    *TIM16_CCMR1_Input_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 --------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_CCER*
 Address:     $40014420
 Reset:       $0000
 Description: capture/compare enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=550
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------------
  *TIM16_CCER_CC1NP* | 3  | 1  | 4  | rw | Capture/Compare 1 output Polarity
  *TIM16_CCER_CC1NE* | 2  | 1  | 3  | rw | Capture/Compare 1 complementary output enable
   *TIM16_CCER_CC1P* | 1  | 1  | 2  | rw | Capture/Compare 1 output Polarity
   *TIM16_CCER_CC1E* | 0  | 1  | 1  | rw | Capture/Compare 1 output enable
 ------------------+----+----+----+----+-----------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_CNT*
 Address:     $40014424
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=553
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+---------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+---------------
  *TIM16_CNT_CNT* | 0  | 16 | 16 | rw | counter value
 ---------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_PSC*
 Address:     $40014428
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=553
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-----------------
  *TIM16_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 ---------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_ARR*
 Address:     $4001442C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=553
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------
  *TIM16_ARR_ARR* | 0  | 16 | 16 | rw | Auto-reload value
 ---------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_RCR*
 Address:     $40014430
 Reset:       $0000
 Description: repetition counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=554
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------------
  *TIM16_RCR_REP* | 0  | 8  | 8  | rw | Repetition counter value
 ---------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_CCR1*
 Address:     $40014434
 Reset:       $00000000
 Description: capture/compare register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=554
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-------------------------
  *TIM16_CCR1_CCR1* | 0  | 16 | 16 | rw | Capture/Compare 1 value
 -----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_BDTR*
 Address:     $40014444
 Reset:       $0000
 Description: break and dead-time register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=554
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------------
   *TIM16_BDTR_MOE* | 15 | 1  | 16 | rw | Main output enable
   *TIM16_BDTR_AOE* | 14 | 1  | 15 | rw | Automatic output enable
   *TIM16_BDTR_BKP* | 13 | 1  | 14 | rw | Break polarity
   *TIM16_BDTR_BKE* | 12 | 1  | 13 | rw | Break enable
  *TIM16_BDTR_OSSR* | 11 | 1  | 12 | rw | Off-state selection for Run mode
  *TIM16_BDTR_OSSI* | 10 | 1  | 11 | rw | Off-state selection for Idle mode
  *TIM16_BDTR_LOCK* | 8  | 2  | 10 | rw | Lock configuration
   *TIM16_BDTR_DTG* | 0  | 8  | 8  | rw | Dead-time generator setup
 -----------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_DCR*
 Address:     $40014448
 Reset:       $0000
 Description: DMA control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=556
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------
  *TIM16_DCR_DBL* | 8  | 5  | 13 | rw | DMA burst length
  *TIM16_DCR_DBA* | 0  | 5  | 5  | rw | DMA base address
 ---------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM16|
 Register:    *TIM16_DMAR*
 Address:     $4001444C
 Reset:       $0000
 Description: DMA address for full transfer
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=557
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+---------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+---------------------------------
  *TIM16_DMAR_DMAB* | 0  | 16 | 16 | rw | DMA register for burst accesses
 -----------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_CR1*
 Address:     $40014800
 Reset:       $0000
 Description: control register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=542
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+----------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+----------------------------
   *TIM17_CR1_CKD* | 8  | 2  | 10 | rw | Clock division
  *TIM17_CR1_ARPE* | 7  | 1  | 8  | rw | Auto-reload preload enable
   *TIM17_CR1_OPM* | 3  | 1  | 4  | rw | One-pulse mode
   *TIM17_CR1_URS* | 2  | 1  | 3  | rw | Update request source
  *TIM17_CR1_UDIS* | 1  | 1  | 2  | rw | Update disable
   *TIM17_CR1_CEN* | 0  | 1  | 1  | rw | Counter enable
 ----------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_CR2*
 Address:     $40014804
 Reset:       $0000
 Description: control register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=544
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------------------
  *TIM17_CR2_OIS1N* | 9  | 1  | 10 | rw | Output Idle state 1
   *TIM17_CR2_OIS1* | 8  | 1  | 9  | rw | Output Idle state 1
   *TIM17_CR2_CCDS* | 3  | 1  | 4  | rw | Capture/compare DMA selection
   *TIM17_CR2_CCUS* | 2  | 1  | 3  | rw | Capture/compare control update selection
   *TIM17_CR2_CCPC* | 0  | 1  | 1  | rw | Capture/compare preloaded control
 -----------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_DIER*
 Address:     $4001480C
 Reset:       $0000
 Description: DMA/Interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=544
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+--------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+--------------------------------------
    *TIM17_DIER_TDE* | 14 | 1  | 15 | rw | Trigger DMA request enable
  *TIM17_DIER_CC1DE* | 9  | 1  | 10 | rw | Capture/Compare 1 DMA request enable
    *TIM17_DIER_UDE* | 8  | 1  | 9  | rw | Update DMA request enable
    *TIM17_DIER_BIE* | 7  | 1  | 8  | rw | Break interrupt enable
    *TIM17_DIER_TIE* | 6  | 1  | 7  | rw | Trigger interrupt enable
  *TIM17_DIER_COMIE* | 5  | 1  | 6  | rw | COM interrupt enable
  *TIM17_DIER_CC1IE* | 1  | 1  | 2  | rw | Capture/Compare 1 interrupt enable
    *TIM17_DIER_UIE* | 0  | 1  | 1  | rw | Update interrupt enable
 ------------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_SR*
 Address:     $40014810
 Reset:       $0000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=545
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------------
  *TIM17_SR_CC1OF* | 9  | 1  | 10 | rw | Capture/Compare 1 overcapture flag
    *TIM17_SR_BIF* | 7  | 1  | 8  | rw | Break interrupt flag
    *TIM17_SR_TIF* | 6  | 1  | 7  | rw | Trigger interrupt flag
  *TIM17_SR_COMIF* | 5  | 1  | 6  | rw | COM interrupt flag
  *TIM17_SR_CC1IF* | 1  | 1  | 2  | rw | Capture/compare 1 interrupt flag
    *TIM17_SR_UIF* | 0  | 1  | 1  | rw | Update interrupt flag
 ----------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_EGR*
 Address:     $40014814
 Reset:       $0000
 Description: event generation register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=546
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------------------------------------
    *TIM17_EGR_BG* | 7  | 1  | 8  | rw | Break generation
    *TIM17_EGR_TG* | 6  | 1  | 7  | rw | Trigger generation
  *TIM17_EGR_COMG* | 5  | 1  | 6  | rw | Capture/Compare control update generation
  *TIM17_EGR_CC1G* | 1  | 1  | 2  | rw | Capture/compare 1 generation
    *TIM17_EGR_UG* | 0  | 1  | 1  | rw | Update generation
 ----------------+----+----+----+----+-------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_CCMR1_Output*
 Address:     $40014818
 Reset:       $00000000
 Description: capture/compare mode register (output mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=547
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------+----+----+----+----+---------------------------------
                  Bitfield | bo | bw | be | ac | Description
 --------------------------+----+----+----+----+---------------------------------
   *TIM17_CCMR1_Output_OC1M* | 4  | 3  | 7  | rw | Output Compare 1 mode
  *TIM17_CCMR1_Output_OC1PE* | 3  | 1  | 4  | rw | Output Compare 1 preload enable
  *TIM17_CCMR1_Output_OC1FE* | 2  | 1  | 3  | rw | Output Compare 1 fast enable
   *TIM17_CCMR1_Output_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 --------------------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_CCMR1_Input*
 Address:     $40014818
 Reset:       $00000000
 Description: capture/compare mode register 1 (input mode)
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=548
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------------+----+----+----+----+-----------------------------
                  Bitfield | bo | bw | be | ac | Description
 --------------------------+----+----+----+----+-----------------------------
    *TIM17_CCMR1_Input_IC1F* | 4  | 4  | 8  | rw | Input capture 1 filter
  *TIM17_CCMR1_Input_IC1PSC* | 2  | 2  | 4  | rw | Input capture 1 prescaler
    *TIM17_CCMR1_Input_CC1S* | 0  | 2  | 2  | rw | Capture/Compare 1 selection
 --------------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_CCER*
 Address:     $40014820
 Reset:       $0000
 Description: capture/compare enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=550
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------------
  *TIM17_CCER_CC1NP* | 3  | 1  | 4  | rw | Capture/Compare 1 output Polarity
  *TIM17_CCER_CC1NE* | 2  | 1  | 3  | rw | Capture/Compare 1 complementary output enable
   *TIM17_CCER_CC1P* | 1  | 1  | 2  | rw | Capture/Compare 1 output Polarity
   *TIM17_CCER_CC1E* | 0  | 1  | 1  | rw | Capture/Compare 1 output enable
 ------------------+----+----+----+----+-----------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_CNT*
 Address:     $40014824
 Reset:       $00000000
 Description: counter
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=553
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+---------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+---------------
  *TIM17_CNT_CNT* | 0  | 16 | 16 | rw | counter value
 ---------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_PSC*
 Address:     $40014828
 Reset:       $0000
 Description: prescaler
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=553
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-----------------
  *TIM17_PSC_PSC* | 0  | 16 | 16 | rw | Prescaler value
 ---------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_ARR*
 Address:     $4001482C
 Reset:       $00000000
 Description: auto-reload register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=553
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------
  *TIM17_ARR_ARR* | 0  | 16 | 16 | rw | Auto-reload value
 ---------------+----+----+----+----+-------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_RCR*
 Address:     $40014830
 Reset:       $0000
 Description: repetition counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=554
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+--------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+--------------------------
  *TIM17_RCR_REP* | 0  | 8  | 8  | rw | Repetition counter value
 ---------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_CCR1*
 Address:     $40014834
 Reset:       $00000000
 Description: capture/compare register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=554
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-------------------------
  *TIM17_CCR1_CCR1* | 0  | 16 | 16 | rw | Capture/Compare 1 value
 -----------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_BDTR*
 Address:     $40014844
 Reset:       $0000
 Description: break and dead-time register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=554
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------------------
   *TIM17_BDTR_MOE* | 15 | 1  | 16 | rw | Main output enable
   *TIM17_BDTR_AOE* | 14 | 1  | 15 | rw | Automatic output enable
   *TIM17_BDTR_BKP* | 13 | 1  | 14 | rw | Break polarity
   *TIM17_BDTR_BKE* | 12 | 1  | 13 | rw | Break enable
  *TIM17_BDTR_OSSR* | 11 | 1  | 12 | rw | Off-state selection for Run mode
  *TIM17_BDTR_OSSI* | 10 | 1  | 11 | rw | Off-state selection for Idle mode
  *TIM17_BDTR_LOCK* | 8  | 2  | 10 | rw | Lock configuration
   *TIM17_BDTR_DTG* | 0  | 8  | 8  | rw | Dead-time generator setup
 -----------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_DCR*
 Address:     $40014848
 Reset:       $0000
 Description: DMA control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=556
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------
  *TIM17_DCR_DBL* | 8  | 5  | 13 | rw | DMA burst length
  *TIM17_DCR_DBA* | 0  | 5  | 5  | rw | DMA base address
 ---------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TIM17|
 Register:    *TIM17_DMAR*
 Address:     $4001484C
 Reset:       $0000
 Description: DMA address for full transfer
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=557
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+---------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+---------------------------------
  *TIM17_DMAR_DMAB* | 0  | 16 | 16 | rw | DMA register for burst accesses
 -----------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_CR*
 Address:     $40024000
 Reset:       $00000000
 Description: control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=318
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------------
     *TSC_CR_CTPH* | 28 | 4  | 32 | rw | Charge transfer pulse high
     *TSC_CR_CTPL* | 24 | 4  | 28 | rw | Charge transfer pulse low
      *TSC_CR_SSD* | 17 | 7  | 24 | rw | Spread spectrum deviation
      *TSC_CR_SSE* | 16 | 1  | 17 | rw | Spread spectrum enable
    *TSC_CR_SSPSC* | 15 | 1  | 16 | rw | Spread spectrum prescaler
    *TSC_CR_PGPSC* | 12 | 3  | 15 | rw | pulse generator prescaler
      *TSC_CR_MCV* | 5  | 3  | 8  | rw | Max count value
    *TSC_CR_IODEF* | 4  | 1  | 5  | rw | I/O Default mode
  *TSC_CR_SYNCPOL* | 3  | 1  | 4  | rw | Synchronization pin polarity
       *TSC_CR_AM* | 2  | 1  | 3  | rw | Acquisition mode
    *TSC_CR_START* | 1  | 1  | 2  | rw | Start a new acquisition
     *TSC_CR_TSCE* | 0  | 1  | 1  | rw | Touch sensing controller enable
 ----------------+----+----+----+----+---------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IER*
 Address:     $40024004
 Reset:       $00000000
 Description: interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=320
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------------------------------
  *TSC_IER_MCEIE* | 1  | 1  | 2  | rw | Max count error interrupt enable
  *TSC_IER_EOAIE* | 0  | 1  | 1  | rw | End of acquisition interrupt enable
 ---------------+----+----+----+----+-------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_ICR*
 Address:     $40024008
 Reset:       $00000000
 Description: interrupt clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=321
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+------------------------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+------------------------------------
  *TSC_ICR_MCEIC* | 1  | 1  | 2  | rw | Max count error interrupt clear
  *TSC_ICR_EOAIC* | 0  | 1  | 1  | rw | End of acquisition interrupt clear
 ---------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_ISR*
 Address:     $4002400C
 Reset:       $00000000
 Description: interrupt status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=322
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+-------------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+-------------------------
  *TSC_ISR_MCEF* | 1  | 1  | 2  | rw | Max count error flag
  *TSC_ISR_EOAF* | 0  | 1  | 1  | rw | End of acquisition flag
 --------------+----+----+----+----+-------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOHCR*
 Address:     $40024010
 Reset:       $FFFFFFFF
 Description: I/O hysteresis control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=322
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------
  *TSC_IOHCR_G6_IO4* | 23 | 1  | 24 | rw | G6_IO4 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G6_IO3* | 22 | 1  | 23 | rw | G6_IO3 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G6_IO2* | 21 | 1  | 22 | rw | G6_IO2 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G6_IO1* | 20 | 1  | 21 | rw | G6_IO1 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G5_IO4* | 19 | 1  | 20 | rw | G5_IO4 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G5_IO3* | 18 | 1  | 19 | rw | G5_IO3 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G5_IO2* | 17 | 1  | 18 | rw | G5_IO2 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G5_IO1* | 16 | 1  | 17 | rw | G5_IO1 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G4_IO4* | 15 | 1  | 16 | rw | G4_IO4 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G4_IO3* | 14 | 1  | 15 | rw | G4_IO3 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G4_IO2* | 13 | 1  | 14 | rw | G4_IO2 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G4_IO1* | 12 | 1  | 13 | rw | G4_IO1 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G3_IO4* | 11 | 1  | 12 | rw | G3_IO4 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G3_IO3* | 10 | 1  | 11 | rw | G3_IO3 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G3_IO2* | 9  | 1  | 10 | rw | G3_IO2 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G3_IO1* | 8  | 1  | 9  | rw | G3_IO1 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G2_IO4* | 7  | 1  | 8  | rw | G2_IO4 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G2_IO3* | 6  | 1  | 7  | rw | G2_IO3 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G2_IO2* | 5  | 1  | 6  | rw | G2_IO2 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G2_IO1* | 4  | 1  | 5  | rw | G2_IO1 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G1_IO4* | 3  | 1  | 4  | rw | G1_IO4 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G1_IO3* | 2  | 1  | 3  | rw | G1_IO3 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G1_IO2* | 1  | 1  | 2  | rw | G1_IO2 Schmitt trigger hysteresis mode
  *TSC_IOHCR_G1_IO1* | 0  | 1  | 1  | rw | G1_IO1 Schmitt trigger hysteresis mode
 ------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOASCR*
 Address:     $40024018
 Reset:       $00000000
 Description: I/O analog switch control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=323
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+-----------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+-----------------------------
  *TSC_IOASCR_G6_IO4* | 23 | 1  | 24 | rw | G6_IO4 analog switch enable
  *TSC_IOASCR_G6_IO3* | 22 | 1  | 23 | rw | G6_IO3 analog switch enable
  *TSC_IOASCR_G6_IO2* | 21 | 1  | 22 | rw | G6_IO2 analog switch enable
  *TSC_IOASCR_G6_IO1* | 20 | 1  | 21 | rw | G6_IO1 analog switch enable
  *TSC_IOASCR_G5_IO4* | 19 | 1  | 20 | rw | G5_IO4 analog switch enable
  *TSC_IOASCR_G5_IO3* | 18 | 1  | 19 | rw | G5_IO3 analog switch enable
  *TSC_IOASCR_G5_IO2* | 17 | 1  | 18 | rw | G5_IO2 analog switch enable
  *TSC_IOASCR_G5_IO1* | 16 | 1  | 17 | rw | G5_IO1 analog switch enable
  *TSC_IOASCR_G4_IO4* | 15 | 1  | 16 | rw | G4_IO4 analog switch enable
  *TSC_IOASCR_G4_IO3* | 14 | 1  | 15 | rw | G4_IO3 analog switch enable
  *TSC_IOASCR_G4_IO2* | 13 | 1  | 14 | rw | G4_IO2 analog switch enable
  *TSC_IOASCR_G4_IO1* | 12 | 1  | 13 | rw | G4_IO1 analog switch enable
  *TSC_IOASCR_G3_IO4* | 11 | 1  | 12 | rw | G3_IO4 analog switch enable
  *TSC_IOASCR_G3_IO3* | 10 | 1  | 11 | rw | G3_IO3 analog switch enable
  *TSC_IOASCR_G3_IO2* | 9  | 1  | 10 | rw | G3_IO2 analog switch enable
  *TSC_IOASCR_G3_IO1* | 8  | 1  | 9  | rw | G3_IO1 analog switch enable
  *TSC_IOASCR_G2_IO4* | 7  | 1  | 8  | rw | G2_IO4 analog switch enable
  *TSC_IOASCR_G2_IO3* | 6  | 1  | 7  | rw | G2_IO3 analog switch enable
  *TSC_IOASCR_G2_IO2* | 5  | 1  | 6  | rw | G2_IO2 analog switch enable
  *TSC_IOASCR_G2_IO1* | 4  | 1  | 5  | rw | G2_IO1 analog switch enable
  *TSC_IOASCR_G1_IO4* | 3  | 1  | 4  | rw | G1_IO4 analog switch enable
  *TSC_IOASCR_G1_IO3* | 2  | 1  | 3  | rw | G1_IO3 analog switch enable
  *TSC_IOASCR_G1_IO2* | 1  | 1  | 2  | rw | G1_IO2 analog switch enable
  *TSC_IOASCR_G1_IO1* | 0  | 1  | 1  | rw | G1_IO1 analog switch enable
 -------------------+----+----+----+----+-----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOSCR*
 Address:     $40024020
 Reset:       $00000000
 Description: I/O sampling control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=323
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------
  *TSC_IOSCR_G6_IO4* | 23 | 1  | 24 | rw | G6_IO4 sampling mode
  *TSC_IOSCR_G6_IO3* | 22 | 1  | 23 | rw | G6_IO3 sampling mode
  *TSC_IOSCR_G6_IO2* | 21 | 1  | 22 | rw | G6_IO2 sampling mode
  *TSC_IOSCR_G6_IO1* | 20 | 1  | 21 | rw | G6_IO1 sampling mode
  *TSC_IOSCR_G5_IO4* | 19 | 1  | 20 | rw | G5_IO4 sampling mode
  *TSC_IOSCR_G5_IO3* | 18 | 1  | 19 | rw | G5_IO3 sampling mode
  *TSC_IOSCR_G5_IO2* | 17 | 1  | 18 | rw | G5_IO2 sampling mode
  *TSC_IOSCR_G5_IO1* | 16 | 1  | 17 | rw | G5_IO1 sampling mode
  *TSC_IOSCR_G4_IO4* | 15 | 1  | 16 | rw | G4_IO4 sampling mode
  *TSC_IOSCR_G4_IO3* | 14 | 1  | 15 | rw | G4_IO3 sampling mode
  *TSC_IOSCR_G4_IO2* | 13 | 1  | 14 | rw | G4_IO2 sampling mode
  *TSC_IOSCR_G4_IO1* | 12 | 1  | 13 | rw | G4_IO1 sampling mode
  *TSC_IOSCR_G3_IO4* | 11 | 1  | 12 | rw | G3_IO4 sampling mode
  *TSC_IOSCR_G3_IO3* | 10 | 1  | 11 | rw | G3_IO3 sampling mode
  *TSC_IOSCR_G3_IO2* | 9  | 1  | 10 | rw | G3_IO2 sampling mode
  *TSC_IOSCR_G3_IO1* | 8  | 1  | 9  | rw | G3_IO1 sampling mode
  *TSC_IOSCR_G2_IO4* | 7  | 1  | 8  | rw | G2_IO4 sampling mode
  *TSC_IOSCR_G2_IO3* | 6  | 1  | 7  | rw | G2_IO3 sampling mode
  *TSC_IOSCR_G2_IO2* | 5  | 1  | 6  | rw | G2_IO2 sampling mode
  *TSC_IOSCR_G2_IO1* | 4  | 1  | 5  | rw | G2_IO1 sampling mode
  *TSC_IOSCR_G1_IO4* | 3  | 1  | 4  | rw | G1_IO4 sampling mode
  *TSC_IOSCR_G1_IO3* | 2  | 1  | 3  | rw | G1_IO3 sampling mode
  *TSC_IOSCR_G1_IO2* | 1  | 1  | 2  | rw | G1_IO2 sampling mode
  *TSC_IOSCR_G1_IO1* | 0  | 1  | 1  | rw | G1_IO1 sampling mode
 ------------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOCCR*
 Address:     $40024028
 Reset:       $00000000
 Description: I/O channel control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=324
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+---------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+---------------------
  *TSC_IOCCR_G6_IO4* | 23 | 1  | 24 | rw | G6_IO4 channel mode
  *TSC_IOCCR_G6_IO3* | 22 | 1  | 23 | rw | G6_IO3 channel mode
  *TSC_IOCCR_G6_IO2* | 21 | 1  | 22 | rw | G6_IO2 channel mode
  *TSC_IOCCR_G6_IO1* | 20 | 1  | 21 | rw | G6_IO1 channel mode
  *TSC_IOCCR_G5_IO4* | 19 | 1  | 20 | rw | G5_IO4 channel mode
  *TSC_IOCCR_G5_IO3* | 18 | 1  | 19 | rw | G5_IO3 channel mode
  *TSC_IOCCR_G5_IO2* | 17 | 1  | 18 | rw | G5_IO2 channel mode
  *TSC_IOCCR_G5_IO1* | 16 | 1  | 17 | rw | G5_IO1 channel mode
  *TSC_IOCCR_G4_IO4* | 15 | 1  | 16 | rw | G4_IO4 channel mode
  *TSC_IOCCR_G4_IO3* | 14 | 1  | 15 | rw | G4_IO3 channel mode
  *TSC_IOCCR_G4_IO2* | 13 | 1  | 14 | rw | G4_IO2 channel mode
  *TSC_IOCCR_G4_IO1* | 12 | 1  | 13 | rw | G4_IO1 channel mode
  *TSC_IOCCR_G3_IO4* | 11 | 1  | 12 | rw | G3_IO4 channel mode
  *TSC_IOCCR_G3_IO3* | 10 | 1  | 11 | rw | G3_IO3 channel mode
  *TSC_IOCCR_G3_IO2* | 9  | 1  | 10 | rw | G3_IO2 channel mode
  *TSC_IOCCR_G3_IO1* | 8  | 1  | 9  | rw | G3_IO1 channel mode
  *TSC_IOCCR_G2_IO4* | 7  | 1  | 8  | rw | G2_IO4 channel mode
  *TSC_IOCCR_G2_IO3* | 6  | 1  | 7  | rw | G2_IO3 channel mode
  *TSC_IOCCR_G2_IO2* | 5  | 1  | 6  | rw | G2_IO2 channel mode
  *TSC_IOCCR_G2_IO1* | 4  | 1  | 5  | rw | G2_IO1 channel mode
  *TSC_IOCCR_G1_IO4* | 3  | 1  | 4  | rw | G1_IO4 channel mode
  *TSC_IOCCR_G1_IO3* | 2  | 1  | 3  | rw | G1_IO3 channel mode
  *TSC_IOCCR_G1_IO2* | 1  | 1  | 2  | rw | G1_IO2 channel mode
  *TSC_IOCCR_G1_IO1* | 0  | 1  | 1  | rw | G1_IO1 channel mode
 ------------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOGCSR*
 Address:     $40024030
 Reset:       $00000000
 Description: I/O group control status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=324
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------------------
  *TSC_IOGCSR_G8S* | 23 | 1  | 24 | rw | Analog I/O group x status
  *TSC_IOGCSR_G7S* | 22 | 1  | 23 | rw | Analog I/O group x status
  *TSC_IOGCSR_G6S* | 21 | 1  | 22 | ro | Analog I/O group x status
  *TSC_IOGCSR_G5S* | 20 | 1  | 21 | ro | Analog I/O group x status
  *TSC_IOGCSR_G4S* | 19 | 1  | 20 | ro | Analog I/O group x status
  *TSC_IOGCSR_G3S* | 18 | 1  | 19 | ro | Analog I/O group x status
  *TSC_IOGCSR_G2S* | 17 | 1  | 18 | ro | Analog I/O group x status
  *TSC_IOGCSR_G1S* | 16 | 1  | 17 | ro | Analog I/O group x status
  *TSC_IOGCSR_G8E* | 7  | 1  | 8  | rw | Analog I/O group x enable
  *TSC_IOGCSR_G7E* | 6  | 1  | 7  | rw | Analog I/O group x enable
  *TSC_IOGCSR_G6E* | 5  | 1  | 6  | rw | Analog I/O group x enable
  *TSC_IOGCSR_G5E* | 4  | 1  | 5  | rw | Analog I/O group x enable
  *TSC_IOGCSR_G4E* | 3  | 1  | 4  | rw | Analog I/O group x enable
  *TSC_IOGCSR_G3E* | 2  | 1  | 3  | rw | Analog I/O group x enable
  *TSC_IOGCSR_G2E* | 1  | 1  | 2  | rw | Analog I/O group x enable
  *TSC_IOGCSR_G1E* | 0  | 1  | 1  | rw | Analog I/O group x enable
 ----------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOG1CR*
 Address:     $40024034
 Reset:       $00000000
 Description: I/O group x counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=325
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------
  *TSC_IOG1CR_CNT* | 0  | 14 | 14 | rw | Counter value
 ----------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOG2CR*
 Address:     $40024038
 Reset:       $00000000
 Description: I/O group x counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=325
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------
  *TSC_IOG2CR_CNT* | 0  | 14 | 14 | rw | Counter value
 ----------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOG3CR*
 Address:     $4002403C
 Reset:       $00000000
 Description: I/O group x counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=325
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------
  *TSC_IOG3CR_CNT* | 0  | 14 | 14 | rw | Counter value
 ----------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOG4CR*
 Address:     $40024040
 Reset:       $00000000
 Description: I/O group x counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=325
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------
  *TSC_IOG4CR_CNT* | 0  | 14 | 14 | rw | Counter value
 ----------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOG5CR*
 Address:     $40024044
 Reset:       $00000000
 Description: I/O group x counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=325
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------
  *TSC_IOG5CR_CNT* | 0  | 14 | 14 | rw | Counter value
 ----------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |TSC|
 Register:    *TSC_IOG6CR*
 Address:     $40024048
 Reset:       $00000000
 Description: I/O group x counter register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=325
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------
  *TSC_IOG6CR_CNT* | 0  | 14 | 14 | rw | Counter value
 ----------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CEC|
 Register:    *CEC_CR*
 Address:     $40007800
 Reset:       $00000000
 Description: control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=912
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+---------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+---------------------
  *CEC_CR_TXEOM* | 2  | 1  | 3  | rw | Tx End Of Message
  *CEC_CR_TXSOM* | 1  | 1  | 2  | rw | Tx start of message
  *CEC_CR_CECEN* | 0  | 1  | 1  | rw | CEC Enable
 --------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CEC|
 Register:    *CEC_CFGR*
 Address:     $40007804
 Reset:       $00000000
 Description: configuration register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=913
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+---------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+---------------------------------------------
  *CEC_CFGR_LBPEGEN* | 11 | 1  | 12 | rw | Generate Error-Bit on Long Bit Period Error
   *CEC_CFGR_BREGEN* | 10 | 1  | 11 | rw | Generate error-bit on bit rising error
   *CEC_CFGR_BRESTP* | 9  | 1  | 10 | rw | Rx-stop on bit rising error
    *CEC_CFGR_RXTOL* | 8  | 1  | 9  | rw | Rx-Tolerance
      *CEC_CFGR_SFT* | 5  | 3  | 8  | rw | Signal Free Time
     *CEC_CFGR_LSTN* | 4  | 1  | 5  | rw | Listen mode
      *CEC_CFGR_OAR* | 0  | 4  | 4  | rw | Own Address
 ------------------+----+----+----+----+---------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CEC|
 Register:    *CEC_TXDR*
 Address:     $40007808
 Reset:       $00000000
 Description: Tx data register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=915
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+------------------
  *CEC_TXDR_TXD* | 0  | 8  | 8  | rw | Tx Data register
 --------------+----+----+----+----+------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CEC|
 Register:    *CEC_RXDR*
 Address:     $4000780C
 Reset:       $00000000
 Description: Rx Data Register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=915
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+----------------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+----------------------
  *CEC_RXDR_RXDR* | 0  | 8  | 8  | rw | CEC Rx Data Register
 ---------------+----+----+----+----+----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CEC|
 Register:    *CEC_ISR*
 Address:     $40007810
 Reset:       $00000000
 Description: Interrupt and Status Register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=915
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------------
  *CEC_ISR_TXACKE* | 12 | 1  | 13 | rw | Tx-Missing acknowledge error
   *CEC_ISR_TXERR* | 11 | 1  | 12 | rw | Tx-Error
   *CEC_ISR_TXUDR* | 10 | 1  | 11 | rw | Tx-Buffer Underrun
   *CEC_ISR_TXEND* | 9  | 1  | 10 | rw | End of Transmission
    *CEC_ISR_TXBR* | 8  | 1  | 9  | rw | Tx-Byte Request
  *CEC_ISR_ARBLST* | 7  | 1  | 8  | rw | Arbitration Lost
  *CEC_ISR_RXACKE* | 6  | 1  | 7  | rw | Rx-Missing Acknowledge
    *CEC_ISR_LBPE* | 5  | 1  | 6  | rw | Rx-Long Bit Period Error
    *CEC_ISR_SBPE* | 4  | 1  | 5  | rw | Rx-Short Bit period error
     *CEC_ISR_BRE* | 3  | 1  | 4  | rw | Rx-Bit rising error
   *CEC_ISR_RXOVR* | 2  | 1  | 3  | rw | Rx-Overrun
   *CEC_ISR_RXEND* | 1  | 1  | 2  | rw | End Of Reception
    *CEC_ISR_RXBR* | 0  | 1  | 1  | rw | Rx-Byte Received
 ----------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CEC|
 Register:    *CEC_IER*
 Address:     $40007814
 Reset:       $00000000
 Description: interrupt enable register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=917
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------------
   *CEC_IER_TXACKIE* | 12 | 1  | 13 | rw | Tx-Missing Acknowledge Error Interrupt Enable
   *CEC_IER_TXERRIE* | 11 | 1  | 12 | rw | Tx-Error Interrupt Enable
   *CEC_IER_TXUDRIE* | 10 | 1  | 11 | rw | Tx-Underrun interrupt enable
   *CEC_IER_TXENDIE* | 9  | 1  | 10 | rw | Tx-End of message interrupt enable
    *CEC_IER_TXBRIE* | 8  | 1  | 9  | rw | Tx-Byte Request Interrupt Enable
  *CEC_IER_ARBLSTIE* | 7  | 1  | 8  | rw | Arbitration Lost Interrupt Enable
   *CEC_IER_RXACKIE* | 6  | 1  | 7  | rw | Rx-Missing Acknowledge Error Interrupt Enable
    *CEC_IER_LBPEIE* | 5  | 1  | 6  | rw | Long Bit Period Error Interrupt Enable
    *CEC_IER_SBPEIE* | 4  | 1  | 5  | rw | Short Bit Period Error Interrupt Enable
     *CEC_IER_BREIE* | 3  | 1  | 4  | rw | Bit Rising Error Interrupt Enable
   *CEC_IER_RXOVRIE* | 2  | 1  | 3  | rw | Rx-Buffer Overrun Interrupt Enable
   *CEC_IER_RXENDIE* | 1  | 1  | 2  | rw | End Of Reception Interrupt Enable
    *CEC_IER_RXBRIE* | 0  | 1  | 1  | rw | Rx-Byte Received Interrupt Enable
 ------------------+----+----+----+----+-----------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |Flash|
 Register:    *Flash_ACR*
 Address:     $40022000
 Reset:       $00000030
 Description: Flash access control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=69
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *Flash_ACR_LATENCY* | 0  | 3  | 3  | rw | LATENCY
   *Flash_ACR_PRFTBE* | 4  | 1  | 5  | rw | PRFTBE
   *Flash_ACR_PRFTBS* | 5  | 1  | 6  | ro | PRFTBS
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |Flash|
 Register:    *Flash_KEYR*
 Address:     $40022004
 Reset:       $00000000
 Description: Flash key register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=70
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------
  *Flash_KEYR_FKEYR* | 0  | 32 | 32 | rw | Flash Key
 ------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |Flash|
 Register:    *Flash_OPTKEYR*
 Address:     $40022008
 Reset:       $00000000
 Description: Flash option key register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=70
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------------+----+----+----+----+-----------------
               Bitfield | bo | bw | be | ac | Description
 -----------------------+----+----+----+----+-----------------
  *Flash_OPTKEYR_OPTKEYR* | 0  | 32 | 32 | rw | Option byte key
 -----------------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |Flash|
 Register:    *Flash_SR*
 Address:     $4002200C
 Reset:       $00000000
 Description: Flash status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=71
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+------------------------
    *Flash_SR_EOP* | 5  | 1  | 6  | rw | End of operation
  *Flash_SR_WRPRT* | 4  | 1  | 5  | rw | Write protection error
  *Flash_SR_PGERR* | 2  | 1  | 3  | rw | Programming error
    *Flash_SR_BSY* | 0  | 1  | 1  | ro | Busy
 ----------------+----+----+----+----+------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |Flash|
 Register:    *Flash_CR*
 Address:     $40022010
 Reset:       $00000080
 Description: Flash control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=71
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------------+----+----+----+----+-----------------------------------
                Bitfield | bo | bw | be | ac | Description
 ------------------------+----+----+----+----+-----------------------------------
  *Flash_CR_FORCE_OPTLOAD* | 13 | 1  | 14 | rw | Force option byte loading
          *Flash_CR_EOPIE* | 12 | 1  | 13 | rw | End of operation interrupt enable
          *Flash_CR_ERRIE* | 10 | 1  | 11 | rw | Error interrupt enable
         *Flash_CR_OPTWRE* | 9  | 1  | 10 | rw | Option bytes write enable
           *Flash_CR_LOCK* | 7  | 1  | 8  | rw | Lock
           *Flash_CR_STRT* | 6  | 1  | 7  | rw | Start
          *Flash_CR_OPTER* | 5  | 1  | 6  | rw | Option byte erase
          *Flash_CR_OPTPG* | 4  | 1  | 5  | rw | Option byte programming
            *Flash_CR_MER* | 2  | 1  | 3  | rw | Mass erase
            *Flash_CR_PER* | 1  | 1  | 2  | rw | Page erase
             *Flash_CR_PG* | 0  | 1  | 1  | rw | Programming
 ------------------------+----+----+----+----+-----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |Flash|
 Register:    *Flash_AR*
 Address:     $40022014
 Reset:       $00000000
 Description: Flash address register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=73
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+---------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+---------------
  *Flash_AR_FAR* | 0  | 32 | 32 | rw | Flash address
 --------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |Flash|
 Register:    *Flash_OBR*
 Address:     $4002201C
 Reset:       $03FFFFF2
 Description: Option byte register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=73
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------------+----+----+----+----+------------------------------
                    Bitfield | bo | bw | be | ac | Description
 ----------------------------+----+----+----+----+------------------------------
            *Flash_OBR_OPTERR* | 0  | 1  | 1  | rw | Option byte error
             *Flash_OBR_RDPRT* | 1  | 2  | 3  | rw | Read protection level status
            *Flash_OBR_WDG_SW* | 8  | 1  | 9  | rw | WDG_SW
         *Flash_OBR_nRST_STOP* | 9  | 1  | 10 | rw | nRST_STOP
        *Flash_OBR_nRST_STDBY* | 10 | 1  | 11 | rw | nRST_STDBY
            *Flash_OBR_nBOOT0* | 11 | 1  | 12 | rw | nBOOT0
            *Flash_OBR_nBOOT1* | 12 | 1  | 13 | rw | BOOT1
      *Flash_OBR_VDDA_MONITOR* | 13 | 1  | 14 | rw | VDDA_MONITOR
  *Flash_OBR_RAM_PARITY_CHECK* | 14 | 0  | 14 | rw | RAM_PARITY_CHECK
          *Flash_OBR_BOOT_SEL* | 15 | 1  | 16 | rw | BOOT_SEL
             *Flash_OBR_Data0* | 16 | 8  | 24 | rw | Data0
             *Flash_OBR_Data1* | 24 | 8  | 32 | rw | Data1
 ----------------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |Flash|
 Register:    *Flash_WRPR*
 Address:     $40022020
 Reset:       $FFFFFFFF
 Description: Write protection register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=74
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+---------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+---------------
  *Flash_WRPR_WRP* | 0  | 32 | 32 | rw | Write protect
 ----------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DBGMCU|
 Register:    *DBGMCU_IDCODE*
 Address:     $40015800
 Reset:       $0
 Description: MCU Device ID Code Register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=935
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+---------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+---------------------
  *DBGMCU_IDCODE_DEV_ID* | 0  | 12 | 12 | rw | Device Identifier
  *DBGMCU_IDCODE_DIV_ID* | 12 | 4  | 16 | rw | Division Identifier
  *DBGMCU_IDCODE_REV_ID* | 16 | 16 | 32 | rw | Revision Identifier
 ----------------------+----+----+----+----+---------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DBGMCU|
 Register:    *DBGMCU_CR*
 Address:     $40015804
 Reset:       $0
 Description: Debug MCU Configuration Register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=931
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------------+----+----+----+----+--------------------
               Bitfield | bo | bw | be | ac | Description
 -----------------------+----+----+----+----+--------------------
     *DBGMCU_CR_DBG_STOP* | 1  | 1  | 2  | rw | Debug Stop Mode
  *DBGMCU_CR_DBG_STANDBY* | 2  | 1  | 3  | rw | Debug Standby Mode
 -----------------------+----+----+----+----+--------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DBGMCU|
 Register:    *DBGMCU_APB1_FZ*
 Address:     $40015808
 Reset:       $0
 Description: Debug MCU APB1 freeze register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=932
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------------------------------------------+----+----+----+----+--------------------------------------------------------
                                                 Bitfield | bo | bw | be | ac | Description
 ---------------------------------------------------------+----+----+----+----+--------------------------------------------------------
                             *DBGMCU_APB1_FZ_DBG_TIM2_STOP* | 0  | 1  | 1  | rw | TIM2 counter stopped when core is halted
                             *DBGMCU_APB1_FZ_DBG_TIM3_STOP* | 1  | 1  | 2  | rw | TIM3 counter stopped when core is halted
  *DBGMCU_APB1_FZ_TIM3_counter_stopped_when_core_is_halted* | 4  | 1  | 5  | rw | TIM6 counter stopped when core is halted
                             *DBGMCU_APB1_FZ_DBG_TIM7_STOP* | 5  | 1  | 6  | rw | TIM7 counter stopped when core is halted
                            *DBGMCU_APB1_FZ_DBG_TIM14_STOP* | 8  | 1  | 9  | rw | TIM14 counter stopped when core is halted
                              *DBGMCU_APB1_FZ_DBG_RTC_STOP* | 10 | 1  | 11 | rw | Debug RTC stopped when core is halted
                             *DBGMCU_APB1_FZ_DBG_WWDG_STOP* | 11 | 1  | 12 | rw | Debug window watchdog stopped when core is halted
                             *DBGMCU_APB1_FZ_DBG_IWDG_STOP* | 12 | 1  | 13 | rw | Debug independent watchdog stopped when core is halted
                    *DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT* | 21 | 1  | 22 | rw | SMBUS timeout mode stopped when core is halted
                              *DBGMCU_APB1_FZ_DBG_CAN_STOP* | 25 | 1  | 26 | rw | CAN stopped when core is halted
 ---------------------------------------------------------+----+----+----+----+--------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DBGMCU|
 Register:    *DBGMCU_APB2_FZ*
 Address:     $4001580C
 Reset:       $0
 Description: Debug MCU APB2 freeze register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=934
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------------+----+----+----+----+-------------------------------------------
                       Bitfield | bo | bw | be | ac | Description
 -------------------------------+----+----+----+----+-------------------------------------------
   *DBGMCU_APB2_FZ_DBG_TIM1_STOP* | 11 | 1  | 12 | rw | TIM1 counter stopped when core is halted
  *DBGMCU_APB2_FZ_DBG_TIM15_STOP* | 16 | 1  | 17 | rw | TIM15 counter stopped when core is halted
  *DBGMCU_APB2_FZ_DBG_TIM16_STOP* | 17 | 1  | 18 | rw | TIM16 counter stopped when core is halted
  *DBGMCU_APB2_FZ_DBG_TIM17_STOP* | 18 | 1  | 19 | rw | TIM17 counter stopped when core is halted
 -------------------------------+----+----+----+----+-------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_EP0R*
 Address:     $40005C00
 Reset:       $00000000
 Description: endpoint 0 register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------
       *USB_EP0R_EA* | 0  | 4  | 4  | rw | Endpoint address
  *USB_EP0R_STAT_TX* | 4  | 2  | 6  | rw | Status bits, for transmission transfers
  *USB_EP0R_DTOG_TX* | 6  | 1  | 7  | rw | Data Toggle, for transmission transfers
   *USB_EP0R_CTR_TX* | 7  | 1  | 8  | rw | Correct Transfer for transmission
  *USB_EP0R_EP_KIND* | 8  | 1  | 9  | rw | Endpoint kind
  *USB_EP0R_EP_TYPE* | 9  | 2  | 11 | rw | Endpoint type
    *USB_EP0R_SETUP* | 11 | 1  | 12 | rw | Setup transaction completed
  *USB_EP0R_STAT_RX* | 12 | 2  | 14 | rw | Status bits, for reception transfers
  *USB_EP0R_DTOG_RX* | 14 | 1  | 15 | rw | Data Toggle, for reception transfers
   *USB_EP0R_CTR_RX* | 15 | 1  | 16 | rw | Correct transfer for reception
 ------------------+----+----+----+----+-----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_EP1R*
 Address:     $40005C04
 Reset:       $00000000
 Description: endpoint 1 register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------
       *USB_EP1R_EA* | 0  | 4  | 4  | rw | Endpoint address
  *USB_EP1R_STAT_TX* | 4  | 2  | 6  | rw | Status bits, for transmission transfers
  *USB_EP1R_DTOG_TX* | 6  | 1  | 7  | rw | Data Toggle, for transmission transfers
   *USB_EP1R_CTR_TX* | 7  | 1  | 8  | rw | Correct Transfer for transmission
  *USB_EP1R_EP_KIND* | 8  | 1  | 9  | rw | Endpoint kind
  *USB_EP1R_EP_TYPE* | 9  | 2  | 11 | rw | Endpoint type
    *USB_EP1R_SETUP* | 11 | 1  | 12 | rw | Setup transaction completed
  *USB_EP1R_STAT_RX* | 12 | 2  | 14 | rw | Status bits, for reception transfers
  *USB_EP1R_DTOG_RX* | 14 | 1  | 15 | rw | Data Toggle, for reception transfers
   *USB_EP1R_CTR_RX* | 15 | 1  | 16 | rw | Correct transfer for reception
 ------------------+----+----+----+----+-----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_EP2R*
 Address:     $40005C08
 Reset:       $00000000
 Description: endpoint 2 register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------
       *USB_EP2R_EA* | 0  | 4  | 4  | rw | Endpoint address
  *USB_EP2R_STAT_TX* | 4  | 2  | 6  | rw | Status bits, for transmission transfers
  *USB_EP2R_DTOG_TX* | 6  | 1  | 7  | rw | Data Toggle, for transmission transfers
   *USB_EP2R_CTR_TX* | 7  | 1  | 8  | rw | Correct Transfer for transmission
  *USB_EP2R_EP_KIND* | 8  | 1  | 9  | rw | Endpoint kind
  *USB_EP2R_EP_TYPE* | 9  | 2  | 11 | rw | Endpoint type
    *USB_EP2R_SETUP* | 11 | 1  | 12 | rw | Setup transaction completed
  *USB_EP2R_STAT_RX* | 12 | 2  | 14 | rw | Status bits, for reception transfers
  *USB_EP2R_DTOG_RX* | 14 | 1  | 15 | rw | Data Toggle, for reception transfers
   *USB_EP2R_CTR_RX* | 15 | 1  | 16 | rw | Correct transfer for reception
 ------------------+----+----+----+----+-----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_EP3R*
 Address:     $40005C0C
 Reset:       $00000000
 Description: endpoint 3 register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------
       *USB_EP3R_EA* | 0  | 4  | 4  | rw | Endpoint address
  *USB_EP3R_STAT_TX* | 4  | 2  | 6  | rw | Status bits, for transmission transfers
  *USB_EP3R_DTOG_TX* | 6  | 1  | 7  | rw | Data Toggle, for transmission transfers
   *USB_EP3R_CTR_TX* | 7  | 1  | 8  | rw | Correct Transfer for transmission
  *USB_EP3R_EP_KIND* | 8  | 1  | 9  | rw | Endpoint kind
  *USB_EP3R_EP_TYPE* | 9  | 2  | 11 | rw | Endpoint type
    *USB_EP3R_SETUP* | 11 | 1  | 12 | rw | Setup transaction completed
  *USB_EP3R_STAT_RX* | 12 | 2  | 14 | rw | Status bits, for reception transfers
  *USB_EP3R_DTOG_RX* | 14 | 1  | 15 | rw | Data Toggle, for reception transfers
   *USB_EP3R_CTR_RX* | 15 | 1  | 16 | rw | Correct transfer for reception
 ------------------+----+----+----+----+-----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_EP4R*
 Address:     $40005C10
 Reset:       $00000000
 Description: endpoint 4 register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------
       *USB_EP4R_EA* | 0  | 4  | 4  | rw | Endpoint address
  *USB_EP4R_STAT_TX* | 4  | 2  | 6  | rw | Status bits, for transmission transfers
  *USB_EP4R_DTOG_TX* | 6  | 1  | 7  | rw | Data Toggle, for transmission transfers
   *USB_EP4R_CTR_TX* | 7  | 1  | 8  | rw | Correct Transfer for transmission
  *USB_EP4R_EP_KIND* | 8  | 1  | 9  | rw | Endpoint kind
  *USB_EP4R_EP_TYPE* | 9  | 2  | 11 | rw | Endpoint type
    *USB_EP4R_SETUP* | 11 | 1  | 12 | rw | Setup transaction completed
  *USB_EP4R_STAT_RX* | 12 | 2  | 14 | rw | Status bits, for reception transfers
  *USB_EP4R_DTOG_RX* | 14 | 1  | 15 | rw | Data Toggle, for reception transfers
   *USB_EP4R_CTR_RX* | 15 | 1  | 16 | rw | Correct transfer for reception
 ------------------+----+----+----+----+-----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_EP5R*
 Address:     $40005C14
 Reset:       $00000000
 Description: endpoint 5 register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------
       *USB_EP5R_EA* | 0  | 4  | 4  | rw | Endpoint address
  *USB_EP5R_STAT_TX* | 4  | 2  | 6  | rw | Status bits, for transmission transfers
  *USB_EP5R_DTOG_TX* | 6  | 1  | 7  | rw | Data Toggle, for transmission transfers
   *USB_EP5R_CTR_TX* | 7  | 1  | 8  | rw | Correct Transfer for transmission
  *USB_EP5R_EP_KIND* | 8  | 1  | 9  | rw | Endpoint kind
  *USB_EP5R_EP_TYPE* | 9  | 2  | 11 | rw | Endpoint type
    *USB_EP5R_SETUP* | 11 | 1  | 12 | rw | Setup transaction completed
  *USB_EP5R_STAT_RX* | 12 | 2  | 14 | rw | Status bits, for reception transfers
  *USB_EP5R_DTOG_RX* | 14 | 1  | 15 | rw | Data Toggle, for reception transfers
   *USB_EP5R_CTR_RX* | 15 | 1  | 16 | rw | Correct transfer for reception
 ------------------+----+----+----+----+-----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_EP6R*
 Address:     $40005C18
 Reset:       $00000000
 Description: endpoint 6 register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------
       *USB_EP6R_EA* | 0  | 4  | 4  | rw | Endpoint address
  *USB_EP6R_STAT_TX* | 4  | 2  | 6  | rw | Status bits, for transmission transfers
  *USB_EP6R_DTOG_TX* | 6  | 1  | 7  | rw | Data Toggle, for transmission transfers
   *USB_EP6R_CTR_TX* | 7  | 1  | 8  | rw | Correct Transfer for transmission
  *USB_EP6R_EP_KIND* | 8  | 1  | 9  | rw | Endpoint kind
  *USB_EP6R_EP_TYPE* | 9  | 2  | 11 | rw | Endpoint type
    *USB_EP6R_SETUP* | 11 | 1  | 12 | rw | Setup transaction completed
  *USB_EP6R_STAT_RX* | 12 | 2  | 14 | rw | Status bits, for reception transfers
  *USB_EP6R_DTOG_RX* | 14 | 1  | 15 | rw | Data Toggle, for reception transfers
   *USB_EP6R_CTR_RX* | 15 | 1  | 16 | rw | Correct transfer for reception
 ------------------+----+----+----+----+-----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_EP7R*
 Address:     $40005C1C
 Reset:       $00000000
 Description: endpoint 7 register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-----------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-----------------------------------------
       *USB_EP7R_EA* | 0  | 4  | 4  | rw | Endpoint address
  *USB_EP7R_STAT_TX* | 4  | 2  | 6  | rw | Status bits, for transmission transfers
  *USB_EP7R_DTOG_TX* | 6  | 1  | 7  | rw | Data Toggle, for transmission transfers
   *USB_EP7R_CTR_TX* | 7  | 1  | 8  | rw | Correct Transfer for transmission
  *USB_EP7R_EP_KIND* | 8  | 1  | 9  | rw | Endpoint kind
  *USB_EP7R_EP_TYPE* | 9  | 2  | 11 | rw | Endpoint type
    *USB_EP7R_SETUP* | 11 | 1  | 12 | rw | Setup transaction completed
  *USB_EP7R_STAT_RX* | 12 | 2  | 14 | rw | Status bits, for reception transfers
  *USB_EP7R_DTOG_RX* | 14 | 1  | 15 | rw | Data Toggle, for reception transfers
   *USB_EP7R_CTR_RX* | 15 | 1  | 16 | rw | Correct transfer for reception
 ------------------+----+----+----+----+-----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_CNTR*
 Address:     $40005C40
 Reset:       $00000003
 Description: control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+---------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+---------------------------------------------------
      *USB_CNTR_FRES* | 0  | 1  | 1  | rw | Force USB Reset
      *USB_CNTR_PDWN* | 1  | 1  | 2  | rw | Power down
    *USB_CNTR_LPMODE* | 2  | 1  | 3  | rw | Low-power mode
     *USB_CNTR_FSUSP* | 3  | 1  | 4  | rw | Force suspend
    *USB_CNTR_RESUME* | 4  | 1  | 5  | rw | Resume request
  *USB_CNTR_L1RESUME* | 5  | 1  | 6  | rw | LPM L1 Resume request
    *USB_CNTR_L1REQM* | 7  | 1  | 8  | rw | LPM L1 state request interrupt mask
     *USB_CNTR_ESOFM* | 8  | 1  | 9  | rw | Expected start of frame interrupt mask
      *USB_CNTR_SOFM* | 9  | 1  | 10 | rw | Start of frame interrupt mask
    *USB_CNTR_RESETM* | 10 | 1  | 11 | rw | USB reset interrupt mask
     *USB_CNTR_SUSPM* | 11 | 1  | 12 | rw | Suspend mode interrupt mask
     *USB_CNTR_WKUPM* | 12 | 1  | 13 | rw | Wakeup interrupt mask
      *USB_CNTR_ERRM* | 13 | 1  | 14 | rw | Error interrupt mask
   *USB_CNTR_PMAOVRM* | 14 | 1  | 15 | rw | Packet memory area over / underrun interrupt mask
      *USB_CNTR_CTRM* | 15 | 1  | 16 | rw | Correct transfer interrupt mask
 -------------------+----+----+----+----+---------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_ISTR*
 Address:     $40005C44
 Reset:       $00000000
 Description: interrupt status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------------
   *USB_ISTR_EP_ID* | 0  | 4  | 4  | ro | Endpoint Identifier
     *USB_ISTR_DIR* | 4  | 1  | 5  | ro | Direction of transaction
   *USB_ISTR_L1REQ* | 7  | 1  | 8  | rw | LPM L1 state request
    *USB_ISTR_ESOF* | 8  | 1  | 9  | rw | Expected start frame
     *USB_ISTR_SOF* | 9  | 1  | 10 | rw | start of frame
   *USB_ISTR_RESET* | 10 | 1  | 11 | rw | reset request
    *USB_ISTR_SUSP* | 11 | 1  | 12 | rw | Suspend mode request
    *USB_ISTR_WKUP* | 12 | 1  | 13 | rw | Wakeup
     *USB_ISTR_ERR* | 13 | 1  | 14 | rw | Error
  *USB_ISTR_PMAOVR* | 14 | 1  | 15 | rw | Packet memory area over / underrun
     *USB_ISTR_CTR* | 15 | 1  | 16 | ro | Correct transfer
 -----------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_FNR*
 Address:     $40005C48
 Reset:       $0000
 Description: frame number register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 --------------+----+----+----+----+----------------------------
      Bitfield | bo | bw | be | ac | Description
 --------------+----+----+----+----+----------------------------
    *USB_FNR_FN* | 0  | 11 | 11 | rw | Frame number
  *USB_FNR_LSOF* | 11 | 2  | 13 | rw | Lost SOF
   *USB_FNR_LCK* | 13 | 1  | 14 | rw | Locked
  *USB_FNR_RXDM* | 14 | 1  | 15 | rw | Receive data - line status
  *USB_FNR_RXDP* | 15 | 1  | 16 | rw | Receive data + line status
 --------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_DADDR*
 Address:     $40005C4C
 Reset:       $0000
 Description: device address
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=897
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-----------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-----------------
  *USB_DADDR_ADD* | 0  | 7  | 7  | rw | Device address
   *USB_DADDR_EF* | 7  | 1  | 8  | rw | Enable function
 ---------------+----+----+----+----+-----------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_BTABLE*
 Address:     $40005C50
 Reset:       $0000
 Description: Buffer table address
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+--------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+--------------
  *USB_BTABLE_BTABLE* | 3  | 13 | 16 | rw | Buffer table
 -------------------+----+----+----+----+--------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_LPMCSR*
 Address:     $40005C54
 Reset:       $0000
 Description: LPM control and status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------------------------
    *USB_LPMCSR_LPMEN* | 0  | 1  | 1  | rw | LPM support enable
   *USB_LPMCSR_LPMACK* | 1  | 1  | 2  | rw | LPM Token acknowledge enable
  *USB_LPMCSR_REMWAKE* | 3  | 1  | 4  | ro | bRemoteWake value
     *USB_LPMCSR_BESL* | 4  | 4  | 8  | ro | BESL value
 --------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |USB|
 Register:    *USB_BCDR*
 Address:     $40005C58
 Reset:       $0000
 Description: Battery charging detector
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=900
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+------------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+------------------------------------------
   *USB_BCDR_BCDEN* | 0  | 1  | 1  | rw | Battery charging detector (BCD) enable
   *USB_BCDR_DCDEN* | 1  | 1  | 2  | rw | Data contact detection (DCD) mode enable
    *USB_BCDR_PDEN* | 2  | 1  | 3  | rw | Primary detection (PD) mode enable
    *USB_BCDR_SDEN* | 3  | 1  | 4  | rw | Secondary detection (SD) mode enable
   *USB_BCDR_DCDET* | 4  | 1  | 5  | ro | Data contact detection (DCD) status
    *USB_BCDR_PDET* | 5  | 1  | 6  | ro | Primary detection (PD) status
    *USB_BCDR_SDET* | 6  | 1  | 7  | ro | Secondary detection (SD) status
  *USB_BCDR_PS2DET* | 7  | 1  | 8  | ro | DM pull-up detection status
    *USB_BCDR_DPPU* | 15 | 1  | 16 | rw | DP pull-up control
 -----------------+----+----+----+----+------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CRS|
 Register:    *CRS_CR*
 Address:     $40006C00
 Reset:       $00002000
 Description: control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=143
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------------------------
        *CRS_CR_TRIM* | 8  | 6  | 14 | rw | HSI48 oscillator smooth trimming
      *CRS_CR_SWSYNC* | 7  | 1  | 8  | rw | Generate software SYNC event
  *CRS_CR_AUTOTRIMEN* | 6  | 1  | 7  | rw | Automatic trimming enable
         *CRS_CR_CEN* | 5  | 1  | 6  | rw | Frequency error counter enable
     *CRS_CR_ESYNCIE* | 3  | 1  | 4  | rw | Expected SYNC interrupt enable
       *CRS_CR_ERRIE* | 2  | 1  | 3  | rw | Synchronization or trimming error interrupt enable
  *CRS_CR_SYNCWARNIE* | 1  | 1  | 2  | rw | SYNC warning interrupt enable
    *CRS_CR_SYNCOKIE* | 0  | 1  | 1  | rw | SYNC event OK interrupt enable
 -------------------+----+----+----+----+----------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CRS|
 Register:    *CRS_CFGR*
 Address:     $40006C04
 Reset:       $2022BB7F
 Description: configuration register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=144
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------------------------
  *CRS_CFGR_SYNCPOL* | 31 | 1  | 32 | rw | SYNC polarity selection
  *CRS_CFGR_SYNCSRC* | 28 | 2  | 30 | rw | SYNC signal source selection
  *CRS_CFGR_SYNCDIV* | 24 | 3  | 27 | rw | SYNC divider
    *CRS_CFGR_FELIM* | 16 | 8  | 24 | rw | Frequency error limit
   *CRS_CFGR_RELOAD* | 0  | 16 | 16 | rw | Counter reload value
 ------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CRS|
 Register:    *CRS_ISR*
 Address:     $40006C08
 Reset:       $00000000
 Description: interrupt and status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=145
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+--------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+--------------------------------
      *CRS_ISR_FECAP* | 16 | 16 | 32 | rw | Frequency error capture
      *CRS_ISR_FEDIR* | 15 | 1  | 16 | rw | Frequency error direction
    *CRS_ISR_TRIMOVF* | 10 | 1  | 11 | rw | Trimming overflow or underflow
   *CRS_ISR_SYNCMISS* | 9  | 1  | 10 | rw | SYNC missed
    *CRS_ISR_SYNCERR* | 8  | 1  | 9  | rw | SYNC error
     *CRS_ISR_ESYNCF* | 3  | 1  | 4  | rw | Expected SYNC flag
       *CRS_ISR_ERRF* | 2  | 1  | 3  | rw | Error flag
  *CRS_ISR_SYNCWARNF* | 1  | 1  | 2  | rw | SYNC warning flag
    *CRS_ISR_SYNCOKF* | 0  | 1  | 1  | rw | SYNC event OK flag
 -------------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CRS|
 Register:    *CRS_ICR*
 Address:     $40006C0C
 Reset:       $00000000
 Description: interrupt flag clear register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=147
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+--------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+--------------------------
     *CRS_ICR_ESYNCC* | 3  | 1  | 4  | rw | Expected SYNC clear flag
       *CRS_ICR_ERRC* | 2  | 1  | 3  | rw | Error clear flag
  *CRS_ICR_SYNCWARNC* | 1  | 1  | 2  | rw | SYNC warning clear flag
    *CRS_ICR_SYNCOKC* | 0  | 1  | 1  | rw | SYNC event OK clear flag
 -------------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_MCR*
 Address:     $40006400
 Reset:       $00000000
 Description: CAN_MCR
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=844
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
    *CAN_CAN_MCR_DBF* | 16 | 1  | 17 | rw | DBF
  *CAN_CAN_MCR_RESET* | 15 | 1  | 16 | rw | RESET
   *CAN_CAN_MCR_TTCM* | 7  | 1  | 8  | rw | TTCM
   *CAN_CAN_MCR_ABOM* | 6  | 1  | 7  | rw | ABOM
   *CAN_CAN_MCR_AWUM* | 5  | 1  | 6  | rw | AWUM
   *CAN_CAN_MCR_NART* | 4  | 1  | 5  | rw | NART
   *CAN_CAN_MCR_RFLM* | 3  | 1  | 4  | rw | RFLM
   *CAN_CAN_MCR_TXFP* | 2  | 1  | 3  | rw | TXFP
  *CAN_CAN_MCR_SLEEP* | 1  | 1  | 2  | rw | SLEEP
   *CAN_CAN_MCR_INRQ* | 0  | 1  | 1  | rw | INRQ
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_MSR*
 Address:     $40006404
 Reset:       $00000000
 Description: CAN_MSR
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=846
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
     *CAN_CAN_MSR_RX* | 11 | 1  | 12 | ro | RX
   *CAN_CAN_MSR_SAMP* | 10 | 1  | 11 | ro | SAMP
    *CAN_CAN_MSR_RXM* | 9  | 1  | 10 | ro | RXM
    *CAN_CAN_MSR_TXM* | 8  | 1  | 9  | ro | TXM
  *CAN_CAN_MSR_SLAKI* | 4  | 1  | 5  | rw | SLAKI
   *CAN_CAN_MSR_WKUI* | 3  | 1  | 4  | rw | WKUI
   *CAN_CAN_MSR_ERRI* | 2  | 1  | 3  | rw | ERRI
   *CAN_CAN_MSR_SLAK* | 1  | 1  | 2  | ro | SLAK
   *CAN_CAN_MSR_INAK* | 0  | 1  | 1  | ro | INAK
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TSR*
 Address:     $40006408
 Reset:       $00000000
 Description: CAN_TSR
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=847
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------------------------------
   *CAN_CAN_TSR_LOW2* | 31 | 1  | 32 | ro | Lowest priority flag for mailbox 2
   *CAN_CAN_TSR_LOW1* | 30 | 1  | 31 | ro | Lowest priority flag for mailbox 1
   *CAN_CAN_TSR_LOW0* | 29 | 1  | 30 | ro | Lowest priority flag for mailbox 0
   *CAN_CAN_TSR_TME2* | 28 | 1  | 29 | ro | Lowest priority flag for mailbox 2
   *CAN_CAN_TSR_TME1* | 27 | 1  | 28 | ro | Lowest priority flag for mailbox 1
   *CAN_CAN_TSR_TME0* | 26 | 1  | 27 | ro | Lowest priority flag for mailbox 0
   *CAN_CAN_TSR_CODE* | 24 | 2  | 26 | ro | CODE
  *CAN_CAN_TSR_ABRQ2* | 23 | 1  | 24 | rw | ABRQ2
  *CAN_CAN_TSR_TERR2* | 19 | 1  | 20 | rw | TERR2
  *CAN_CAN_TSR_ALST2* | 18 | 1  | 19 | rw | ALST2
  *CAN_CAN_TSR_TXOK2* | 17 | 1  | 18 | rw | TXOK2
  *CAN_CAN_TSR_RQCP2* | 16 | 1  | 17 | rw | RQCP2
  *CAN_CAN_TSR_ABRQ1* | 15 | 1  | 16 | rw | ABRQ1
  *CAN_CAN_TSR_TERR1* | 11 | 1  | 12 | rw | TERR1
  *CAN_CAN_TSR_ALST1* | 10 | 1  | 11 | rw | ALST1
  *CAN_CAN_TSR_TXOK1* | 9  | 1  | 10 | rw | TXOK1
  *CAN_CAN_TSR_RQCP1* | 8  | 1  | 9  | rw | RQCP1
  *CAN_CAN_TSR_ABRQ0* | 7  | 1  | 8  | rw | ABRQ0
  *CAN_CAN_TSR_TERR0* | 3  | 1  | 4  | rw | TERR0
  *CAN_CAN_TSR_ALST0* | 2  | 1  | 3  | rw | ALST0
  *CAN_CAN_TSR_TXOK0* | 1  | 1  | 2  | rw | TXOK0
  *CAN_CAN_TSR_RQCP0* | 0  | 1  | 1  | rw | RQCP0
 -------------------+----+----+----+----+------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RF0R*
 Address:     $4000640C
 Reset:       $00000000
 Description: CAN_RF0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=850
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
  *CAN_CAN_RF0R_RFOM0* | 5  | 1  | 6  | rw | RFOM0
  *CAN_CAN_RF0R_FOVR0* | 4  | 1  | 5  | rw | FOVR0
  *CAN_CAN_RF0R_FULL0* | 3  | 1  | 4  | rw | FULL0
   *CAN_CAN_RF0R_FMP0* | 0  | 2  | 2  | ro | FMP0
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RF1R*
 Address:     $40006410
 Reset:       $00000000
 Description: CAN_RF1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=850
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
  *CAN_CAN_RF1R_RFOM1* | 5  | 1  | 6  | rw | RFOM1
  *CAN_CAN_RF1R_FOVR1* | 4  | 1  | 5  | rw | FOVR1
  *CAN_CAN_RF1R_FULL1* | 3  | 1  | 4  | rw | FULL1
   *CAN_CAN_RF1R_FMP1* | 0  | 2  | 2  | ro | FMP1
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_IER*
 Address:     $40006414
 Reset:       $00000000
 Description: CAN_IER
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=851
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
   *CAN_CAN_IER_SLKIE* | 17 | 1  | 18 | rw | SLKIE
   *CAN_CAN_IER_WKUIE* | 16 | 1  | 17 | rw | WKUIE
   *CAN_CAN_IER_ERRIE* | 15 | 1  | 16 | rw | ERRIE
   *CAN_CAN_IER_LECIE* | 11 | 1  | 12 | rw | LECIE
   *CAN_CAN_IER_BOFIE* | 10 | 1  | 11 | rw | BOFIE
   *CAN_CAN_IER_EPVIE* | 9  | 1  | 10 | rw | EPVIE
   *CAN_CAN_IER_EWGIE* | 8  | 1  | 9  | rw | EWGIE
  *CAN_CAN_IER_FOVIE1* | 6  | 1  | 7  | rw | FOVIE1
   *CAN_CAN_IER_FFIE1* | 5  | 1  | 6  | rw | FFIE1
  *CAN_CAN_IER_FMPIE1* | 4  | 1  | 5  | rw | FMPIE1
  *CAN_CAN_IER_FOVIE0* | 3  | 1  | 4  | rw | FOVIE0
   *CAN_CAN_IER_FFIE0* | 2  | 1  | 3  | rw | FFIE0
  *CAN_CAN_IER_FMPIE0* | 1  | 1  | 2  | rw | FMPIE0
   *CAN_CAN_IER_TMEIE* | 0  | 1  | 1  | rw | TMEIE
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_ESR*
 Address:     $40006418
 Reset:       $00000000
 Description: CAN_ESR
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=853
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------
   *CAN_CAN_ESR_REC* | 24 | 8  | 32 | ro | REC
   *CAN_CAN_ESR_TEC* | 16 | 8  | 24 | ro | TEC
   *CAN_CAN_ESR_LEC* | 4  | 3  | 7  | rw | LEC
  *CAN_CAN_ESR_BOFF* | 2  | 1  | 3  | ro | BOFF
  *CAN_CAN_ESR_EPVF* | 1  | 1  | 2  | ro | EPVF
  *CAN_CAN_ESR_EWGF* | 0  | 1  | 1  | ro | EWGF
 ------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_BTR*
 Address:     $4000641C
 Reset:       $00000000
 Description: CAN BTR
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=854
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+------------
  *CAN_CAN_BTR_SILM* | 31 | 1  | 32 | rw | SILM
  *CAN_CAN_BTR_LBKM* | 30 | 1  | 31 | rw | LBKM
   *CAN_CAN_BTR_SJW* | 24 | 2  | 26 | rw | SJW
   *CAN_CAN_BTR_TS2* | 20 | 3  | 23 | rw | TS2
   *CAN_CAN_BTR_TS1* | 16 | 4  | 20 | rw | TS1
   *CAN_CAN_BTR_BRP* | 0  | 10 | 10 | rw | BRP
 ------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TI0R*
 Address:     $40006580
 Reset:       $00000000
 Description: CAN_TI0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=855
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *CAN_CAN_TI0R_STID* | 21 | 11 | 32 | rw | STID
  *CAN_CAN_TI0R_EXID* | 3  | 18 | 21 | rw | EXID
   *CAN_CAN_TI0R_IDE* | 2  | 1  | 3  | rw | IDE
   *CAN_CAN_TI0R_RTR* | 1  | 1  | 2  | rw | RTR
  *CAN_CAN_TI0R_TXRQ* | 0  | 1  | 1  | rw | TXRQ
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDT0R*
 Address:     $40006584
 Reset:       $00000000
 Description: CAN_TDT0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=856
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
  *CAN_CAN_TDT0R_TIME* | 16 | 16 | 32 | rw | TIME
   *CAN_CAN_TDT0R_TGT* | 8  | 1  | 9  | rw | TGT
   *CAN_CAN_TDT0R_DLC* | 0  | 4  | 4  | rw | DLC
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDL0R*
 Address:     $40006588
 Reset:       $00000000
 Description: CAN_TDL0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=856
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_TDL0R_DATA3* | 24 | 8  | 32 | rw | DATA3
  *CAN_CAN_TDL0R_DATA2* | 16 | 8  | 24 | rw | DATA2
  *CAN_CAN_TDL0R_DATA1* | 8  | 8  | 16 | rw | DATA1
  *CAN_CAN_TDL0R_DATA0* | 0  | 8  | 8  | rw | DATA0
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDH0R*
 Address:     $4000658C
 Reset:       $00000000
 Description: CAN_TDH0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=857
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_TDH0R_DATA7* | 24 | 8  | 32 | rw | DATA7
  *CAN_CAN_TDH0R_DATA6* | 16 | 8  | 24 | rw | DATA6
  *CAN_CAN_TDH0R_DATA5* | 8  | 8  | 16 | rw | DATA5
  *CAN_CAN_TDH0R_DATA4* | 0  | 8  | 8  | rw | DATA4
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TI1R*
 Address:     $40006590
 Reset:       $00000000
 Description: CAN_TI1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=855
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *CAN_CAN_TI1R_STID* | 21 | 11 | 32 | rw | STID
  *CAN_CAN_TI1R_EXID* | 3  | 18 | 21 | rw | EXID
   *CAN_CAN_TI1R_IDE* | 2  | 1  | 3  | rw | IDE
   *CAN_CAN_TI1R_RTR* | 1  | 1  | 2  | rw | RTR
  *CAN_CAN_TI1R_TXRQ* | 0  | 1  | 1  | rw | TXRQ
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDT1R*
 Address:     $40006594
 Reset:       $00000000
 Description: CAN_TDT1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=856
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
  *CAN_CAN_TDT1R_TIME* | 16 | 16 | 32 | rw | TIME
   *CAN_CAN_TDT1R_TGT* | 8  | 1  | 9  | rw | TGT
   *CAN_CAN_TDT1R_DLC* | 0  | 4  | 4  | rw | DLC
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDL1R*
 Address:     $40006598
 Reset:       $00000000
 Description: CAN_TDL1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=856
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_TDL1R_DATA3* | 24 | 8  | 32 | rw | DATA3
  *CAN_CAN_TDL1R_DATA2* | 16 | 8  | 24 | rw | DATA2
  *CAN_CAN_TDL1R_DATA1* | 8  | 8  | 16 | rw | DATA1
  *CAN_CAN_TDL1R_DATA0* | 0  | 8  | 8  | rw | DATA0
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDH1R*
 Address:     $4000659C
 Reset:       $00000000
 Description: CAN_TDH1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=857
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_TDH1R_DATA7* | 24 | 8  | 32 | rw | DATA7
  *CAN_CAN_TDH1R_DATA6* | 16 | 8  | 24 | rw | DATA6
  *CAN_CAN_TDH1R_DATA5* | 8  | 8  | 16 | rw | DATA5
  *CAN_CAN_TDH1R_DATA4* | 0  | 8  | 8  | rw | DATA4
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TI2R*
 Address:     $400065A0
 Reset:       $00000000
 Description: CAN_TI2R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=855
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *CAN_CAN_TI2R_STID* | 21 | 11 | 32 | rw | STID
  *CAN_CAN_TI2R_EXID* | 3  | 18 | 21 | rw | EXID
   *CAN_CAN_TI2R_IDE* | 2  | 1  | 3  | rw | IDE
   *CAN_CAN_TI2R_RTR* | 1  | 1  | 2  | rw | RTR
  *CAN_CAN_TI2R_TXRQ* | 0  | 1  | 1  | rw | TXRQ
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDT2R*
 Address:     $400065A4
 Reset:       $00000000
 Description: CAN_TDT2R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=856
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
  *CAN_CAN_TDT2R_TIME* | 16 | 16 | 32 | rw | TIME
   *CAN_CAN_TDT2R_TGT* | 8  | 1  | 9  | rw | TGT
   *CAN_CAN_TDT2R_DLC* | 0  | 4  | 4  | rw | DLC
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDL2R*
 Address:     $400065A8
 Reset:       $00000000
 Description: CAN_TDL2R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=856
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_TDL2R_DATA3* | 24 | 8  | 32 | rw | DATA3
  *CAN_CAN_TDL2R_DATA2* | 16 | 8  | 24 | rw | DATA2
  *CAN_CAN_TDL2R_DATA1* | 8  | 8  | 16 | rw | DATA1
  *CAN_CAN_TDL2R_DATA0* | 0  | 8  | 8  | rw | DATA0
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_TDH2R*
 Address:     $400065AC
 Reset:       $00000000
 Description: CAN_TDH2R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=857
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_TDH2R_DATA7* | 24 | 8  | 32 | rw | DATA7
  *CAN_CAN_TDH2R_DATA6* | 16 | 8  | 24 | rw | DATA6
  *CAN_CAN_TDH2R_DATA5* | 8  | 8  | 16 | rw | DATA5
  *CAN_CAN_TDH2R_DATA4* | 0  | 8  | 8  | rw | DATA4
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RI0R*
 Address:     $400065B0
 Reset:       $00000000
 Description: CAN_RI0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=858
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *CAN_CAN_RI0R_STID* | 21 | 11 | 32 | rw | STID
  *CAN_CAN_RI0R_EXID* | 3  | 18 | 21 | rw | EXID
   *CAN_CAN_RI0R_IDE* | 2  | 1  | 3  | rw | IDE
   *CAN_CAN_RI0R_RTR* | 1  | 1  | 2  | rw | RTR
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RDT0R*
 Address:     $400065B4
 Reset:       $00000000
 Description: CAN_RDT0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=858
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
  *CAN_CAN_RDT0R_TIME* | 16 | 16 | 32 | rw | TIME
   *CAN_CAN_RDT0R_FMI* | 8  | 8  | 16 | rw | FMI
   *CAN_CAN_RDT0R_DLC* | 0  | 4  | 4  | rw | DLC
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RDL0R*
 Address:     $400065B8
 Reset:       $00000000
 Description: CAN_RDL0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=859
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_RDL0R_DATA3* | 24 | 8  | 32 | rw | DATA3
  *CAN_CAN_RDL0R_DATA2* | 16 | 8  | 24 | rw | DATA2
  *CAN_CAN_RDL0R_DATA1* | 8  | 8  | 16 | rw | DATA1
  *CAN_CAN_RDL0R_DATA0* | 0  | 8  | 8  | rw | DATA0
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RDH0R*
 Address:     $400065BC
 Reset:       $00000000
 Description: CAN_RDH0R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=859
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_RDH0R_DATA7* | 24 | 8  | 32 | rw | DATA7
  *CAN_CAN_RDH0R_DATA6* | 16 | 8  | 24 | rw | DATA6
  *CAN_CAN_RDH0R_DATA5* | 8  | 8  | 16 | rw | DATA5
  *CAN_CAN_RDH0R_DATA4* | 0  | 8  | 8  | rw | DATA4
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RI1R*
 Address:     $400065C0
 Reset:       $00000000
 Description: CAN_RI1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=858
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+------------
  *CAN_CAN_RI1R_STID* | 21 | 11 | 32 | rw | STID
  *CAN_CAN_RI1R_EXID* | 3  | 18 | 21 | rw | EXID
   *CAN_CAN_RI1R_IDE* | 2  | 1  | 3  | rw | IDE
   *CAN_CAN_RI1R_RTR* | 1  | 1  | 2  | rw | RTR
 -------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RDT1R*
 Address:     $400065C4
 Reset:       $00000000
 Description: CAN_RDT1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=858
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
  *CAN_CAN_RDT1R_TIME* | 16 | 16 | 32 | rw | TIME
   *CAN_CAN_RDT1R_FMI* | 8  | 8  | 16 | rw | FMI
   *CAN_CAN_RDT1R_DLC* | 0  | 4  | 4  | rw | DLC
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RDL1R*
 Address:     $400065C8
 Reset:       $00000000
 Description: CAN_RDL1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=859
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_RDL1R_DATA3* | 24 | 8  | 32 | rw | DATA3
  *CAN_CAN_RDL1R_DATA2* | 16 | 8  | 24 | rw | DATA2
  *CAN_CAN_RDL1R_DATA1* | 8  | 8  | 16 | rw | DATA1
  *CAN_CAN_RDL1R_DATA0* | 0  | 8  | 8  | rw | DATA0
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_RDH1R*
 Address:     $400065CC
 Reset:       $00000000
 Description: CAN_RDH1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=859
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+------------
  *CAN_CAN_RDH1R_DATA7* | 24 | 8  | 32 | rw | DATA7
  *CAN_CAN_RDH1R_DATA6* | 16 | 8  | 24 | rw | DATA6
  *CAN_CAN_RDH1R_DATA5* | 8  | 8  | 16 | rw | DATA5
  *CAN_CAN_RDH1R_DATA4* | 0  | 8  | 8  | rw | DATA4
 ---------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_FMR*
 Address:     $40006600
 Reset:       $00000000
 Description: CAN_FMR
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=860
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+------------
  *CAN_CAN_FMR_CAN2SB* | 8  | 6  | 14 | rw | CAN2SB
   *CAN_CAN_FMR_FINIT* | 0  | 1  | 1  | rw | FINIT
 --------------------+----+----+----+----+------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_FM1R*
 Address:     $40006604
 Reset:       $00000000
 Description: CAN_FM1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=860
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+-------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+-------------
   *CAN_CAN_FM1R_FBM0* | 0  | 1  | 1  | rw | Filter mode
   *CAN_CAN_FM1R_FBM1* | 1  | 1  | 2  | rw | Filter mode
   *CAN_CAN_FM1R_FBM2* | 2  | 1  | 3  | rw | Filter mode
   *CAN_CAN_FM1R_FBM3* | 3  | 1  | 4  | rw | Filter mode
   *CAN_CAN_FM1R_FBM4* | 4  | 1  | 5  | rw | Filter mode
   *CAN_CAN_FM1R_FBM5* | 5  | 1  | 6  | rw | Filter mode
   *CAN_CAN_FM1R_FBM6* | 6  | 1  | 7  | rw | Filter mode
   *CAN_CAN_FM1R_FBM7* | 7  | 1  | 8  | rw | Filter mode
   *CAN_CAN_FM1R_FBM8* | 8  | 1  | 9  | rw | Filter mode
   *CAN_CAN_FM1R_FBM9* | 9  | 1  | 10 | rw | Filter mode
  *CAN_CAN_FM1R_FBM10* | 10 | 1  | 11 | rw | Filter mode
  *CAN_CAN_FM1R_FBM11* | 11 | 1  | 12 | rw | Filter mode
  *CAN_CAN_FM1R_FBM12* | 12 | 1  | 13 | rw | Filter mode
  *CAN_CAN_FM1R_FBM13* | 13 | 1  | 14 | rw | Filter mode
  *CAN_CAN_FM1R_FBM14* | 14 | 1  | 15 | rw | Filter mode
  *CAN_CAN_FM1R_FBM15* | 15 | 1  | 16 | rw | Filter mode
  *CAN_CAN_FM1R_FBM16* | 16 | 1  | 17 | rw | Filter mode
  *CAN_CAN_FM1R_FBM17* | 17 | 1  | 18 | rw | Filter mode
  *CAN_CAN_FM1R_FBM18* | 18 | 1  | 19 | rw | Filter mode
  *CAN_CAN_FM1R_FBM19* | 19 | 1  | 20 | rw | Filter mode
  *CAN_CAN_FM1R_FBM20* | 20 | 1  | 21 | rw | Filter mode
  *CAN_CAN_FM1R_FBM21* | 21 | 1  | 22 | rw | Filter mode
  *CAN_CAN_FM1R_FBM22* | 22 | 1  | 23 | rw | Filter mode
  *CAN_CAN_FM1R_FBM23* | 23 | 1  | 24 | rw | Filter mode
  *CAN_CAN_FM1R_FBM24* | 24 | 1  | 25 | rw | Filter mode
  *CAN_CAN_FM1R_FBM25* | 25 | 1  | 26 | rw | Filter mode
  *CAN_CAN_FM1R_FBM26* | 26 | 1  | 27 | rw | Filter mode
  *CAN_CAN_FM1R_FBM27* | 27 | 1  | 28 | rw | Filter mode
 --------------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_FS1R*
 Address:     $4000660C
 Reset:       $00000000
 Description: CAN_FS1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=861
              (place cursor on hyperlink, type 'gx' to follow)

 --------------------+----+----+----+----+----------------------------
            Bitfield | bo | bw | be | ac | Description
 --------------------+----+----+----+----+----------------------------
   *CAN_CAN_FS1R_FSC0* | 0  | 1  | 1  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC1* | 1  | 1  | 2  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC2* | 2  | 1  | 3  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC3* | 3  | 1  | 4  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC4* | 4  | 1  | 5  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC5* | 5  | 1  | 6  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC6* | 6  | 1  | 7  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC7* | 7  | 1  | 8  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC8* | 8  | 1  | 9  | rw | Filter scale configuration
   *CAN_CAN_FS1R_FSC9* | 9  | 1  | 10 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC10* | 10 | 1  | 11 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC11* | 11 | 1  | 12 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC12* | 12 | 1  | 13 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC13* | 13 | 1  | 14 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC14* | 14 | 1  | 15 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC15* | 15 | 1  | 16 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC16* | 16 | 1  | 17 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC17* | 17 | 1  | 18 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC18* | 18 | 1  | 19 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC19* | 19 | 1  | 20 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC20* | 20 | 1  | 21 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC21* | 21 | 1  | 22 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC22* | 22 | 1  | 23 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC23* | 23 | 1  | 24 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC24* | 24 | 1  | 25 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC25* | 25 | 1  | 26 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC26* | 26 | 1  | 27 | rw | Filter scale configuration
  *CAN_CAN_FS1R_FSC27* | 27 | 1  | 28 | rw | Filter scale configuration
 --------------------+----+----+----+----+----------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_FFA1R*
 Address:     $40006614
 Reset:       $00000000
 Description: CAN_FFA1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=861
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+--------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+--------------------------------------
   *CAN_CAN_FFA1R_FFA0* | 0  | 1  | 1  | rw | Filter FIFO assignment for filter 0
   *CAN_CAN_FFA1R_FFA1* | 1  | 1  | 2  | rw | Filter FIFO assignment for filter 1
   *CAN_CAN_FFA1R_FFA2* | 2  | 1  | 3  | rw | Filter FIFO assignment for filter 2
   *CAN_CAN_FFA1R_FFA3* | 3  | 1  | 4  | rw | Filter FIFO assignment for filter 3
   *CAN_CAN_FFA1R_FFA4* | 4  | 1  | 5  | rw | Filter FIFO assignment for filter 4
   *CAN_CAN_FFA1R_FFA5* | 5  | 1  | 6  | rw | Filter FIFO assignment for filter 5
   *CAN_CAN_FFA1R_FFA6* | 6  | 1  | 7  | rw | Filter FIFO assignment for filter 6
   *CAN_CAN_FFA1R_FFA7* | 7  | 1  | 8  | rw | Filter FIFO assignment for filter 7
   *CAN_CAN_FFA1R_FFA8* | 8  | 1  | 9  | rw | Filter FIFO assignment for filter 8
   *CAN_CAN_FFA1R_FFA9* | 9  | 1  | 10 | rw | Filter FIFO assignment for filter 9
  *CAN_CAN_FFA1R_FFA10* | 10 | 1  | 11 | rw | Filter FIFO assignment for filter 10
  *CAN_CAN_FFA1R_FFA11* | 11 | 1  | 12 | rw | Filter FIFO assignment for filter 11
  *CAN_CAN_FFA1R_FFA12* | 12 | 1  | 13 | rw | Filter FIFO assignment for filter 12
  *CAN_CAN_FFA1R_FFA13* | 13 | 1  | 14 | rw | Filter FIFO assignment for filter 13
  *CAN_CAN_FFA1R_FFA14* | 14 | 1  | 15 | rw | Filter FIFO assignment for filter 14
  *CAN_CAN_FFA1R_FFA15* | 15 | 1  | 16 | rw | Filter FIFO assignment for filter 15
  *CAN_CAN_FFA1R_FFA16* | 16 | 1  | 17 | rw | Filter FIFO assignment for filter 16
  *CAN_CAN_FFA1R_FFA17* | 17 | 1  | 18 | rw | Filter FIFO assignment for filter 17
  *CAN_CAN_FFA1R_FFA18* | 18 | 1  | 19 | rw | Filter FIFO assignment for filter 18
  *CAN_CAN_FFA1R_FFA19* | 19 | 1  | 20 | rw | Filter FIFO assignment for filter 19
  *CAN_CAN_FFA1R_FFA20* | 20 | 1  | 21 | rw | Filter FIFO assignment for filter 20
  *CAN_CAN_FFA1R_FFA21* | 21 | 1  | 22 | rw | Filter FIFO assignment for filter 21
  *CAN_CAN_FFA1R_FFA22* | 22 | 1  | 23 | rw | Filter FIFO assignment for filter 22
  *CAN_CAN_FFA1R_FFA23* | 23 | 1  | 24 | rw | Filter FIFO assignment for filter 23
  *CAN_CAN_FFA1R_FFA24* | 24 | 1  | 25 | rw | Filter FIFO assignment for filter 24
  *CAN_CAN_FFA1R_FFA25* | 25 | 1  | 26 | rw | Filter FIFO assignment for filter 25
  *CAN_CAN_FFA1R_FFA26* | 26 | 1  | 27 | rw | Filter FIFO assignment for filter 26
  *CAN_CAN_FFA1R_FFA27* | 27 | 1  | 28 | rw | Filter FIFO assignment for filter 27
 ---------------------+----+----+----+----+--------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_CAN_FA1R*
 Address:     $4000661C
 Reset:       $00000000
 Description: CAN_FA1R
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=862
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------
   *CAN_CAN_FA1R_FACT0* | 0  | 1  | 1  | rw | Filter active
   *CAN_CAN_FA1R_FACT1* | 1  | 1  | 2  | rw | Filter active
   *CAN_CAN_FA1R_FACT2* | 2  | 1  | 3  | rw | Filter active
   *CAN_CAN_FA1R_FACT3* | 3  | 1  | 4  | rw | Filter active
   *CAN_CAN_FA1R_FACT4* | 4  | 1  | 5  | rw | Filter active
   *CAN_CAN_FA1R_FACT5* | 5  | 1  | 6  | rw | Filter active
   *CAN_CAN_FA1R_FACT6* | 6  | 1  | 7  | rw | Filter active
   *CAN_CAN_FA1R_FACT7* | 7  | 1  | 8  | rw | Filter active
   *CAN_CAN_FA1R_FACT8* | 8  | 1  | 9  | rw | Filter active
   *CAN_CAN_FA1R_FACT9* | 9  | 1  | 10 | rw | Filter active
  *CAN_CAN_FA1R_FACT10* | 10 | 1  | 11 | rw | Filter active
  *CAN_CAN_FA1R_FACT11* | 11 | 1  | 12 | rw | Filter active
  *CAN_CAN_FA1R_FACT12* | 12 | 1  | 13 | rw | Filter active
  *CAN_CAN_FA1R_FACT13* | 13 | 1  | 14 | rw | Filter active
  *CAN_CAN_FA1R_FACT14* | 14 | 1  | 15 | rw | Filter active
  *CAN_CAN_FA1R_FACT15* | 15 | 1  | 16 | rw | Filter active
  *CAN_CAN_FA1R_FACT16* | 16 | 1  | 17 | rw | Filter active
  *CAN_CAN_FA1R_FACT17* | 17 | 1  | 18 | rw | Filter active
  *CAN_CAN_FA1R_FACT18* | 18 | 1  | 19 | rw | Filter active
  *CAN_CAN_FA1R_FACT19* | 19 | 1  | 20 | rw | Filter active
  *CAN_CAN_FA1R_FACT20* | 20 | 1  | 21 | rw | Filter active
  *CAN_CAN_FA1R_FACT21* | 21 | 1  | 22 | rw | Filter active
  *CAN_CAN_FA1R_FACT22* | 22 | 1  | 23 | rw | Filter active
  *CAN_CAN_FA1R_FACT23* | 23 | 1  | 24 | rw | Filter active
  *CAN_CAN_FA1R_FACT24* | 24 | 1  | 25 | rw | Filter active
  *CAN_CAN_FA1R_FACT25* | 25 | 1  | 26 | rw | Filter active
  *CAN_CAN_FA1R_FACT26* | 26 | 1  | 27 | rw | Filter active
  *CAN_CAN_FA1R_FACT27* | 27 | 1  | 28 | rw | Filter active
 ---------------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F0R1*
 Address:     $40006640
 Reset:       $00000000
 Description: Filter bank 0 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F0R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F0R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F0R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F0R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F0R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F0R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F0R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F0R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F0R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F0R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F0R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F0R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F0R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F0R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F0R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F0R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F0R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F0R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F0R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F0R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F0R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F0R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F0R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F0R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F0R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F0R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F0R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F0R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F0R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F0R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F0R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F0R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F0R2*
 Address:     $40006644
 Reset:       $00000000
 Description: Filter bank 0 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F0R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F0R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F0R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F0R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F0R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F0R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F0R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F0R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F0R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F0R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F0R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F0R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F0R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F0R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F0R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F0R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F0R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F0R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F0R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F0R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F0R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F0R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F0R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F0R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F0R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F0R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F0R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F0R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F0R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F0R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F0R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F0R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F1R1*
 Address:     $40006648
 Reset:       $00000000
 Description: Filter bank 1 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F1R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F1R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F1R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F1R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F1R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F1R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F1R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F1R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F1R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F1R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F1R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F1R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F1R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F1R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F1R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F1R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F1R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F1R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F1R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F1R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F1R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F1R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F1R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F1R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F1R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F1R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F1R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F1R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F1R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F1R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F1R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F1R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F1R2*
 Address:     $4000664C
 Reset:       $00000000
 Description: Filter bank 1 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F1R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F1R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F1R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F1R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F1R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F1R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F1R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F1R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F1R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F1R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F1R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F1R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F1R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F1R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F1R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F1R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F1R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F1R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F1R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F1R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F1R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F1R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F1R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F1R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F1R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F1R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F1R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F1R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F1R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F1R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F1R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F1R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F2R1*
 Address:     $40006650
 Reset:       $00000000
 Description: Filter bank 2 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F2R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F2R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F2R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F2R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F2R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F2R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F2R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F2R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F2R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F2R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F2R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F2R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F2R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F2R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F2R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F2R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F2R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F2R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F2R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F2R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F2R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F2R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F2R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F2R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F2R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F2R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F2R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F2R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F2R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F2R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F2R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F2R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F2R2*
 Address:     $40006654
 Reset:       $00000000
 Description: Filter bank 2 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F2R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F2R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F2R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F2R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F2R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F2R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F2R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F2R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F2R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F2R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F2R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F2R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F2R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F2R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F2R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F2R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F2R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F2R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F2R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F2R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F2R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F2R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F2R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F2R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F2R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F2R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F2R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F2R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F2R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F2R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F2R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F2R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F3R1*
 Address:     $40006658
 Reset:       $00000000
 Description: Filter bank 3 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F3R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F3R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F3R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F3R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F3R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F3R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F3R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F3R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F3R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F3R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F3R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F3R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F3R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F3R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F3R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F3R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F3R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F3R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F3R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F3R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F3R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F3R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F3R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F3R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F3R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F3R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F3R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F3R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F3R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F3R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F3R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F3R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F3R2*
 Address:     $4000665C
 Reset:       $00000000
 Description: Filter bank 3 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F3R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F3R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F3R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F3R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F3R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F3R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F3R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F3R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F3R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F3R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F3R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F3R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F3R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F3R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F3R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F3R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F3R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F3R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F3R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F3R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F3R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F3R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F3R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F3R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F3R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F3R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F3R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F3R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F3R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F3R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F3R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F3R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F4R1*
 Address:     $40006660
 Reset:       $00000000
 Description: Filter bank 4 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F4R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F4R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F4R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F4R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F4R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F4R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F4R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F4R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F4R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F4R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F4R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F4R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F4R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F4R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F4R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F4R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F4R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F4R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F4R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F4R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F4R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F4R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F4R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F4R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F4R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F4R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F4R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F4R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F4R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F4R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F4R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F4R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F4R2*
 Address:     $40006664
 Reset:       $00000000
 Description: Filter bank 4 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F4R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F4R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F4R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F4R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F4R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F4R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F4R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F4R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F4R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F4R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F4R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F4R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F4R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F4R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F4R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F4R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F4R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F4R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F4R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F4R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F4R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F4R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F4R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F4R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F4R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F4R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F4R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F4R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F4R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F4R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F4R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F4R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F5R1*
 Address:     $40006668
 Reset:       $00000000
 Description: Filter bank 5 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F5R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F5R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F5R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F5R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F5R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F5R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F5R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F5R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F5R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F5R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F5R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F5R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F5R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F5R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F5R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F5R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F5R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F5R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F5R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F5R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F5R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F5R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F5R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F5R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F5R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F5R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F5R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F5R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F5R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F5R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F5R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F5R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F5R2*
 Address:     $4000666C
 Reset:       $00000000
 Description: Filter bank 5 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F5R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F5R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F5R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F5R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F5R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F5R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F5R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F5R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F5R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F5R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F5R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F5R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F5R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F5R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F5R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F5R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F5R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F5R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F5R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F5R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F5R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F5R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F5R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F5R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F5R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F5R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F5R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F5R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F5R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F5R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F5R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F5R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F6R1*
 Address:     $40006670
 Reset:       $00000000
 Description: Filter bank 6 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F6R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F6R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F6R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F6R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F6R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F6R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F6R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F6R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F6R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F6R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F6R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F6R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F6R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F6R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F6R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F6R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F6R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F6R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F6R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F6R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F6R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F6R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F6R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F6R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F6R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F6R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F6R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F6R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F6R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F6R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F6R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F6R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F6R2*
 Address:     $40006674
 Reset:       $00000000
 Description: Filter bank 6 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F6R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F6R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F6R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F6R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F6R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F6R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F6R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F6R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F6R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F6R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F6R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F6R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F6R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F6R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F6R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F6R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F6R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F6R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F6R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F6R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F6R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F6R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F6R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F6R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F6R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F6R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F6R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F6R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F6R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F6R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F6R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F6R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F7R1*
 Address:     $40006678
 Reset:       $00000000
 Description: Filter bank 7 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F7R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F7R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F7R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F7R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F7R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F7R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F7R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F7R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F7R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F7R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F7R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F7R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F7R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F7R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F7R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F7R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F7R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F7R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F7R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F7R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F7R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F7R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F7R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F7R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F7R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F7R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F7R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F7R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F7R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F7R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F7R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F7R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F7R2*
 Address:     $4000667C
 Reset:       $00000000
 Description: Filter bank 7 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F7R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F7R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F7R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F7R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F7R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F7R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F7R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F7R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F7R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F7R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F7R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F7R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F7R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F7R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F7R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F7R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F7R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F7R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F7R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F7R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F7R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F7R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F7R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F7R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F7R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F7R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F7R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F7R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F7R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F7R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F7R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F7R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F8R1*
 Address:     $40006680
 Reset:       $00000000
 Description: Filter bank 8 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F8R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F8R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F8R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F8R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F8R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F8R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F8R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F8R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F8R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F8R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F8R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F8R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F8R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F8R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F8R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F8R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F8R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F8R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F8R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F8R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F8R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F8R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F8R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F8R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F8R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F8R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F8R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F8R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F8R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F8R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F8R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F8R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F8R2*
 Address:     $40006684
 Reset:       $00000000
 Description: Filter bank 8 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F8R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F8R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F8R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F8R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F8R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F8R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F8R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F8R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F8R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F8R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F8R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F8R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F8R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F8R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F8R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F8R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F8R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F8R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F8R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F8R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F8R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F8R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F8R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F8R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F8R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F8R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F8R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F8R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F8R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F8R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F8R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F8R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F9R1*
 Address:     $40006688
 Reset:       $00000000
 Description: Filter bank 9 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F9R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F9R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F9R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F9R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F9R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F9R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F9R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F9R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F9R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F9R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F9R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F9R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F9R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F9R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F9R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F9R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F9R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F9R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F9R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F9R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F9R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F9R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F9R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F9R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F9R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F9R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F9R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F9R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F9R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F9R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F9R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F9R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F9R2*
 Address:     $4000668C
 Reset:       $00000000
 Description: Filter bank 9 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------+----+----+----+----+-------------
       Bitfield | bo | bw | be | ac | Description
 ---------------+----+----+----+----+-------------
   *CAN_F9R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F9R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F9R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F9R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F9R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F9R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F9R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F9R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F9R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F9R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F9R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F9R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F9R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F9R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F9R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F9R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F9R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F9R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F9R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F9R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F9R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F9R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F9R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F9R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F9R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F9R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F9R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F9R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F9R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F9R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F9R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F9R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ---------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F10R1*
 Address:     $40006690
 Reset:       $00000000
 Description: Filter bank 10 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F10R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F10R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F10R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F10R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F10R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F10R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F10R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F10R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F10R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F10R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F10R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F10R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F10R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F10R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F10R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F10R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F10R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F10R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F10R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F10R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F10R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F10R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F10R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F10R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F10R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F10R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F10R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F10R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F10R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F10R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F10R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F10R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F10R2*
 Address:     $40006694
 Reset:       $00000000
 Description: Filter bank 10 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F10R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F10R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F10R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F10R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F10R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F10R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F10R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F10R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F10R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F10R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F10R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F10R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F10R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F10R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F10R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F10R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F10R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F10R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F10R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F10R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F10R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F10R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F10R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F10R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F10R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F10R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F10R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F10R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F10R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F10R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F10R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F10R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F11R1*
 Address:     $40006698
 Reset:       $00000000
 Description: Filter bank 11 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F11R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F11R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F11R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F11R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F11R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F11R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F11R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F11R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F11R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F11R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F11R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F11R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F11R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F11R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F11R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F11R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F11R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F11R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F11R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F11R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F11R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F11R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F11R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F11R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F11R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F11R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F11R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F11R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F11R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F11R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F11R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F11R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F11R2*
 Address:     $4000669C
 Reset:       $00000000
 Description: Filter bank 11 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F11R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F11R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F11R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F11R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F11R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F11R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F11R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F11R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F11R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F11R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F11R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F11R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F11R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F11R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F11R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F11R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F11R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F11R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F11R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F11R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F11R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F11R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F11R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F11R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F11R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F11R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F11R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F11R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F11R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F11R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F11R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F11R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F12R1*
 Address:     $400066A0
 Reset:       $00000000
 Description: Filter bank 4 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F12R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F12R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F12R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F12R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F12R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F12R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F12R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F12R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F12R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F12R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F12R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F12R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F12R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F12R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F12R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F12R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F12R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F12R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F12R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F12R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F12R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F12R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F12R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F12R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F12R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F12R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F12R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F12R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F12R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F12R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F12R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F12R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F12R2*
 Address:     $400066A4
 Reset:       $00000000
 Description: Filter bank 12 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F12R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F12R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F12R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F12R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F12R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F12R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F12R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F12R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F12R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F12R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F12R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F12R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F12R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F12R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F12R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F12R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F12R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F12R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F12R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F12R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F12R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F12R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F12R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F12R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F12R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F12R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F12R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F12R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F12R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F12R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F12R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F12R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F13R1*
 Address:     $400066A8
 Reset:       $00000000
 Description: Filter bank 13 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F13R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F13R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F13R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F13R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F13R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F13R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F13R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F13R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F13R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F13R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F13R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F13R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F13R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F13R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F13R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F13R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F13R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F13R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F13R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F13R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F13R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F13R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F13R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F13R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F13R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F13R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F13R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F13R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F13R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F13R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F13R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F13R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F13R2*
 Address:     $400066AC
 Reset:       $00000000
 Description: Filter bank 13 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F13R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F13R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F13R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F13R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F13R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F13R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F13R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F13R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F13R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F13R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F13R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F13R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F13R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F13R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F13R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F13R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F13R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F13R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F13R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F13R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F13R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F13R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F13R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F13R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F13R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F13R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F13R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F13R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F13R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F13R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F13R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F13R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F14R1*
 Address:     $400066B0
 Reset:       $00000000
 Description: Filter bank 14 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F14R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F14R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F14R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F14R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F14R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F14R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F14R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F14R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F14R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F14R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F14R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F14R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F14R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F14R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F14R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F14R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F14R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F14R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F14R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F14R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F14R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F14R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F14R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F14R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F14R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F14R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F14R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F14R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F14R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F14R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F14R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F14R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F14R2*
 Address:     $400066B4
 Reset:       $00000000
 Description: Filter bank 14 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F14R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F14R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F14R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F14R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F14R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F14R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F14R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F14R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F14R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F14R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F14R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F14R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F14R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F14R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F14R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F14R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F14R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F14R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F14R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F14R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F14R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F14R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F14R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F14R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F14R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F14R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F14R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F14R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F14R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F14R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F14R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F14R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F15R1*
 Address:     $400066B8
 Reset:       $00000000
 Description: Filter bank 15 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F15R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F15R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F15R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F15R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F15R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F15R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F15R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F15R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F15R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F15R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F15R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F15R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F15R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F15R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F15R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F15R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F15R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F15R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F15R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F15R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F15R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F15R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F15R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F15R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F15R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F15R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F15R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F15R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F15R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F15R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F15R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F15R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F15R2*
 Address:     $400066BC
 Reset:       $00000000
 Description: Filter bank 15 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F15R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F15R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F15R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F15R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F15R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F15R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F15R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F15R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F15R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F15R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F15R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F15R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F15R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F15R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F15R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F15R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F15R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F15R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F15R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F15R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F15R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F15R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F15R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F15R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F15R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F15R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F15R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F15R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F15R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F15R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F15R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F15R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F16R1*
 Address:     $400066C0
 Reset:       $00000000
 Description: Filter bank 16 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F16R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F16R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F16R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F16R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F16R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F16R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F16R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F16R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F16R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F16R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F16R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F16R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F16R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F16R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F16R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F16R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F16R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F16R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F16R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F16R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F16R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F16R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F16R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F16R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F16R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F16R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F16R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F16R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F16R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F16R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F16R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F16R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F16R2*
 Address:     $400066C4
 Reset:       $00000000
 Description: Filter bank 16 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F16R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F16R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F16R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F16R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F16R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F16R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F16R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F16R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F16R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F16R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F16R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F16R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F16R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F16R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F16R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F16R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F16R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F16R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F16R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F16R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F16R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F16R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F16R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F16R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F16R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F16R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F16R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F16R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F16R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F16R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F16R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F16R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F17R1*
 Address:     $400066C8
 Reset:       $00000000
 Description: Filter bank 17 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F17R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F17R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F17R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F17R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F17R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F17R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F17R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F17R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F17R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F17R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F17R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F17R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F17R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F17R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F17R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F17R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F17R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F17R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F17R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F17R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F17R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F17R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F17R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F17R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F17R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F17R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F17R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F17R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F17R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F17R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F17R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F17R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F17R2*
 Address:     $400066CC
 Reset:       $00000000
 Description: Filter bank 17 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F17R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F17R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F17R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F17R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F17R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F17R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F17R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F17R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F17R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F17R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F17R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F17R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F17R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F17R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F17R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F17R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F17R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F17R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F17R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F17R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F17R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F17R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F17R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F17R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F17R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F17R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F17R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F17R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F17R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F17R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F17R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F17R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F18R1*
 Address:     $400066D0
 Reset:       $00000000
 Description: Filter bank 18 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F18R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F18R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F18R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F18R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F18R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F18R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F18R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F18R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F18R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F18R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F18R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F18R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F18R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F18R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F18R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F18R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F18R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F18R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F18R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F18R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F18R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F18R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F18R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F18R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F18R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F18R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F18R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F18R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F18R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F18R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F18R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F18R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F18R2*
 Address:     $400066D4
 Reset:       $00000000
 Description: Filter bank 18 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F18R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F18R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F18R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F18R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F18R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F18R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F18R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F18R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F18R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F18R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F18R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F18R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F18R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F18R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F18R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F18R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F18R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F18R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F18R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F18R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F18R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F18R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F18R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F18R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F18R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F18R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F18R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F18R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F18R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F18R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F18R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F18R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F19R1*
 Address:     $400066D8
 Reset:       $00000000
 Description: Filter bank 19 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F19R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F19R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F19R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F19R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F19R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F19R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F19R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F19R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F19R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F19R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F19R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F19R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F19R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F19R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F19R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F19R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F19R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F19R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F19R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F19R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F19R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F19R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F19R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F19R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F19R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F19R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F19R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F19R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F19R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F19R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F19R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F19R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F19R2*
 Address:     $400066DC
 Reset:       $00000000
 Description: Filter bank 19 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F19R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F19R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F19R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F19R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F19R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F19R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F19R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F19R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F19R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F19R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F19R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F19R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F19R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F19R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F19R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F19R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F19R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F19R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F19R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F19R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F19R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F19R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F19R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F19R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F19R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F19R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F19R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F19R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F19R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F19R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F19R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F19R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F20R1*
 Address:     $400066E0
 Reset:       $00000000
 Description: Filter bank 20 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F20R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F20R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F20R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F20R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F20R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F20R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F20R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F20R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F20R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F20R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F20R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F20R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F20R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F20R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F20R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F20R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F20R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F20R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F20R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F20R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F20R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F20R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F20R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F20R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F20R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F20R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F20R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F20R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F20R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F20R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F20R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F20R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F20R2*
 Address:     $400066E4
 Reset:       $00000000
 Description: Filter bank 20 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F20R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F20R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F20R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F20R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F20R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F20R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F20R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F20R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F20R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F20R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F20R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F20R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F20R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F20R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F20R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F20R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F20R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F20R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F20R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F20R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F20R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F20R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F20R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F20R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F20R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F20R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F20R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F20R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F20R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F20R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F20R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F20R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F21R1*
 Address:     $400066E8
 Reset:       $00000000
 Description: Filter bank 21 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F21R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F21R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F21R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F21R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F21R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F21R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F21R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F21R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F21R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F21R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F21R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F21R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F21R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F21R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F21R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F21R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F21R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F21R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F21R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F21R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F21R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F21R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F21R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F21R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F21R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F21R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F21R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F21R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F21R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F21R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F21R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F21R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F21R2*
 Address:     $400066EC
 Reset:       $00000000
 Description: Filter bank 21 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F21R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F21R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F21R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F21R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F21R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F21R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F21R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F21R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F21R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F21R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F21R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F21R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F21R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F21R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F21R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F21R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F21R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F21R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F21R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F21R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F21R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F21R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F21R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F21R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F21R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F21R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F21R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F21R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F21R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F21R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F21R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F21R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F22R1*
 Address:     $400066F0
 Reset:       $00000000
 Description: Filter bank 22 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F22R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F22R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F22R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F22R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F22R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F22R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F22R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F22R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F22R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F22R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F22R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F22R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F22R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F22R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F22R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F22R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F22R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F22R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F22R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F22R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F22R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F22R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F22R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F22R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F22R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F22R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F22R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F22R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F22R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F22R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F22R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F22R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F22R2*
 Address:     $400066F4
 Reset:       $00000000
 Description: Filter bank 22 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F22R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F22R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F22R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F22R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F22R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F22R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F22R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F22R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F22R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F22R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F22R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F22R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F22R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F22R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F22R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F22R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F22R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F22R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F22R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F22R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F22R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F22R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F22R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F22R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F22R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F22R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F22R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F22R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F22R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F22R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F22R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F22R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F23R1*
 Address:     $400066F8
 Reset:       $00000000
 Description: Filter bank 23 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F23R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F23R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F23R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F23R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F23R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F23R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F23R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F23R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F23R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F23R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F23R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F23R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F23R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F23R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F23R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F23R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F23R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F23R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F23R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F23R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F23R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F23R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F23R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F23R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F23R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F23R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F23R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F23R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F23R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F23R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F23R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F23R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F23R2*
 Address:     $400066FC
 Reset:       $00000000
 Description: Filter bank 23 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F23R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F23R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F23R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F23R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F23R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F23R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F23R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F23R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F23R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F23R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F23R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F23R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F23R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F23R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F23R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F23R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F23R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F23R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F23R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F23R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F23R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F23R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F23R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F23R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F23R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F23R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F23R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F23R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F23R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F23R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F23R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F23R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F24R1*
 Address:     $40006700
 Reset:       $00000000
 Description: Filter bank 24 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F24R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F24R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F24R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F24R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F24R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F24R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F24R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F24R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F24R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F24R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F24R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F24R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F24R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F24R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F24R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F24R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F24R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F24R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F24R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F24R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F24R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F24R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F24R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F24R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F24R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F24R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F24R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F24R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F24R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F24R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F24R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F24R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F24R2*
 Address:     $40006704
 Reset:       $00000000
 Description: Filter bank 24 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F24R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F24R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F24R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F24R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F24R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F24R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F24R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F24R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F24R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F24R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F24R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F24R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F24R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F24R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F24R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F24R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F24R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F24R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F24R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F24R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F24R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F24R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F24R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F24R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F24R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F24R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F24R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F24R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F24R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F24R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F24R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F24R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F25R1*
 Address:     $40006708
 Reset:       $00000000
 Description: Filter bank 25 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F25R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F25R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F25R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F25R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F25R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F25R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F25R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F25R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F25R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F25R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F25R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F25R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F25R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F25R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F25R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F25R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F25R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F25R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F25R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F25R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F25R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F25R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F25R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F25R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F25R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F25R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F25R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F25R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F25R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F25R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F25R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F25R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F25R2*
 Address:     $4000670C
 Reset:       $00000000
 Description: Filter bank 25 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F25R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F25R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F25R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F25R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F25R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F25R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F25R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F25R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F25R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F25R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F25R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F25R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F25R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F25R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F25R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F25R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F25R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F25R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F25R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F25R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F25R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F25R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F25R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F25R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F25R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F25R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F25R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F25R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F25R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F25R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F25R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F25R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F26R1*
 Address:     $40006710
 Reset:       $00000000
 Description: Filter bank 26 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F26R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F26R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F26R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F26R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F26R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F26R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F26R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F26R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F26R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F26R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F26R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F26R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F26R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F26R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F26R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F26R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F26R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F26R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F26R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F26R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F26R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F26R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F26R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F26R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F26R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F26R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F26R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F26R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F26R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F26R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F26R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F26R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F26R2*
 Address:     $40006714
 Reset:       $00000000
 Description: Filter bank 26 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F26R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F26R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F26R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F26R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F26R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F26R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F26R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F26R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F26R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F26R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F26R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F26R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F26R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F26R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F26R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F26R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F26R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F26R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F26R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F26R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F26R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F26R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F26R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F26R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F26R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F26R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F26R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F26R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F26R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F26R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F26R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F26R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F27R1*
 Address:     $40006718
 Reset:       $00000000
 Description: Filter bank 27 register 1
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F27R1_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F27R1_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F27R1_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F27R1_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F27R1_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F27R1_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F27R1_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F27R1_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F27R1_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F27R1_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F27R1_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F27R1_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F27R1_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F27R1_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F27R1_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F27R1_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F27R1_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F27R1_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F27R1_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F27R1_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F27R1_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F27R1_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F27R1_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F27R1_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F27R1_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F27R1_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F27R1_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F27R1_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F27R1_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F27R1_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F27R1_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F27R1_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |CAN|
 Register:    *CAN_F27R2*
 Address:     $4000671C
 Reset:       $00000000
 Description: Filter bank 27 register 2
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=863
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+-------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+-------------
   *CAN_F27R2_FB0* | 0  | 1  | 1  | rw | Filter bits
   *CAN_F27R2_FB1* | 1  | 1  | 2  | rw | Filter bits
   *CAN_F27R2_FB2* | 2  | 1  | 3  | rw | Filter bits
   *CAN_F27R2_FB3* | 3  | 1  | 4  | rw | Filter bits
   *CAN_F27R2_FB4* | 4  | 1  | 5  | rw | Filter bits
   *CAN_F27R2_FB5* | 5  | 1  | 6  | rw | Filter bits
   *CAN_F27R2_FB6* | 6  | 1  | 7  | rw | Filter bits
   *CAN_F27R2_FB7* | 7  | 1  | 8  | rw | Filter bits
   *CAN_F27R2_FB8* | 8  | 1  | 9  | rw | Filter bits
   *CAN_F27R2_FB9* | 9  | 1  | 10 | rw | Filter bits
  *CAN_F27R2_FB10* | 10 | 1  | 11 | rw | Filter bits
  *CAN_F27R2_FB11* | 11 | 1  | 12 | rw | Filter bits
  *CAN_F27R2_FB12* | 12 | 1  | 13 | rw | Filter bits
  *CAN_F27R2_FB13* | 13 | 1  | 14 | rw | Filter bits
  *CAN_F27R2_FB14* | 14 | 1  | 15 | rw | Filter bits
  *CAN_F27R2_FB15* | 15 | 1  | 16 | rw | Filter bits
  *CAN_F27R2_FB16* | 16 | 1  | 17 | rw | Filter bits
  *CAN_F27R2_FB17* | 17 | 1  | 18 | rw | Filter bits
  *CAN_F27R2_FB18* | 18 | 1  | 19 | rw | Filter bits
  *CAN_F27R2_FB19* | 19 | 1  | 20 | rw | Filter bits
  *CAN_F27R2_FB20* | 20 | 1  | 21 | rw | Filter bits
  *CAN_F27R2_FB21* | 21 | 1  | 22 | rw | Filter bits
  *CAN_F27R2_FB22* | 22 | 1  | 23 | rw | Filter bits
  *CAN_F27R2_FB23* | 23 | 1  | 24 | rw | Filter bits
  *CAN_F27R2_FB24* | 24 | 1  | 25 | rw | Filter bits
  *CAN_F27R2_FB25* | 25 | 1  | 26 | rw | Filter bits
  *CAN_F27R2_FB26* | 26 | 1  | 27 | rw | Filter bits
  *CAN_F27R2_FB27* | 27 | 1  | 28 | rw | Filter bits
  *CAN_F27R2_FB28* | 28 | 1  | 29 | rw | Filter bits
  *CAN_F27R2_FB29* | 29 | 1  | 30 | rw | Filter bits
  *CAN_F27R2_FB30* | 30 | 1  | 31 | rw | Filter bits
  *CAN_F27R2_FB31* | 31 | 1  | 32 | rw | Filter bits
 ----------------+----+----+----+----+-------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_CR*
 Address:     $40007400
 Reset:       $00000000
 Description: control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=289
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+----------------------------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+----------------------------------------------------
        *DAC_CR_EN1* | 0  | 1  | 1  | rw | DAC channel1 enable
      *DAC_CR_BOFF1* | 1  | 1  | 2  | rw | DAC channel1 output buffer disable
       *DAC_CR_TEN1* | 2  | 1  | 3  | rw | DAC channel1 trigger enable
      *DAC_CR_TSEL1* | 3  | 3  | 6  | rw | DAC channel1 trigger selection
      *DAC_CR_WAVE1* | 6  | 2  | 8  | rw | DAC channel1 noise/triangle wave generation enable
      *DAC_CR_MAMP1* | 8  | 4  | 12 | rw | DAC channel1 mask/amplitude selector
     *DAC_CR_DMAEN1* | 12 | 1  | 13 | rw | DAC channel1 DMA enable
  *DAC_CR_DMAUDRIE1* | 13 | 1  | 14 | rw | DAC channel1 DMA Underrun Interrupt enable
        *DAC_CR_EN2* | 16 | 1  | 17 | rw | DAC channel2 enable
      *DAC_CR_BOFF2* | 17 | 1  | 18 | rw | DAC channel2 output buffer disable
       *DAC_CR_TEN2* | 18 | 1  | 19 | rw | DAC channel2 trigger enable
      *DAC_CR_TSEL2* | 19 | 3  | 22 | rw | DAC channel2 trigger selection
      *DAC_CR_WAVE2* | 22 | 2  | 24 | rw | DAC channel2 noise/triangle wave generation enable
      *DAC_CR_MAMP2* | 24 | 4  | 28 | rw | DAC channel2 mask/amplitude selector
     *DAC_CR_DMAEN2* | 28 | 1  | 29 | rw | DAC channel2 DMA enable
  *DAC_CR_DMAUDRIE2* | 29 | 1  | 30 | rw | DAC channel2 DMA underrun interrupt enable
 ------------------+----+----+----+----+----------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_SWTRIGR*
 Address:     $40007404
 Reset:       $00000000
 Description: software trigger register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=293
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+-------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+-------------------------------
  *DAC_SWTRIGR_SWTRIG1* | 0  | 1  | 1  | rw | DAC channel1 software trigger
  *DAC_SWTRIGR_SWTRIG2* | 1  | 1  | 2  | rw | DAC channel2 software trigger
 ---------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR12R1*
 Address:     $40007408
 Reset:       $00000000
 Description: channel1 12-bit right-aligned data holding register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=293
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+----------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+----------------------------------------
  *DAC_DHR12R1_DACC1DHR* | 0  | 12 | 12 | rw | DAC channel1 12-bit right-aligned data
 ----------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR12L1*
 Address:     $4000740C
 Reset:       $00000000
 Description: channel1 12-bit left aligned data holding register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=294
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+---------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+---------------------------------------
  *DAC_DHR12L1_DACC1DHR* | 4  | 12 | 16 | rw | DAC channel1 12-bit left-aligned data
 ----------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR8R1*
 Address:     $40007410
 Reset:       $00000000
 Description: channel1 8-bit right aligned data holding register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=294
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *DAC_DHR8R1_DACC1DHR* | 0  | 8  | 8  | rw | DAC channel1 8-bit right-aligned data
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DOR1*
 Address:     $4000742C
 Reset:       $00000000
 Description: channel1 data output register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=297
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+--------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+--------------------------
  *DAC_DOR1_DACC1DOR* | 0  | 12 | 12 | rw | DAC channel1 data output
 -------------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_SR*
 Address:     $40007434
 Reset:       $00000000
 Description: status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=297
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------------------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------------------------
  *DAC_SR_DMAUDR2* | 29 | 1  | 30 | rw | DAC channel2 DMA underrun flag
  *DAC_SR_DMAUDR1* | 13 | 1  | 14 | rw | DAC channel1 DMA underrun flag
 ----------------+----+----+----+----+--------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR12R2*
 Address:     $40007414
 Reset:       $00000000
 Description: DAC channel2 12-bit right-aligned data holding register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=294
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+----------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+----------------------------------------
  *DAC_DHR12R2_DACC2DHR* | 0  | 12 | 12 | rw | DAC channel2 12-bit right-aligned data
 ----------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR12L2*
 Address:     $40007418
 Reset:       $00000000
 Description: DAC channel2 12-bit left-aligned data holding register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=295
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+---------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+---------------------------------------
  *DAC_DHR12L2_DACC2DHR* | 4  | 12 | 16 | rw | DAC channel2 12-bit left-aligned data
 ----------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR8R2*
 Address:     $4000741C
 Reset:       $00000000
 Description: DAC channel2 8-bit right-aligned data holding register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=295
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *DAC_DHR8R2_DACC2DHR* | 0  | 8  | 8  | rw | DAC channel2 8-bit right-aligned data
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR12RD*
 Address:     $40007420
 Reset:       $00000000
 Description: DHR12RD
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=296
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+----------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+----------------------------------------
  *DAC_DHR12RD_DACC1DHR* | 0  | 12 | 12 | rw | DAC channel1 12-bit right-aligned data
  *DAC_DHR12RD_DACC2DHR* | 16 | 12 | 28 | rw | DAC channel2 12-bit right-aligned data
 ----------------------+----+----+----+----+----------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR12LD*
 Address:     $40007424
 Reset:       $00000000
 Description: Dual DAC 12-bit left-aligned data holding register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=296
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+---------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+---------------------------------------
  *DAC_DHR12LD_DACC1DHR* | 4  | 12 | 16 | rw | DAC channel1 12-bit left-aligned data
  *DAC_DHR12LD_DACC2DHR* | 20 | 12 | 32 | rw | DAC channel2 12-bit left-aligned data
 ----------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DHR8RD*
 Address:     $40007428
 Reset:       $00000000
 Description: Dual DAC 8-bit right-aligned data holding register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=296
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------------------
  *DAC_DHR8RD_DACC2DHR* | 8  | 8  | 16 | rw | DAC channel2 8-bit right-aligned data
  *DAC_DHR8RD_DACC1DHR* | 0  | 8  | 8  | rw | DAC channel1 8-bit right-aligned data
 ---------------------+----+----+----+----+---------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |DAC|
 Register:    *DAC_DOR2*
 Address:     $40007430
 Reset:       $00000000
 Description: DAC channel2 data output register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=297
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+--------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+--------------------------
  *DAC_DOR2_DACC2DOR* | 0  | 12 | 12 | rw | DAC channel2 data output
 -------------------+----+----+----+----+--------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SCB|
 Register:    *SCB_CPUID*
 Address:     $E000ED00
 Reset:       $410FC241
 Description: CPUID base register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------------+----+----+----+----+------------------------------
               Bitfield | bo | bw | be | ac | Description
 -----------------------+----+----+----+----+------------------------------
     *SCB_CPUID_Revision* | 0  | 4  | 4  | rw | Revision number
       *SCB_CPUID_PartNo* | 4  | 12 | 16 | rw | Part number of the processor
     *SCB_CPUID_Constant* | 16 | 4  | 20 | rw | Reads as F
      *SCB_CPUID_Variant* | 20 | 4  | 24 | rw | Variant number
  *SCB_CPUID_Implementer* | 24 | 8  | 32 | rw | Implementer code
 -----------------------+----+----+----+----+------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SCB|
 Register:    *SCB_ICSR*
 Address:     $E000ED04
 Reset:       $00000000
 Description: Interrupt control and state register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+-------------------------------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+-------------------------------------
   *SCB_ICSR_VECTACTIVE* | 0  | 6  | 6  | rw | Active vector
  *SCB_ICSR_VECTPENDING* | 12 | 6  | 18 | rw | Pending vector
   *SCB_ICSR_ISRPENDING* | 22 | 1  | 23 | rw | Interrupt pending flag
    *SCB_ICSR_PENDSTCLR* | 25 | 1  | 26 | rw | SysTick exception clear-pending bit
    *SCB_ICSR_PENDSTSET* | 26 | 1  | 27 | rw | SysTick exception set-pending bit
    *SCB_ICSR_PENDSVCLR* | 27 | 1  | 28 | rw | PendSV clear-pending bit
    *SCB_ICSR_PENDSVSET* | 28 | 1  | 29 | rw | PendSV set-pending bit
   *SCB_ICSR_NMIPENDSET* | 31 | 1  | 32 | rw | NMI set-pending bit.
 ----------------------+----+----+----+----+-------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SCB|
 Register:    *SCB_AIRCR*
 Address:     $E000ED0C
 Reset:       $00000000
 Description: Application interrupt and reset control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------------+----+----+----+----+---------------
                 Bitfield | bo | bw | be | ac | Description
 -------------------------+----+----+----+----+---------------
  *SCB_AIRCR_VECTCLRACTIVE* | 1  | 1  | 2  | rw | VECTCLRACTIVE
    *SCB_AIRCR_SYSRESETREQ* | 2  | 1  | 3  | rw | SYSRESETREQ
      *SCB_AIRCR_ENDIANESS* | 15 | 1  | 16 | rw | ENDIANESS
    *SCB_AIRCR_VECTKEYSTAT* | 16 | 16 | 32 | rw | Register key
 -------------------------+----+----+----+----+---------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SCB|
 Register:    *SCB_SCR*
 Address:     $E000ED10
 Reset:       $00000000
 Description: System control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 ---------------------+----+----+----+----+---------------------------
             Bitfield | bo | bw | be | ac | Description
 ---------------------+----+----+----+----+---------------------------
  *SCB_SCR_SLEEPONEXIT* | 1  | 1  | 2  | rw | SLEEPONEXIT
    *SCB_SCR_SLEEPDEEP* | 2  | 1  | 3  | rw | SLEEPDEEP
   *SCB_SCR_SEVEONPEND* | 4  | 1  | 5  | rw | Send Event on Pending bit
 ---------------------+----+----+----+----+---------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SCB|
 Register:    *SCB_CCR*
 Address:     $E000ED14
 Reset:       $00000000
 Description: Configuration and control register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------------+----+----+----+----+--------------
              Bitfield | bo | bw | be | ac | Description
 ----------------------+----+----+----+----+--------------
  *SCB_CCR_UNALIGN__TRP* | 3  | 1  | 4  | rw | UNALIGN_ TRP
      *SCB_CCR_STKALIGN* | 9  | 1  | 10 | rw | STKALIGN
 ----------------------+----+----+----+----+--------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SCB|
 Register:    *SCB_SHPR2*
 Address:     $E000ED1C
 Reset:       $00000000
 Description: System handler priority registers
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-------------------------------
  *SCB_SHPR2_PRI_11* | 24 | 8  | 32 | rw | Priority of system handler 11
 ------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |SCB|
 Register:    *SCB_SHPR3*
 Address:     $E000ED20
 Reset:       $00000000
 Description: System handler priority registers
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 ------------------+----+----+----+----+-------------------------------
          Bitfield | bo | bw | be | ac | Description
 ------------------+----+----+----+----+-------------------------------
  *SCB_SHPR3_PRI_14* | 16 | 8  | 24 | rw | Priority of system handler 14
  *SCB_SHPR3_PRI_15* | 24 | 8  | 32 | rw | Priority of system handler 15
 ------------------+----+----+----+----+-------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |STK|
 Register:    *STK_CSR*
 Address:     $E000E010
 Reset:       $0X00000000
 Description: SysTick control and status register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 -------------------+----+----+----+----+----------------------------------
           Bitfield | bo | bw | be | ac | Description
 -------------------+----+----+----+----+----------------------------------
     *STK_CSR_ENABLE* | 0  | 1  | 1  | rw | Counter enable
    *STK_CSR_TICKINT* | 1  | 1  | 2  | rw | SysTick exception request enable
  *STK_CSR_CLKSOURCE* | 2  | 1  | 3  | rw | Clock source selection
  *STK_CSR_COUNTFLAG* | 16 | 1  | 17 | rw | COUNTFLAG
 -------------------+----+----+----+----+----------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |STK|
 Register:    *STK_RVR*
 Address:     $E000E014
 Reset:       $0X00000000
 Description: SysTick reload value register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 ----------------+----+----+----+----+--------------
        Bitfield | bo | bw | be | ac | Description
 ----------------+----+----+----+----+--------------
  *STK_RVR_RELOAD* | 0  | 24 | 24 | rw | RELOAD value
 ----------------+----+----+----+----+--------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |STK|
 Register:    *STK_CVR*
 Address:     $E000E018
 Reset:       $0X00000000
 Description: SysTick current value register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-----------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-----------------------
  *STK_CVR_CURRENT* | 0  | 24 | 24 | rw | Current counter value
 -----------------+----+----+----+----+-----------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights


 BITFIELDS~

 Peripheral:  |STK|
 Register:    *STK_CALIB*
 Address:     $E000E01C
 Reset:       $0X00000000
 Description: SysTick calibration value register
 MCU:         STM32F0x1.svd
 Ref Manual:  file:///usr/home/brett/.vim/doc/RM0091%20Reference%20manual%20STM32F0xx.pdf#page=
              (place cursor on hyperlink, type 'gx' to follow)

 -----------------+----+----+----+----+-------------------------------------------------------
         Bitfield | bo | bw | be | ac | Description
 -----------------+----+----+----+----+-------------------------------------------------------
  *STK_CALIB_TENMS* | 0  | 24 | 24 | rw | Calibration value
   *STK_CALIB_SKEW* | 30 | 1  | 31 | rw | SKEW flag: Indicates whether the TENMS value is exact
  *STK_CALIB_NOREF* | 31 | 1  | 32 | rw | NOREF flag. Reads as zero
 -----------------+----+----+----+----+-------------------------------------------------------
 (bo) bit offset, (bw) bitwidth, (be) bit end, (ac) access rights





# vim: ts=4 filetype=help
